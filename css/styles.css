:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* check for overflowed elements - use mobile devtools simulator

* {
    outline: 1px solid red;
}

*/
body {
  font-size: 100%;
  font-family: 'Lato', sans-serif;
  color: #212121;
}

@media (max-width: 70.625em) {
  body {
    font-size: .95em;
  }
}

section {
  padding: 6em 2em;
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #4f4f4f;
  margin-bottom: .2em;
}

.sect-heading {
  font-size: 2.3em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

.sect-heading-img {
  height: 13px;
  width: 142px;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

.line__subhdg {
  max-width: 1280px;
  text-transform: uppercase;
  color: #4f4f4f;
  font-size: 1.75em;
  margin: 0 auto 2em auto;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-column-gap: .5em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  letter-spacing: .02em;
  word-spacing: .05em;
}

.line__subhdg::before {
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, right top, left top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to left, #0188cb, transparent);
  border-radius: .625em;
}

.line__subhdg::after {
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, left top, right top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to right, #0188cb, transparent);
  border-radius: .625em;
}

/*** STYLES FOR THE MOBILE MENU ANIMATION ***/
.header__nav-item.testt {
  -webkit-transition: all 800ms ease-out;
  transition: all 800ms ease-out;
  position: relative;
}

.empty.yo {
  -webkit-transform: scale(50) rotate(180deg);
          transform: scale(50) rotate(180deg);
}

.empty {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: "";
  z-index: -1;
  -webkit-transform: scale(1) rotate(0);
          transform: scale(1) rotate(0);
  background-color: #fff;
  -webkit-transition: all 400ms ease-in;
  transition: all 400ms ease-in;
  pointer-events: none;
}

/*** END STYLES FOR THE MOBILE MENU ANIMATION ***/
.header {
  /* phone icon text  */
}

.header__top-sect {
  border-top: 5px solid #333333;
}

.header__top-sect-container {
  max-width: 1280px;
  margin: 0 auto;
}

.header__top-bar {
  background: url("../img/cner-536.png") no-repeat top center;
  height: 39px;
  width: 536px;
  position: relative;
  right: -55vw;
}

@media (max-width: 80em) {
  .header__top-bar {
    right: -50vw;
  }
}

@media (max-width: 70.625em) {
  .header__top-bar {
    right: -45vw;
  }
}

@media (max-width: 63.75em) {
  .header__top-bar {
    right: -40vw;
  }
}

@media (max-width: 57.5em) {
  .header__top-bar {
    right: -35vw;
  }
}

@media (max-width: 52.5em) {
  .header__top-bar {
    background: url("../img/cner-301.png") no-repeat top center;
    right: -57vw;
    width: 301px;
  }
}

@media (max-width: 45em) {
  .header__top-bar {
    right: -47vw;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar {
    background: none;
    width: 100%;
    right: 0;
  }
}

.header__top-bar-contact {
  position: absolute;
  right: 4em;
  top: 50%;
  -webkit-transform: translateY(calc(-50% - 5px));
          transform: translateY(calc(-50% - 5px));
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1em 0;
}

@media (max-width: 52.5em) {
  .header__top-bar-contact {
    right: 6em;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar-contact {
    right: .25em;
    z-index: 5565;
  }
}

.header__top-bar-item + .header__top-bar-item {
  margin-left: 1.5em;
}

@media (max-width: 52.5em) {
  .header__top-bar-item:last-of-type {
    display: none;
  }
}

.header__top-bar-item:first-of-type {
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
}

.header__top-bar-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.header__top-bar-icon {
  fill: #0188cb;
  margin-right: .3em;
  width: 1.2em;
  height: 1.2em;
}

.header__phone-icon {
  font-size: .9em;
}

@media (max-width: 38.4375em) {
  .header__phone-icon {
    font-size: .8em;
  }
}

.header__top-bar-link {
  color: #fff;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.header__top-bar-link:hover {
  color: #d9d9d9;
}

@media (max-width: 38.4375em) {
  .header__top-bar-link {
    color: #333;
  }
  .header__top-bar-link:hover {
    color: gray;
  }
}

.header__main-sect {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 2em;
}

@media (max-width: 63.75em) {
  .header__main-sect {
    padding: 0 1em;
  }
}

.header__logo {
  -webkit-transform: translateY(-37px);
          transform: translateY(-37px);
  margin-bottom: -30px;
}

@media (max-width: 38.4375em) {
  .header__logo {
    margin-left: auto;
    margin-right: auto;
  }
}

.header__logo-image {
  width: 15.625em;
  height: auto;
  display: block;
}

.header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header__nav-item {
  padding: .5em 0;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__nav-item + .header__nav-item {
  margin-left: 1em;
}

.header__nav-icon {
  fill: #333333;
  width: 1em;
  height: 1em;
}

.header__nav-item:hover {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
}

.header__nav-item:hover .header__nav-link {
  color: #0188cb;
}

.header__nav-item.clicked-parent {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link.clicked {
  color: #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link {
  font-size: .95em;
  letter-spacing: .05em;
  color: #333333;
  text-transform: uppercase;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

@media (max-width: 63.75em) {
  .header__nav-link {
    font-size: .85em;
  }
}

.header.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  z-index: 1001;
}

.header.sticky .header__top-sect {
  display: none;
}

.header.sticky .header__logo-image {
  width: 13.5em;
  height: auto;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

.header.sticky .header__logo {
  -webkit-transform: none;
          transform: none;
  margin-bottom: 0;
}

.header.sticky .header__nav-link {
  color: #fff;
}

.header.sticky .header__nav-item.has-submenu::after {
  color: #fff;
}

.navigation__checkbox {
  display: none;
}

@media (max-width: 57.5em) {
  .navigation__button {
    background-color: #444;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: fixed;
    top: 40px;
    right: 15px;
    z-index: 2000;
    -webkit-box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
            box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
  }
  .navigation__background {
    height: 40px;
    width: 40px;
    border-radius: 50%;
    position: fixed;
    top: 45px;
    right: 20px;
    background-image: radial-gradient(rgba(27, 71, 152, 0.8), rgba(1, 136, 203, 0.8));
    z-index: 1000;
    -webkit-transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1), -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
  }
  .header__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;
    opacity: 0;
    /* use transform instead for a smoother animation and also more performant  */
    -webkit-transform: translateX(-800px);
            transform: translateX(-800px);
    /* put the width 100% here  */
    width: 100%;
  }
  .header__nav-list {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: center;
    display: block;
  }
  .header__nav-item.clicked-parent {
    -webkit-box-shadow: none;
            box-shadow: none;
    background-color: #333;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item {
    margin-bottom: .5em;
    margin-top: .5em;
    margin-left: 0 !important;
    padding: .75em 1em;
    background-color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item:hover {
    -webkit-transform: translateX(0.75em);
            transform: translateX(0.75em);
    background-color: #333;
  }
  .header__nav-item:hover {
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  /*.header__nav-item.has-submenu::after {
        color: $royalblue;
    }*/
  /*.header__nav-item.has-submenu:hover::after {
        color: #fff;
    }*/
  .header__nav-link.clicked {
    color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-link {
    color: #1b4798;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .navigation__checkbox:checked ~ .navigation__background {
    -webkit-transform: scale(70);
            transform: scale(70);
  }
  .navigation__checkbox:checked ~ .header__nav {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link {
    color: #1b4798;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  /*.header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu::after {
        color: $royalblue;
    }*/
  /*.navigation__checkbox:checked ~ .header__nav .header__nav-item.clicked-parent.has-submenu::after  {
        color: #fff;
    }*/
  /*.header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.clicked-parent.has-submenu::after  {
        color: #fff;
    }*/
  /*.header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu:hover::after {
        color: #fff;
    }*/
  /*.navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu:hover > ul {
        opacity: 0;
        visibility: hidden;
        top: 300%;
    }*/
  .navigation__icon {
    position: relative;
    margin-top: 1.55em;
  }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 1.6em;
    height: 2px;
    background-color: #fff;
    display: inline-block;
  }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    -webkit-transition: all 400ms;
    transition: all 400ms;
    left: 0;
  }
  .navigation__icon::before {
    -webkit-transform: translateY(-0.45em);
            transform: translateY(-0.45em);
  }
  .navigation__icon::after {
    -webkit-transform: translateY(0.45em);
            transform: translateY(0.45em);
  }
  .navigation__button:hover .navigation__icon::before {
    -webkit-transform: translateY(-0.55em);
            transform: translateY(-0.55em);
  }
  .navigation__button:hover .navigation__icon::after {
    -webkit-transform: translateY(0.55em);
            transform: translateY(0.55em);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    background-color: transparent;
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    -webkit-transform: translateY(0) rotate(135deg);
            transform: translateY(0) rotate(135deg);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    -webkit-transform: translateY(0) rotate(-135deg);
            transform: translateY(0) rotate(-135deg);
  }
}

.hero {
  position: relative;
}

.hero__wrap {
  height: 80vh;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/hero.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/hero.jpg");
  background-size: cover;
  color: rgba(255, 255, 255, 0.8);
  width: 1200px;
  position: relative;
}

.hero__wrap-two {
  height: 80vh;
  background-image: url("../img/hero2.jpg");
  background-size: cover;
  color: rgba(255, 255, 255, 0.8);
  width: 1200px;
}

.hero__wrap-three {
  height: 80vh;
  background-image: url("../img/hero3.jpg");
  background-size: cover;
  color: rgba(255, 255, 255, 0.8);
  width: 1200px;
}

.hero__center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.hero__heading {
  text-transform: uppercase;
  font-weight: 300;
  font-size: 4em;
  letter-spacing: 2px;
  line-height: 1;
  margin-bottom: .3em;
}

.hero__heading--span {
  font-size: .5em;
}

.hero__subheading {
  font-size: 3em;
  text-transform: uppercase;
  margin-bottom: .7em;
}

.hero__subheading--span {
  color: #0188cb;
}

.btn:link, .btn:visited {
  font-size: .8em;
  text-transform: uppercase;
  display: inline-block;
  color: #fff;
  background-color: #0188cb;
  padding: 1em 2em;
  border-radius: 99em;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.btn:link:hover, .btn:visited:hover {
  background-color: #016698;
}

.cards__btn-2:link, .cards__btn-2:visited {
  background-color: transparent;
  border: 1px solid #fff;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.cards__btn-2:hover {
  background-color: transparent !important;
  color: #cccccc;
  border-color: #cccccc;
}

.cards__btn-2:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.cards {
  background-color: #ededed;
  /* 3RD CARD START */
}

.cards__main-wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.cards__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  grid-gap: 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.cards__wrap {
  background-color: #fff;
  border-radius: 10px;
}

.cards__image-wrap {
  position: relative;
  width: 100%;
  overflow: hidden;
  z-index: 2;
  border-radius: 10px 10px 0 0;
}

.cards__image {
  width: 100%;
  height: auto;
  display: block;
}

.cards__wave {
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  height: 0;
}

.cards__wave::before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #fff 16px);
}

.cards__wave::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #fff 12px, transparent 13px);
}

.cards__content {
  padding: 1.5em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cards__icon {
  color: #0188cb;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__icon::before {
  margin: 0 !important;
  font-size: 3em !important;
}

.cards__icon.flaticon-kindergarten::before {
  margin: 0 !important;
  font-size: 3.2em !important;
}

.cards__icon-large {
  color: #1b4798 !important;
}

.cards__icon-large::before {
  font-size: 3em;
}

.cards__subheading-brush {
  position: relative;
  padding-bottom: 20px;
}

.cards__subheading-brush::after {
  background-color: #f27d7f;
  position: absolute;
  content: "";
  padding: 0;
  max-width: 274px;
  width: 100%;
  display: inline-block;
  background-image: url("../img/footer_title_bg.png");
  background-position: left bottom;
  background-repeat: no-repeat;
  bottom: 0;
  left: 55%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  height: 14px;
}

.cards__subheading-brush--2::after {
  background-color: #4b7195;
}

.cards__subheading-brush--3::after {
  background-color: #acc157;
}

.cards__subheading-brush-span--1, .cards__subheading-brush-span--2, .cards__subheading-brush-span--3 {
  font-weight: 700;
}

.cards__subheading {
  margin: .5em 0 1em 0;
  font-size: 1.7em;
  font-weight: 300;
  text-align: center;
}

.cards__icon-wrap {
  margin-bottom: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cards__icon:not(:last-of-type) {
  margin-right: .3em;
}

.cards__summary {
  line-height: 1.5;
}

.cards__btn {
  margin: 3em 0;
  -ms-flex-item-align: center;
      align-self: center;
}

.current {
  padding-bottom: 0;
  text-align: center;
}

.current__image {
  height: 700px;
  width: 700px;
}

@media (max-width: 45em) {
  .current__image {
    height: 325px;
    width: 325px;
  }
}

.gallery.fullwidth {
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.gallery__image-wrap {
  width: 25%;
  background-color: #000;
  overflow: hidden;
}

.gallery__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .85;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__image:hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  opacity: 1;
}

.footer {
  position: relative;
  padding: 2em;
  background-image: url("../img/footer--bg.png");
  background-repeat: repeat;
  border-bottom: 5px solid #212121;
}

.footer__wrap {
  color: #b0b0b0;
  margin-bottom: 3em;
  max-width: 1280px;
  margin: 0 auto;
}

.footer__logo-wrap {
  margin: 1em 0;
}

.footer__logo {
  display: inline-block;
}

.footer__logo img {
  width: 70%;
  height: auto;
}

.footer__main {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 2.5em;
  margin: 3em 0;
  line-height: 1.4;
}

.footer__subheading {
  color: #fff;
  font-weight: 300;
  font-size: 1.2em;
  margin-bottom: 1em;
}

.footer__mission {
  line-height: 1.5;
}

.footer__hours {
  color: #0188cb;
  margin-bottom: .8em;
}

.footer__closings-link {
  color: #0188cb;
  text-decoration: underline;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.footer__closings-link:hover {
  color: #01aafe;
}

.footer__contact p {
  margin-bottom: 1.2em;
  font-weight: 300;
  overflow: auto;
}

.footer__contact-icon {
  text-align: left;
  float: left;
  margin-right: .25em;
  width: 1.1em;
  height: 1.1em;
  fill: #0188cb;
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

.footer__contact-icon--1 {
  width: 1.2em;
  height: 1.2em;
}

.footer__shape {
  background-image: url("../img/shape_bottom.png");
  background-repeat: no-repeat;
  width: 300px;
  height: 45px;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.footer__icon-wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.footer__icon {
  fill: #0188cb;
  width: 1.3em;
  height: 1.3em;
  -webkit-transform: translateY(3px);
          transform: translateY(3px);
}

.footer__bottom {
  background-color: #121212;
  padding: 2em;
  color: #b0b0b0;
}

.footer__copyright {
  text-align: center;
  margin-bottom: .5em;
}

.footer__design {
  text-align: center;
  font-size: .9em;
}

.footer__me, .footer__me:visited {
  color: #0188cb;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.footer__me:hover, .footer__me:visited:hover {
  color: #01aafe;
}

.footer__taxid {
  margin-top: 2.5em;
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(79, 79, 79, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  z-index: 9500;
}

.js-btt-btn-icon {
  fill: #fff;
  width: 1em;
  height: 1em;
  -webkit-transform: translateY(5px);
          transform: translateY(5px);
  -webkit-transition: fill 300ms ease-in;
  transition: fill 300ms ease-in;
}

.js-btt-btn:hover .js-btt-btn-icon {
  fill: #0188cb;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 1.5em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

/* IF YOU KEEP THE MOBILE ANIMATION THEN JUST ADD THESE STYLES TO THE MAIN BODY element CLASS */
.TheAboutUs {
  opacity: 0;
  -webkit-transition: opacity 400ms ease-in;
  transition: opacity 400ms ease-in;
}

.handprints {
  height: 120px;
  background-image: url("../img/handprints.jpg");
  background-position: left bottom;
  background-size: contain;
  background-repeat: repeat-x;
}

.hero__wrap-2 {
  background-image: url("../img/hero-aboutus.jpeg");
  height: 70vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-bottom: 5em;
  background-size: cover;
  background-attachment: fixed;
}

.hero__heading {
  color: #fff;
}

.aboutus {
  max-width: 1280px;
  margin: 0 auto;
}

.aboutus__wrap {
  width: 70%;
  margin: 6em auto 0 auto;
}

.aboutus__sect {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
  grid-gap: 1.5em 1.25em;
  margin-bottom: 3em;
}

.aboutus__imgwrap {
  background: url("../img/blue-circle-bubble.png") no-repeat top left;
  height: 60px;
  width: 58px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.aboutus__icon {
  fill: #fff;
  width: 1.4em;
  height: 1.4em;
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.aboutus__hdg {
  font-weight: 300;
  position: relative;
  font-size: 1.6em;
  justify-self: start;
  -ms-flex-item-align: center;
      align-self: center;
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.aboutus__hdg::after {
  content: "";
  position: absolute;
  height: 1px;
  background-color: #e0e0e0;
  width: 1.5em;
  bottom: -.5em;
  left: 0;
}

.aboutus__summary {
  font-size: 1.1em;
  line-height: 1.4;
  grid-column: 1 / 3;
  grid-row: 2 / 3;
}

.aboutus__para {
  margin-bottom: 1em;
}

.aboutus__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.aboutus__link:hover {
  color: #01557f;
}

.aboutus__quote {
  font-style: italic;
  font-size: 1.2em;
  width: 100%;
  margin: 2.5em 0;
  padding-right: 4em;
  padding-left: 2em;
  display: grid;
  grid-column-gap: 1.5em;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
}

.aboutus__quote span {
  font-family: sans-serif;
  color: #b0b0b0;
  font-size: 8em;
  line-height: .5;
  grid-column: 1 / 2;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

.hay {
  grid-column: 2 / 3;
}

/******* 1st accordion *********/
/*
.aboutus {
    
    max-width: 1280px;
    margin: 0 auto 200px auto;
    background-color: #ccc;

    &__main-wrap {
        width: 90%;
        margin: 0 auto;
        overflow: hidden; 
    }
    
    &__tabs { 
        height: 25vh;
        background-image: url('../img/hightlights-bg_02.jpg');
        background-size: cover;
        position: relative;

    }
    
    &__navlist {
        display: flex;
        justify-content: center;
        position: absolute;
        bottom: 0; 
        left: 50%;
        transform: translateX(-50%);
    }
    
    &__navlist a {
        flex-shrink: 0;
        color: #fff; 
        font-size: 1.3em;
        padding: 1em 5em;
        background-color: royalblue;
        font-weight: 300;
    }
    
    &__navlist a.active {
        background-color: #fff;
        color: #000;
        pointer-events: none;
    }

    &__navlist a:not(:last-of-type) {
        margin-right: 1.5em;
    }
    
    &__span {
        font-weight: 900;
    }
    
    &__sect-wrap {
        height: 50vh;
        max-width: 1280px;
        margin: 0 auto;
        
    }
    
    &__sect-wrap > div {
        display: flex;
        align-items: flex-start;
        justify-content: center;

        height: auto;
        transition: all 400ms;
    }

    &__sect-wrap > .hidden {
        height: 0;
        overflow: hidden;
    }
    
    &__start {
        font-weight: 900;
        font-style: italic;
    }
    
    &__para {
        padding: 1em;
    }
    
    &__para--2 {
        padding: 1em;
        color: #fff;
        flex: 1;
    }
    
    &__para--3 {
        color: #000;
        padding: 1em;
    }
    
    
}

#ourmission {
    background-color: #fff;
    
}

#ourstory {
    background-image:  linear-gradient(to bottom, rgba(0,0,0,.3), rgba(0,0,0,.3)), url('../img/black-board.jpg');
}

#staff {
    background-color: #fff;
    flex-wrap: wrap;
}


*/
/**************** 2nd accordion *****************/
.about-us-2 {
  max-width: 1280px;
  margin: 0 auto 200px auto;
}

.accordion-wrap-2 {
  width: 80%;
  margin: 0 auto;
}

button.accordion {
  font-family: 'Lato', sans-serif;
  -webkit-transition: background-color 300ms linear;
  transition: background-color 300ms linear;
  background-color: #1b4798;
  color: #fff;
  width: 100%;
  border: none;
  outline: none;
  text-align: left;
  padding: 15px 20px;
  font-size: 1.3em;
  cursor: pointer;
  font-weight: 300;
}

.accordion__icon {
  width: 1em;
  height: 1em;
  float: right;
  -webkit-transform: translateY(0.23em);
          transform: translateY(0.23em);
}

button.accordion:hover, button.accordion.is-open {
  background-color: #2665d9;
}

div.accordion-content {
  padding: 0 20px;
  border-left: 1px solid whitesmoke;
  border-right: 1px solid whitesmoke;
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height 300ms ease-in-out;
  transition: max-height 300ms ease-in-out;
  background-color: #ededed;
  line-height: 1.4;
  font-size: 1.1em;
}

.accordion-para {
  margin: 1em 0;
}

.accordion-start-2 {
  font-weight: 900;
  font-style: italic;
  color: #000;
}

.accordion__span {
  font-family: 'Grand Hotel';
  font-size: 1.2em;
}

.hero__wrap-2.ourstaff {
  background-image: url("../img/staff.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: bottom;
}

.staff {
  max-width: 1280px;
  margin: 6em auto 0 auto;
  /******* TEACHERS ******/
}

.staff__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

.staff__office-wrap {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-column-gap: 1.5em;
  margin-bottom: 15em;
  justify-items: center;
}

.staff__individual {
  position: relative;
  width: 300px;
}

.staff__image {
  max-width: 100%;
  height: auto;
  display: block;
}

.staff__summary {
  position: absolute;
  bottom: -12%;
  background-color: #fff;
  padding: 2em;
  left: 10%;
  right: 10%;
  z-index: 3;
}

.staff__summary:hover::after {
  height: 100%;
}

.staff__summary:hover .staff__title {
  color: #fff;
}

.staff__summary:hover .staff__email {
  color: #fff;
}

.staff__summary:hover .staff__icon {
  fill: #fff;
}

.staff__summary::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #f27d7f;
  z-index: 1;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.staff__summary--blue::after {
  background: #4b7195;
}

.staff__summary--green::after {
  background: #acc157;
}

.staff__name {
  position: relative;
  z-index: 2;
}

.staff__email {
  font-size: 1.25em;
  display: inline-block;
  margin-right: .15em;
  color: #2665d9;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__email:hover {
  color: #1b4798;
}

.staff__icon {
  width: 1em;
  height: 1em;
  fill: #2665d9;
}

.staff__title {
  font-style: italic;
  font-size: 1.1em;
  position: relative;
  z-index: 2;
}

.staff__teachers-grid {
  display: grid;
  grid-template-columns: 1fr 3fr;
  border: 1px solid #e0e0e0;
  margin-bottom: 4em;
}

.staff__teachers-list {
  position: relative;
  background-color: #fff;
}

.staff__teachers-hdg {
  background: #0188cb;
  height: 93px;
  width: 100%;
  position: relative;
  line-height: 93px;
  text-align: center;
  color: #fff;
  text-transform: uppercase;
  font-size: 1.3em;
}

.staff__teachers-hdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
}

.staff__teachers-hdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
}

.staff__teachers-btmhdg {
  background: #0188cb;
  height: 93px;
  left: 0;
  bottom: 0;
  width: 100%;
  position: absolute;
}

.staff__teachers-btmhdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-btmhdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-item {
  padding: 1em;
  text-align: center;
}

.staff__teachers-item--first {
  margin-top: 1em;
}

.staff__teachers-item--last {
  margin-bottom: calc(93px + 1em);
}

.staff__teachers-link {
  color: #212121;
  text-transform: uppercase;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__teachers-link:hover {
  color: #0188cb;
}

.staff__teachers-link--current {
  color: #0188cb;
  font-weight: 700;
}

.staff__teachers-listout {
  display: none;
}

.staff__teachers-listout--visible {
  display: block;
  height: 100%;
}

.staff__teachers-table-wrap {
  color: #fff;
}

.staff__teachers-table {
  width: 100%;
  height: 100%;
  border-collapse: collapse;
}

.staff__teachers-table tr:nth-of-type(odd) {
  background-color: #333333;
}

.staff__teachers-table tr:nth-of-type(even) {
  background-color: #4f4f4f;
}

.staff__teachers-table th {
  text-align: left;
  padding: 1em;
  text-transform: uppercase;
  font-weight: 700;
}

.staff__teachers-table td {
  padding: .5em .5em .5em 1em;
}

.staff__teachers-table td a {
  color: inherit;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__teachers-table td a:hover {
  color: #0188cb;
}

.hero__wrap-2.program {
  background-image: url("../img/hero-program.jpg");
}

.program {
  /*** rotation is 90deg not -90 and marging is -22, not -12 ***/
}

.program__wrap {
  max-width: 1280px;
  margin: 6em auto;
}

.program__sect {
  margin: 0 auto 3em auto;
  width: 80%;
}

.program__sect-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 8em;
}

.program__sect-flex--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

.program__para-wrap {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.program__para {
  line-height: 1.4;
  padding: 1em 1.5em 1em 1em;
}

.program__para--reverse {
  padding: 1em 1em 1em 1.5em;
}

.program__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.program__link:hover {
  color: #01557f;
}

.program__small {
  font-size: 1em;
  display: block;
  font-style: italic;
  margin-top: 1em;
}

.program__table-wrap {
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background-color: #0188cb;
  color: #fff;
  padding: 2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.program__table-wrap::before {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #0188cb 16px);
}

.program__table-wrap::after {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #0188cb 12px, transparent 13px);
}

.program__table-wrap--reverse::before {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

.program__table-wrap--reverse::after {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

.program__table {
  font-size: 1.1em;
  border-collapse: collapse;
  border: 1px solid #fff;
}

.program__table tr:nth-of-type(1n) {
  background-color: #1b4798;
}

.program__table tr:nth-of-type(2n) {
  background-color: #0f2857;
}

.program__table-row--one {
  background-color: #f27d7f !important;
}

.program__table-row--two {
  background-color: #4b7195 !important;
}

.program__table-row--three {
  background-color: #acc157 !important;
}

.program__table th {
  text-transform: uppercase;
  text-align: center;
  padding: 1em;
}

.program__table td {
  padding: 1em;
}

.hero__wrap-2.curriculum {
  background-image: url("../img/hero-curriculum.jpg");
}

.curriculum {
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  /* Using translate since padding makes the bottom sect go higher and thus the entire curriculum__sect is going higher */
}

.curriculum__wrap {
  max-width: 1280px;
  margin: 6em auto 0 auto;
}

.curriculum__sect {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #e0e0e0;
  margin-bottom: 4em;
}

.curriculum__sect--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

.curriculum__image {
  max-width: 720px;
  height: auto;
  -o-object-fit: cover;
     object-fit: cover;
}

.curriculum__main {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.curriculum__top {
  color: #fff;
  padding: 1.5em;
  background-color: #f27d7f;
}

.curriculum__top--blue {
  background-color: #4b7195;
}

.curriculum__top--green {
  background-color: #acc157;
}

.curriculum__top--orange {
  background-color: #ea9f61;
}

.curriculum__heading {
  font-family: 'Bubblegum Sans', cursive;
  font-size: 1.6em;
  text-transform: uppercase;
  margin-bottom: 1em;
  text-align: center;
}

.curriculum__hearts {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 1.5em;
}

.curriculum__hearts div {
  z-index: 99;
}

.curriculum__hearts div + div {
  margin-left: .1em;
}

.curriculum__hearts::before {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  content: "";
  height: 2px;
  width: 100%;
  background-color: #fff;
  position: absolute;
  top: 44%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.curriculum__hearts-icon {
  height: 18px;
  width: 18px;
  fill: #fff;
}

.curriculum__summary {
  line-height: 1.45;
  font-size: 1.1em;
}

.curriculum__link {
  color: #fff;
  border-bottom: 1px solid currentColor;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.curriculum__link:hover {
  color: #ddd;
}

.curriculum__price {
  display: block;
  text-transform: uppercase;
  color: #fff;
  border: 1px solid #fff;
  padding: .75em 1.5em;
  background-color: transparent;
  border-radius: 99em;
  margin: 2em auto 0 auto;
  -webkit-box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
  width: 10em;
  text-align: center;
}

.curriculum__price:hover {
  background-color: #fff;
  color: #f27d7f;
}

.curriculum__price--blue:hover {
  color: #4b7195;
}

.curriculum__price--green:hover {
  color: #acc157;
}

.curriculum__price--orange:hover {
  color: #ea9f61;
}

.curriculum__note {
  display: inline-block;
  font-style: italic;
  font-size: 1em;
  margin-top: .5em;
}

.curriculum__bottom {
  color: #4f4f4f;
  padding: 2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.curriculum__subheading {
  margin: 0;
  font-size: 1.75em;
  text-transform: uppercase;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.curriculum__ratio {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.curriculum__ratio {
  border-left: 1px solid #e0e0e0;
}

.curriculum__title {
  font-weight: 700;
  text-transform: uppercase;
  /*transform: translateY(.25em);*/
}

.curriculum__number {
  font-size: 2em;
  color: #0188cb;
  /*transform: translateY(-.35em);*/
}

.hero__wrap-2.calendar {
  height: 0vh;
  margin-bottom: 0;
}

.calendar--wrap {
  background-image: url("../img/cloud-bg.png");
  background-color: #008c99;
  background-attachment: fixed;
  padding-top: 10em;
  padding-bottom: 10em;
}

.footer.cal {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/footer--bg.png");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/footer--bg.png");
}

.forms__grid {
  margin-top: 6em;
}

.forms__wrap {
  color: #212121;
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-template-rows: auto auto;
  grid-column-gap: 1em;
  margin-bottom: 2.5em;
}

.forms__link {
  grid-column: 1 / 2;
  grid-row: 1 / 3;
  color: inherit;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.forms__link:hover {
  color: gray;
}

.forms__item {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
  font-size: 1.2em;
}

.forms__info {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  font-style: italic;
  -ms-flex-item-align: start;
      align-self: start;
}

/*
temp fix to kwes removing the class name from the form
.subscribe form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 3em 1.5em;
}

*/
/*
KWES WRAPS EACH INPUT ELEMENT IN A SPAN .kw-field-wrapper so the 100% width needs to be added to this span but I still might need to account for the submit button any time is is a button element and NOT a input type=submit element
*/
/*** ADD THIS POSITION RELATIVE MAYBE!!!! *****/
/***** KWES STYLES START ****/
.kw-field-wrapper {
  width: 100%;
}

.kwes-field-wrapper .help {
  position: absolute;
}

/* TEXTAREA */
.kw-field-wrapper-6 {
  height: 6em !important;
}

/* This matches pencil icon wrap to be the same height at the textarea field --why 8 and not 6?????? */
#applicant-pencil-prefix {
  height: 8em;
}

/***** KWES STYLES END ****/
.hero__wrap-2.contact {
  background-image: url("../img/hero-contact.jpg");
}

.form-wrapper {
  margin: 4em auto 4em auto;
  padding: 1.5em 1em;
  max-width: 1280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.contacts {
  background-color: #13326c;
  color: #fff;
  padding: 1.5em;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.contact-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
}

.contact-hdg {
  margin-bottom: .3em;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1.2em;
}

.contact-icon {
  fill: #0188cb;
  padding-right: .1em;
  width: 1.2em;
  height: 1.2em;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

.contact-hdg-span {
  font-weight: 700;
  font-size: .915em;
}

.contact-list.list-one {
  margin-bottom: auto;
}

.contact-item + .contact-item {
  margin-top: .3em;
}

.contact-item.hours {
  color: #0188cb;
  margin-top: 0;
  margin-bottom: .3em;
}

.contact-item.hours:not(:last-of-type) {
  margin-bottom: .75em;
}

.form {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/child-writing.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/child-writing.jpg");
  background-size: cover;
  padding: 4em 1.5em;
  -webkit-box-flex: 5;
      -ms-flex: 5;
          flex: 5;
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
  padding-top: 3em;
}

.full-width:last-of-type {
  justify-self: center;
}

.field-text input,
.field-text textarea,
.submit {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
}

.field-text input {
  height: 2.125em;
}

.field-text input:focus,
.field-text textarea:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

form label {
  display: block;
  color: #fff;
}

.field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.field-prefix {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em;
  color: #fff;
  background-color: #13326c;
  -webkit-transition: background-color 300ms ease-out 100ms;
  transition: background-color 300ms ease-out 100ms;
}

.field-prefix.background-color {
  background-color: #333;
}

.form-icon {
  width: 1em;
  height: 1em;
  fill: #fff;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

form p {
  margin: 0;
}

textarea {
  height: 8em;
  resize: none;
}

/* changed from 1 / 3 because otherwise there will ALWAYS be two columns*/
.full-width {
  grid-column: 1 / -1;
}

.full-width:last-of-type {
  justify-self: center;
}

.submit {
  margin-top: 2em;
  padding: .6em 1.2em;
  color: #fff;
  border-radius: 6px;
  border: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#1f51ad), to(#1b4798));
  background-image: linear-gradient(#1f51ad, #1b4798);
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.submit:hover {
  cursor: pointer;
}

.submit:focus {
  outline: none;
}

.submit:active {
  -webkit-box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
  outline: none;
  -webkit-transform: translate(1px, 1px);
          transform: translate(1px, 1px);
}

.submit span {
  margin: 0 .3em .2em 0;
}

.submit .form-icon {
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

/* Set the size of the div element that contains the map */
#map {
  height: 400px;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
