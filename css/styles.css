:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* check for overflowed elements - use mobile devtools simulator

* {
    outline: 1px solid red;
}

*/
body {
  font-size: 100%;
  font-family: 'Lato', sans-serif;
}

@media (max-width: 70.625em) {
  body {
    font-size: .95em;
  }
}

section {
  padding: 6em 2em;
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #505050;
  margin-bottom: .3em;
}

.sect-heading {
  font-size: 2.3em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

.sect-heading-img {
  height: 13px;
  width: 142px;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

.header {
  /* phone icon text  */
  /* if submenus get removed go ahead and add pointer-events: none and change the cursor to some kind of not-allowed */
  /**** 2nd LEVEL  ****/
}

.header__top-sect {
  border-top: 5px solid #333333;
}

.header__top-sect-container {
  max-width: 1280px;
  margin: 0 auto;
}

.header__top-bar {
  background: url("../img/cner-536.png") no-repeat top center;
  height: 39px;
  width: 536px;
  position: relative;
  right: -55vw;
}

@media (max-width: 80em) {
  .header__top-bar {
    right: -50vw;
  }
}

@media (max-width: 70.625em) {
  .header__top-bar {
    right: -45vw;
  }
}

@media (max-width: 63.75em) {
  .header__top-bar {
    right: -40vw;
  }
}

@media (max-width: 57.5em) {
  .header__top-bar {
    right: -35vw;
  }
}

@media (max-width: 52.5em) {
  .header__top-bar {
    background: url("../img/cner-301.png") no-repeat top center;
    right: -57vw;
    width: 301px;
  }
}

@media (max-width: 45em) {
  .header__top-bar {
    right: -47vw;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar {
    background: none;
    width: 100%;
    right: 0;
  }
}

.header__top-bar-contact {
  position: absolute;
  right: 4em;
  top: 50%;
  -webkit-transform: translateY(calc(-50% - 5px));
          transform: translateY(calc(-50% - 5px));
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1em 0;
}

@media (max-width: 52.5em) {
  .header__top-bar-contact {
    right: 6em;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar-contact {
    right: .25em;
    z-index: 5565;
  }
}

.header__top-bar-item + .header__top-bar-item {
  margin-left: 1.5em;
}

@media (max-width: 52.5em) {
  .header__top-bar-item:last-of-type {
    display: none;
  }
}

.header__top-bar-icon {
  color: #0188cc;
  margin-right: .3em;
}

@media (max-width: 38.4375em) {
  .header__top-bar-icon {
    margin-right: .1em;
  }
}

.header__top-bar-icon.fa-phone::before {
  font-size: 1.25em;
  display: inline-block;
  -webkit-transform: translateY(0.1em);
          transform: translateY(0.1em);
}

@media (max-width: 38.4375em) {
  .header__top-bar-icon.fa-phone::before {
    font-size: 1.1em;
    -webkit-transform: translateY(0.2em);
            transform: translateY(0.2em);
  }
}

.header__phone-icon {
  font-size: .9em;
}

@media (max-width: 38.4375em) {
  .header__phone-icon {
    font-size: .8em;
  }
}

.header__top-bar-link {
  color: #fff;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.header__top-bar-link:hover {
  color: #d9d9d9;
}

@media (max-width: 38.4375em) {
  .header__top-bar-link {
    color: #333;
  }
  .header__top-bar-link:hover {
    color: gray;
  }
}

.header__main-sect {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 2em;
}

@media (max-width: 63.75em) {
  .header__main-sect {
    padding: 0 1em;
  }
}

.header__logo {
  -webkit-transform: translateY(-37px);
          transform: translateY(-37px);
  margin-bottom: -30px;
}

@media (max-width: 38.4375em) {
  .header__logo {
    margin-left: auto;
    margin-right: auto;
  }
}

.header__logo-image {
  width: 15.625em;
  height: auto;
  display: block;
}

.header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header__nav-item {
  padding: .5em 0;
  position: relative;
  z-index: 100;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__nav-item + .header__nav-item {
  margin-left: 1em;
}

.header__nav-item.has-submenu::after {
  font-family: "fontawesome";
  content: "\f078";
  color: #333333;
}

.header__nav-item:hover {
  -webkit-box-shadow: inset 0 -0.1875em 0 #002c80;
          box-shadow: inset 0 -0.1875em 0 #002c80;
}

.header__nav-item:hover .header__nav-link {
  color: #002c80;
}

.header__nav-item.clicked-parent {
  -webkit-box-shadow: inset 0 -0.1875em 0 #002c80;
          box-shadow: inset 0 -0.1875em 0 #002c80;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link.clicked {
  color: #002c80;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link {
  font-size: .95em;
  letter-spacing: .05em;
  color: #333333;
  text-transform: uppercase;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

@media (max-width: 63.75em) {
  .header__nav-link {
    font-size: .85em;
  }
}

.header__nav-item ul {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  top: 300%;
  left: 0;
  width: 15rem;
  background-color: #333333;
  border-radius: 5px;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.header__nav-item ul li:not(:last-of-type) {
  border-bottom: 1px dotted #fff;
}

.header__nav-item:hover > ul {
  opacity: 1;
  visibility: visible;
  top: 100%;
}

.header__nav-item ul a {
  font-size: .95em;
  display: block;
  padding: 1rem 1.5rem;
  font-family: inherit;
  color: #fff;
  text-transform: uppercase;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

@media (max-width: 63.75em) {
  .header__nav-item ul a {
    font-size: .9em;
  }
}

.header__nav-item ul li:hover a {
  color: #0188cc;
}

.header__nav-item ul li::after:hover {
  color: #002c80;
}

.header.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  z-index: 1001;
}

.header.sticky .header__top-sect {
  display: none;
}

.header.sticky .header__logo-image {
  width: 13.5em;
  height: auto;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

.header.sticky .header__logo {
  -webkit-transform: none;
          transform: none;
  margin-bottom: 0;
}

.header.sticky .header__nav-link {
  color: #fff;
}

.header.sticky .header__nav-item.has-submenu::after {
  color: #fff;
}

.navigation__checkbox {
  display: none;
}

@media (max-width: 57.5em) {
  .navigation__button {
    background-color: #444;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: fixed;
    top: 40px;
    right: 15px;
    z-index: 2000;
    -webkit-box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
            box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
  }
  .navigation__background {
    height: 40px;
    width: 40px;
    border-radius: 50%;
    position: fixed;
    top: 45px;
    right: 20px;
    background-image: radial-gradient(rgba(0, 44, 128, 0.8), rgba(1, 136, 204, 0.8));
    z-index: 1000;
    -webkit-transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1), -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
  }
  .header__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;
    opacity: 0;
    /* use transform instead for a smoother animation and also more performant  */
    -webkit-transform: translateX(-800px);
            transform: translateX(-800px);
    /* put the width 100% here  */
    width: 100%;
  }
  .header__nav-list {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: center;
    display: block;
  }
  .header__nav-item.clicked-parent {
    -webkit-box-shadow: none;
            box-shadow: none;
    background-color: #333;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item {
    margin-bottom: .5em;
    margin-top: .5em;
    margin-left: 0 !important;
    padding: .75em 1em;
    background-color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item:hover {
    -webkit-transform: translateX(0.75em);
            transform: translateX(0.75em);
    background-color: #333;
  }
  .header__nav-item:hover {
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  .header__nav-item.has-submenu::after {
    color: #002c80;
  }
  .header__nav-item.has-submenu:hover::after {
    color: #fff;
  }
  .header__nav-link.clicked {
    color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-link {
    color: #002c80;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .navigation__checkbox:checked ~ .navigation__background {
    -webkit-transform: scale(70);
            transform: scale(70);
  }
  .navigation__checkbox:checked ~ .header__nav {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link {
    color: #002c80;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu::after {
    color: #002c80;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-item.clicked-parent.has-submenu::after {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.clicked-parent.has-submenu::after {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu:hover::after {
    color: #fff;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu:hover > ul {
    opacity: 0;
    visibility: hidden;
    top: 300%;
  }
  .navigation__icon {
    position: relative;
    margin-top: 1.55em;
  }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 1.6em;
    height: 2px;
    background-color: #fff;
    display: inline-block;
  }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    -webkit-transition: all 400ms;
    transition: all 400ms;
    left: 0;
  }
  .navigation__icon::before {
    -webkit-transform: translateY(-0.45em);
            transform: translateY(-0.45em);
  }
  .navigation__icon::after {
    -webkit-transform: translateY(0.45em);
            transform: translateY(0.45em);
  }
  .navigation__button:hover .navigation__icon::before {
    -webkit-transform: translateY(-0.55em);
            transform: translateY(-0.55em);
  }
  .navigation__button:hover .navigation__icon::after {
    -webkit-transform: translateY(0.55em);
            transform: translateY(0.55em);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    background-color: transparent;
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    -webkit-transform: translateY(0) rotate(135deg);
            transform: translateY(0) rotate(135deg);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    -webkit-transform: translateY(0) rotate(-135deg);
            transform: translateY(0) rotate(-135deg);
  }
}

.hero {
  position: relative;
}

.hero__wrap {
  height: 80vh;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/hero.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/hero.jpg");
  background-size: cover;
  /*background-attachment: fixed;*/
  color: rgba(255, 255, 255, 0.8);
  width: 1200px;
  position: relative;
}

.hero__wrap-two {
  height: 80vh;
  background-image: url("../img/hero2.jpg");
  background-size: cover;
  /*background-attachment: fixed;*/
  color: rgba(255, 255, 255, 0.8);
  width: 1200px;
}

.hero__wrap-three {
  height: 80vh;
  background-image: url("../img/hero3.jpg");
  background-size: cover;
  /*background-attachment: fixed;*/
  color: rgba(255, 255, 255, 0.8);
  width: 1200px;
}

.hero__center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.hero__heading {
  text-transform: uppercase;
  font-weight: 300;
  font-size: 4em;
  letter-spacing: 2px;
  line-height: 1;
  margin-bottom: .3em;
}

.hero__heading--span {
  font-size: .5em;
}

.hero__subheading {
  font-size: 3em;
  text-transform: uppercase;
  margin-bottom: .7em;
}

.hero__subheading--span {
  color: #0188cc;
}

.btn:link, .btn:visited {
  font-size: .8em;
  text-transform: uppercase;
  display: inline-block;
  color: #fff;
  background-color: #002c80;
  padding: 1em 2em;
  border-radius: 99em;
  -webkit-transition: background-color 300ms ease-out;
  transition: background-color 300ms ease-out;
}

.btn:link:hover, .btn:visited:hover {
  background-color: #003eb3;
}

.cards {
  background-color: #e0e0e0;
  /* 3RD CARD START */
  /* 3RD CARD END */
  /**************************************/
  /**** 2nd row of new styled cards *****/
  /**************************************/
}

.cards__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(315px, 1fr));
  grid-gap: 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.cards__wrap {
  background-color: #fff;
  border-radius: 10px;
}

.cards__image-wrap {
  position: relative;
  width: 100%;
  overflow: hidden;
  z-index: 2;
  border-radius: 10px 10px 0 0;
}

.cards__image {
  width: 100%;
  height: auto;
  display: block;
}

.cards__wave {
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  height: 0;
}

.cards__wave::before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #fff 16px);
}

.cards__wave::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #fff 12px, transparent 13px);
}

.cards__content {
  padding: 1.5em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cards__icon-large {
  color: #002c80 !important;
}

.cards__icon-large::before {
  font-size: 3em;
}

.cards__subheading-brush {
  position: relative;
  padding-bottom: 20px;
}

.cards__subheading-brush::after {
  background-color: #f27c7e;
  position: absolute;
  content: "";
  padding: 0;
  max-width: 274px;
  width: 100%;
  display: inline-block;
  background-image: url("../../img/footer_title_bg.png");
  background-position: left bottom;
  background-repeat: no-repeat;
  bottom: 0;
  left: 55%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  height: 14px;
}

.cards__subheading-brush--2::after {
  background-color: red;
}

.cards__subheading-brush--3::after {
  background-color: green;
}

.cards__subheading {
  margin: .5em 0 1em 0;
  font-size: 1.7em;
  font-weight: 300;
  text-align: center;
}

.cards__icon-wrap {
  margin-bottom: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cards__icon:not(:last-of-type) {
  margin-right: .3em;
}

.cards__summary {
  line-height: 1.5;
}

.cards__btn {
  margin: 3em 0;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__grid-2 {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin-top: 4em;
}

.cards__wrap-2 {
  position: relative;
  overflow: hidden;
  background-color: #fff;
  border-radius: 10px;
  /**************************************/
  /*background-image: url('../../img/about1.jpg');
        background-repeat: no-repeat;
        background-size: cover;*/
}

.cards__subheading-2 {
  margin: .5em 0 0 0;
  font-size: 1.7em;
  font-weight: 400;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__image-2 {
  display: block;
  width: 100%;
  height: 100%;
}

.cards__content-2 {
  background-color: darkred;
  position: relative;
}

.cards__svg-overlay {
  position: absolute;
  bottom: 303px;
  left: 0;
  width: 100%;
  height: 80px;
  z-index: 2;
  pointer-events: none;
  color: red;
}

.cards__svg-overlay svg {
  width: 100%;
  height: 100%;
  fill: green;
}

.cards__content-wrap {
  position: absolute;
  bottom: 0;
  background-color: green;
  padding: 2em;
  padding-top: 1em;
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cards__icon-2 {
  color: #fff;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__icon-2::before {
  margin: 0 !important;
  font-size: 3em !important;
}

.cards__summary-2 {
  margin: 1em 0;
}

.cards__btn-2 {
  margin-top: 2em;
  -ms-flex-item-align: center;
      align-self: center;
}

.gallery.fullwidth {
  padding: 6em 0 0 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.gallery__image-wrap {
  width: 25%;
  background-color: #000;
  overflow: hidden;
}

.gallery__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .85;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__image:hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  opacity: 1;
}

.footer {
  position: relative;
  padding: 2em;
  background-image: url("../img/bg_footer.png");
  background-repeat: repeat-y;
  border-bottom: 5px solid #202020;
}

.footer__wrap {
  color: #b0b0b0;
  margin-bottom: 3em;
  max-width: 1280px;
  margin: 0 auto;
}

.footer__logo-wrap {
  margin: 1em 0;
}

.footer__logo {
  display: inline-block;
}

.footer__logo img {
  width: 70%;
  height: auto;
}

.footer__main {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 2.5em;
  margin: 3em 0;
  line-height: 1.4;
}

.footer__subheading {
  color: #fff;
  font-weight: 400;
  font-size: 1.2em;
  margin-bottom: 1em;
}

.footer__mission {
  line-height: 1.5;
}

.footer__hours {
  color: #0188cc;
  margin-bottom: .8em;
}

.footer__contact p {
  margin-bottom: 1.2em;
  font-weight: 300;
  overflow: auto;
}

.footer__contact-icon {
  text-align: center;
  float: left;
  margin-right: .15em;
  width: 1.2em;
  height: 1.2em;
  font-size: 1.2em !important;
  color: #0188cc;
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

.footer__contact-icon.fa-envelope {
  font-size: 1em !important;
  margin-right: .6em;
}

.footer__shape {
  background-image: url("../img/shape_bottom.png");
  background-repeat: no-repeat;
  width: 300px;
  height: 45px;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.footer__icon-wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.footer__icon {
  color: #0188cc;
  margin-right: .3em;
}

.footer__icon::before {
  font-size: 1.25em;
}

.footer__bottom {
  background-color: #111111;
  padding: 2em;
  color: #b0b0b0;
}

.footer__copyright {
  text-align: center;
}

.footer__me, .footer__me:visited {
  color: inherit;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.footer__me:hover, .footer__me:visited:hover {
  color: #ccc;
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(80, 80, 80, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  z-index: 9500;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 1.5em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

.js-btt-btn:hover {
  color: #eee;
}

.handprints {
  height: 120px;
  background-image: url("../img/handprints.jpg");
  background-size: contain;
}

.hero__wrap-2 {
  background-image: url("../img/black-board.jpg");
  height: 50vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-bottom: 5em;
}

.hero__heading {
  color: #fff;
}

/******* 1st accordion *********/
.accordion-wrap {
  max-width: 1280px;
  margin: 0 auto 200px auto;
}

.apple {
  height: 40vh;
  background-image: url("../img/hightlights-bg_02.jpg");
  background-size: cover;
  position: relative;
}

.navlist {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.navlist a {
  -ms-flex-negative: 0;
      flex-shrink: 0;
  color: #fff;
  font-size: 1.3em;
  padding: 1em 5em;
  background-color: royalblue;
}

.navlist a.active {
  background-color: #fff;
  color: #000;
  pointer-events: none;
}

.navlist a:not(:last-of-type) {
  margin-right: 1.5em;
}

.sect-wrap {
  height: 40vh;
  max-width: 1280px;
  margin: 0 auto;
}

.sect-wrap {
  background-color: gold;
}

.sect-wrap > div {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: auto;
  -webkit-transition: all 400ms;
  transition: all 400ms;
}

.sect-wrap > .hidden {
  height: 0;
  overflow: hidden;
}

#events {
  background-image: url("../img/black-board.jpg");
}

#news, #donations {
  background-image: url("../img/logo.png");
}

/******* 2nd accordion *********/
.accordion-wrap-2 {
  max-width: 1280px;
  margin: 0 auto 200px auto;
}

button.accordion {
  -webkit-transition: background-color 300ms linear;
  transition: background-color 300ms linear;
  background-color: whitesmoke;
  width: 100%;
  border: none;
  outline: none;
  text-align: left;
  padding: 15px 20px;
  font-size: 18px;
  cursor: pointer;
}

button.accordion::after {
  content: '\f055';
  font-family: "fontawesome";
  font-size: 14px;
  float: right;
}

button.accordion.is-open::after {
  content: "\f056";
}

button.accordion:hover, button.accordion.is-open {
  background-color: #ddd;
}

div.accordion-content {
  padding: 0 20px;
  border-left: 1px solid whitesmoke;
  border-right: 1px solid whitesmoke;
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height 300ms ease-in-out;
  transition: max-height 300ms ease-in-out;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
