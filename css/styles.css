:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  font-size: 100%;
  font-family: 'Lato', sans-serif;
  color: #212121;
  overflow-x: hidden;
}

@media (max-width: 70.625em) {
  body {
    font-size: .95em;
  }
}

section {
  padding: 10em 2em;
}

@media (max-width: 47.5em) {
  section {
    padding: 8em 1em;
  }
}

@media (max-width: 25em) {
  section {
    padding: 6em .5em;
  }
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #4f4f4f;
  margin-bottom: .2em;
}

@media (max-width: 57.5em) {
  .pre-heading {
    font-size: .95em;
    margin-bottom: .15em;
  }
}

@media (max-width: 23.0625em) {
  .pre-heading {
    font-size: .9em;
  }
}

.sect-heading {
  font-size: 2.5em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

@media (max-width: 57.5em) {
  .sect-heading {
    font-size: 2.3em;
    letter-spacing: 1px;
  }
}

@media (max-width: 47.5em) {
  .sect-heading {
    font-size: 2.1em;
    letter-spacing: normal;
  }
}

@media (max-width: 35em) {
  .sect-heading {
    font-size: 1.9em;
  }
}

@media (max-width: 28.125em) {
  .sect-heading {
    font-size: 1.7em;
  }
}

@media (max-width: 23.0625em) {
  .sect-heading {
    font-size: 1.5em;
  }
}

.sect-heading-img {
  height: 13px;
  width: 142px;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

.sect-heading-img--program,
.sect-heading-img--curriculum,
.sect-heading-img--contactus {
  margin-bottom: 10em;
}

@media (max-width: 47.5em) {
  .sect-heading-img--program,
  .sect-heading-img--curriculum,
  .sect-heading-img--contactus {
    margin-bottom: 5em;
  }
}

.handprints {
  height: 140px;
  background-image: url("../img/handprints-heart.jpg");
  background-position: left bottom;
  background-size: contain;
  background-repeat: round;
}

@media (max-width: 35em) {
  .handprints {
    height: 100px;
  }
}

/** IE11 cannot have a text node be a grid cell **/
.ie {
  display: block;
  -ms-grid-column: 2;
  /** fallback for grid-gap **/
  margin: .5em;
  margin-left: .5em;
  /** reset margin for supported browsers **/
}

@supports (display: grid) {
  .ie {
    margin: 0;
  }
}

.line__subhdg {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr max-content 1fr;
  grid-template-columns: 1fr auto 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  grid-column-gap: .5em;
  max-width: 1280px;
  text-transform: uppercase;
  color: #4f4f4f;
  font-size: 1.65em;
  margin: 0 auto 1em auto;
  letter-spacing: .02em;
  word-spacing: .05em;
}

@media (max-width: 28.125em) {
  .line__subhdg {
    font-size: 1.5em;
  }
}

.line__subhdg::before {
  /* generated content works with grid but it must be set as display: block (inline-block might be ok too)*/
  display: block;
  -ms-grid-column: 1;
  /** this must be used as -ms-flex-align: center on the grid parent does not work **/
  -ms-grid-row-align: center;
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, right top, left top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to left, #0188cb, transparent);
  border-radius: .625em;
}

.line__subhdg::after {
  /* generated content works with grid but it must be set as display: block (inline-block might be ok too)*/
  display: block;
  -ms-grid-column: 3;
  /** this must be used as -ms-flex-align: center on the grid parent does not work **/
  -ms-grid-row-align: center;
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, left top, right top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to right, #0188cb, transparent);
  border-radius: .625em;
}

.header {
  /* phone icon text  */
}

.header__top-sect {
  border-top: 5px solid #333333;
}

.header__top-sect-container {
  max-width: 1280px;
  margin: 0 auto;
}

.header__top-bar {
  background: url("../img/cner-536.png") no-repeat top center;
  height: 39px;
  width: 536px;
  position: relative;
  right: -55vw;
}

@media (max-width: 80em) {
  .header__top-bar {
    right: -50vw;
  }
}

@media (max-width: 70.625em) {
  .header__top-bar {
    right: -45vw;
  }
}

@media (max-width: 63.75em) {
  .header__top-bar {
    right: -40vw;
  }
}

@media (max-width: 57.5em) {
  .header__top-bar {
    right: -35vw;
  }
}

@media (max-width: 52.5em) {
  .header__top-bar {
    background: url("../img/cner-301.png") no-repeat top center;
    right: -57vw;
    width: 301px;
  }
}

@media (max-width: 45em) {
  .header__top-bar {
    right: -47vw;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar {
    background: none;
    width: 100%;
    right: 0;
  }
}

.header__top-bar-contact {
  position: absolute;
  right: 4em;
  top: 50%;
  -webkit-transform: translateY(-50%) translateY(-5px);
          transform: translateY(-50%) translateY(-5px);
  -webkit-transform: translateY(calc(-50% - 5px));
          transform: translateY(calc(-50% - 5px));
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1em 0;
}

@media (max-width: 52.5em) {
  .header__top-bar-contact {
    right: 6em;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar-contact {
    left: .5em;
    z-index: 5565;
  }
}

.header__top-bar-item + .header__top-bar-item {
  margin-left: 1.5em;
}

@media (max-width: 52.5em) {
  .header__top-bar-item:last-of-type {
    display: none;
  }
}

.header__top-bar-item:first-of-type {
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
}

.header__top-bar-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.header__top-bar-icon {
  fill: #0188cb;
  margin-right: .3em;
  width: 1.2em;
  height: 1.2em;
}

.header__phone-icon {
  font-size: .9em;
}

@media (max-width: 38.4375em) {
  .header__phone-icon {
    font-size: .8em;
  }
}

.header__top-bar-link {
  color: #fff;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.header__top-bar-link:hover {
  color: #d9d9d9;
}

@media (max-width: 38.4375em) {
  .header__top-bar-link {
    color: #333;
  }
  .header__top-bar-link:hover {
    color: gray;
  }
}

.header__main-sect {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 2em;
}

@media (max-width: 63.75em) {
  .header__main-sect {
    padding: 0 1em;
  }
}

.header__logo {
  -webkit-transform: translateY(-37px);
          transform: translateY(-37px);
  margin-bottom: -30px;
}

@media (max-width: 38.4375em) {
  .header__logo {
    margin-left: auto;
    margin-right: auto;
  }
}

.header__logo-image {
  width: 15.625em;
  height: auto;
  display: block;
}

.header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header__nav-item {
  padding: .5em 0;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__nav-item + .header__nav-item {
  margin-left: 1em;
}

.header__nav-icon {
  fill: #333333;
  width: 1em;
  height: 1em;
}

.header__nav-item:hover {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
}

.header__nav-item:hover .header__nav-link {
  color: #0188cb;
}

.header__nav-item.clicked-parent {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link.clicked {
  color: #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link {
  font-size: .95em;
  letter-spacing: .05em;
  color: #333333;
  text-transform: uppercase;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

@media (max-width: 63.75em) {
  .header__nav-link {
    font-size: .85em;
  }
}

.header.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  z-index: 1001;
}

.header.sticky .header__top-sect {
  display: none;
}

.header.sticky .header__logo-image {
  width: 13.5em;
  height: auto;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

.header.sticky .header__logo {
  -webkit-transform: none;
          transform: none;
  margin-bottom: 0;
}

.header.sticky .header__nav-link {
  color: #fff;
}

.header.sticky .header__nav-item.has-submenu::after {
  color: #fff;
}

.header.sticky .navigation__button {
  top: 20px;
}

.header.sticky .navigation__background {
  top: 25px;
}

.navigation__checkbox {
  display: none;
}

@media (max-width: 57.5em) {
  .navigation__button {
    background-color: #444;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: fixed;
    top: 40px;
    right: 15px;
    z-index: 2000;
    -webkit-box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
            box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
  }
}

@media (max-width: 57.5em) and (max-width: 38.4375em) {
  .navigation__button {
    top: 35px;
  }
}

@media (max-width: 57.5em) and (max-width: 23.0625em) {
  .navigation__button {
    right: 5px;
  }
}

@media (max-width: 57.5em) {
  .navigation__background {
    height: 40px;
    width: 40px;
    border-radius: 50%;
    position: fixed;
    top: 45px;
    right: 20px;
    background-image: radial-gradient(rgba(27, 71, 152, 0.9), rgba(1, 136, 203, 0.9));
    z-index: 1000;
    -webkit-transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1), -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
  }
}

@media (max-width: 57.5em) and (max-width: 38.4375em) {
  .navigation__background {
    top: 40px;
  }
}

@media (max-width: 57.5em) and (max-width: 23.0625em) {
  .navigation__background {
    right: 10px;
  }
}

@media (max-width: 57.5em) {
  .header__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;
    opacity: 0;
    /* use transform instead for a smoother animation and also more performant  */
    -webkit-transform: translateX(-800px);
            transform: translateX(-800px);
    /* put the width 100% here  */
    width: 100%;
  }
  .header__nav-list {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: center;
    display: block;
  }
  .header__nav-item.clicked-parent {
    -webkit-box-shadow: none;
            box-shadow: none;
    background-color: #333;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item {
    margin-bottom: .5em;
    margin-top: .5em;
    margin-left: 0 !important;
    padding: .75em 1em;
    background-color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item:hover {
    -webkit-transform: translateX(0.75em);
            transform: translateX(0.75em);
    background-color: #333;
  }
  .header__nav-item:hover {
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  .header__nav-link.clicked {
    color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-link {
    color: #1b4798;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .navigation__checkbox:checked ~ .navigation__background {
    -webkit-transform: scale(70);
            transform: scale(70);
  }
  .navigation__checkbox:checked ~ .header__nav {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link {
    color: #1b4798;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  .navigation__icon {
    position: relative;
    margin-top: 1.55em;
  }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 1.6em;
    height: 2px;
    background-color: #fff;
    display: inline-block;
  }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    -webkit-transition: all 400ms;
    transition: all 400ms;
    left: 0;
  }
  .navigation__icon::before {
    -webkit-transform: translateY(-0.45em);
            transform: translateY(-0.45em);
  }
  .navigation__icon::after {
    -webkit-transform: translateY(0.45em);
            transform: translateY(0.45em);
  }
  .navigation__button:hover .navigation__icon::before {
    -webkit-transform: translateY(-0.55em);
            transform: translateY(-0.55em);
  }
  .navigation__button:hover .navigation__icon::after {
    -webkit-transform: translateY(0.55em);
            transform: translateY(0.55em);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    background-color: transparent;
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    -webkit-transform: translateY(0) rotate(135deg);
            transform: translateY(0) rotate(135deg);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    -webkit-transform: translateY(0) rotate(-135deg);
            transform: translateY(0) rotate(-135deg);
  }
}

@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .header__nav-link {
    font-size: .8em;
  }
  .header__nav-item {
    padding: .5em .75em;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .header__nav-link {
    font-size: .82em;
  }
  .header__nav-item {
    padding: .5em .75em;
  }
}

.hero--overflow {
  overflow: hidden;
}

.hero {
  position: relative;
}

.hero__wrap {
  height: 75vh;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/hero-paid.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/hero-paid.jpg");
  background-size: cover;
  background-attachment: fixed;
  color: rgba(255, 255, 255, 0.8);
  position: relative;
  background-repeat: no-repeat;
  background-position: center center;
}

@media (max-width: 31.25em) {
  .hero__wrap {
    height: 55vh;
    background-attachment: scroll;
    background-position: 20% center;
  }
}

.hero__center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  /*** This was the fix to keep the subheading from text wrapping ***/
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
}

.hero__heading {
  font-weight: 300;
  font-size: 5.9em;
  letter-spacing: 2px;
  line-height: 1;
  visibility: hidden;
}

@media (max-width: 48.75em) {
  .hero__heading {
    font-size: 11.6vw;
  }
}

.hero__subheading {
  font-size: 3.3em;
  visibility: hidden;
}

@media (max-width: 48.75em) {
  .hero__subheading {
    font-size: 6.8vw;
  }
}

.hero__subheading--span {
  color: #019ce9;
}

.hero__span {
  font-weight: 300;
  font-size: .9em;
}

/******* iPhones landscape *******/
@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media only screen and (min-device-width: 414px) and (max-device-width: 736px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 812px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

/******* Galaxy Phones landscape *******/
@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

/******* Pixel Phones landscape *******/
@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

.brush {
  background-image: url("../img/brush-hero-btm.png");
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
  height: 63px;
}

.btn:link, .btn:visited {
  font-size: .8em;
  text-transform: uppercase;
  display: inline-block;
  color: #fff;
  background-color: #0188cb;
  padding: 1em 2em;
  border-radius: 99em;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
  -webkit-transition: background-color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, transform 150ms linear;
  transition: background-color 300ms ease-out, transform 150ms linear, -webkit-transform 150ms linear;
}

.btn:link:hover, .btn:visited:hover {
  background-color: #016698;
}

.btn:link:active, .btn:visited:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.cards__btn-2:link, .cards__btn-2:visited {
  background-color: transparent;
  border: 1px solid #fff;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.cards__btn-2:hover {
  background-color: transparent !important;
  color: #cccccc;
  border-color: #cccccc;
}

.cards__btn-2:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.registration {
  max-width: 1280px;
  margin: 5em auto 2em auto;
  text-align: center;
  font-size: 1.1em;
  border: 1px solid #222;
  padding: 1em;
  width: 60%;
}

.cards {
  /** flexbox fallback for IE11 **/
  /* FIX FOR IE11 - just using scale for all browers */
}

.cards__about.update {
  margin-top: 5em;
  margin-bottom: -2em;
  font-style: italic;
  font-size: 1.2em;
}

.cards__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

@media (max-width: 47.5em) {
  .cards__about {
    font-size: 1em;
    margin: 4em auto 5em auto;
  }
}

@media (max-width: 35em) {
  .cards__about {
    width: 90%;
  }
}

@media (max-width: 28.125em) {
  .cards__about {
    font-size: .95em;
    line-height: 1.4;
    width: 100%;
  }
}

.cards__main-wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.cards__grid {
  /** flexbox fallback for IE11 **/
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@supports (display: grid) {
  .cards__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    grid-gap: 2em;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

@media (max-width: 61.25em) {
  @supports (display: grid) {
    .cards__grid {
      grid-gap: 1em;
    }
  }
}

@media (max-width: 38.875em) {
  @supports (display: grid) {
    .cards__grid {
      grid-gap: 3em 1em;
    }
  }
}

.cards__grid > * {
  width: 300px;
  margin: 1em;
}

@supports (display: grid) {
  .cards__grid > * {
    width: auto;
    margin: 0;
  }
}

.cards__wrap {
  background-color: #fff;
  border-radius: 10px;
  border: 1px solid #e0e0e0;
}

@media (max-width: 38.875em) {
  .cards__wrap {
    width: 80%;
    margin: 0 auto;
  }
}

@media (max-width: 28.125em) {
  .cards__wrap {
    width: 100%;
    margin: 0 auto;
  }
}

.cards__image-wrap {
  position: relative;
  width: 100%;
  overflow: hidden;
  z-index: 2;
  border-radius: 10px 10px 0 0;
}

.cards__image {
  width: 100%;
  height: auto;
  display: block;
}

.cards__wave {
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  height: 0;
}

.cards__wave::before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #fff 16px);
}

.cards__wave::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #fff 12px, transparent 13px);
}

.cards__content {
  padding: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cards__icon {
  color: #0188cb;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__icon::before {
  margin: 0 !important;
  font-size: 3em !important;
}

.cards__icon.flaticon-kindergarten {
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
  /*&::before {
           
           font-size: 3.2em !important;
        
        }*/
}

.cards__subheading-brush {
  position: relative;
  padding-bottom: 20px;
}

.cards__subheading-brush::after {
  background-color: #f27d7f;
  position: absolute;
  content: "";
  padding: 0;
  max-width: 274px;
  width: 100%;
  display: inline-block;
  background-image: url("../img/footer_title_bg.png");
  background-position: left bottom;
  background-repeat: no-repeat;
  bottom: 0;
  left: 55%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  height: 14px;
}

@media (max-width: 61.25em) {
  .cards__subheading-brush::after {
    max-width: 240px;
    left: 50%;
  }
}

.cards__subheading-brush--2::after {
  background-color: #4b7195;
}

.cards__subheading-brush--3::after {
  background-color: #acc157;
}

.cards__subheading-brush-span--1, .cards__subheading-brush-span--2, .cards__subheading-brush-span--3 {
  font-weight: 700;
}

.cards__subheading {
  margin: .5em 0 1em 0;
  font-size: 1.7em;
  font-weight: 300;
  text-align: center;
}

@media (max-width: 61.25em) {
  .cards__subheading {
    font-size: 1.5em;
    margin: .5em 0 .75em 0;
  }
}

.cards__icon-wrap {
  margin-bottom: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cards__icon:not(:last-of-type) {
  margin-right: .3em;
}

.cards__summary {
  line-height: 1.5;
}

@media (max-width: 28.125em) {
  .cards__summary {
    font-size: .95em;
    line-height: 1.4;
  }
}

.cards__btn {
  margin: 3em 0;
  -ms-flex-item-align: center;
      align-self: center;
}

@media (max-width: 28.125em) {
  .cards__btn {
    margin: 2em 0;
  }
}

.current-cal {
  /* use a low max-width to keep the text size the same until 730px then it scales down as the viewport width decreases */
  max-width: 730px;
  margin: 0 auto 8em auto;
  padding: 0 1em;
  text-align: center;
}

@media (max-width: 28.125em) {
  .current-cal {
    padding: 0 .5em;
  }
}

.current-cal--svg {
  width: 75%;
  height: 100%;
  margin: 0 auto;
}

.current-cal--text {
  font-family: 'Bubblegum Sans', sans-serif;
  font-size: 3em;
  text-anchor: middle;
}

.current-cal--list {
  margin-top: 2em;
  display: inline-block;
  text-align: left;
}

@media (max-width: 31.25em) {
  .current-cal--list {
    font-size: .95em;
  }
}

@media (max-width: 25em) {
  .current-cal--list {
    font-size: .9em;
  }
}

.current-cal--item {
  margin-bottom: .75em;
  font-size: 1.05em;
  line-height: 1.4;
  opacity: 0;
  -webkit-transform: translateY(-200%) scale(1.3);
          transform: translateY(-200%) scale(1.3);
  -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.current-cal--item--flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.current-cal--item:nth-of-type(2) {
  -webkit-transition-delay: 500ms;
          transition-delay: 500ms;
}

.current-cal--item:nth-of-type(3) {
  -webkit-transition-delay: 900ms;
          transition-delay: 900ms;
}

/*
.current-cal--item:nth-of-type(3) {
    transition-delay: 1000ms;
}

.current-cal--item:nth-of-type(4) {
    transition-delay: 1500ms;
}

.current-cal--item:nth-of-type(5) {
    transition-delay: 2000ms;
}
*/
.current-cal--item--visible {
  opacity: 1;
  -webkit-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1);
}

.current-cal--span {
  font-style: italic;
}

.current-cal--img {
  width: 16px;
  display: inline-block;
  -webkit-transform: translateY(3px);
          transform: translateY(3px);
  margin-right: 5px;
}

@media (max-width: 31.25em) {
  .current-cal--img {
    width: 14px;
  }
}

.gallery.fullwidth {
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.gallery__image-wrap {
  width: 25%;
  background-color: #000;
  overflow: hidden;
}

@media (max-width: 52.5em) {
  .gallery.fullwidth {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .gallery__image-wrap {
    width: 50%;
  }
  .gallery__image-wrap--order {
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
  }
}

.gallery__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .85;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__image:hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  opacity: 1;
}

.footer {
  position: relative;
  padding: 2em;
  background-image: url("../img/footer--bg.png");
  background-repeat: repeat;
  border-bottom: 5px solid #212121;
  /** flexbox fallback for IE11 **/
  /* Fix for iphone safari browser showing blue text */
}

@media (max-width: 28.125em) {
  .footer {
    padding: 2em 1em;
  }
}

.footer__wrap {
  color: #b0b0b0;
  margin-bottom: 3em;
  max-width: 1280px;
  margin: 0 auto;
}

.footer__logo-wrap {
  margin: 1em 0;
}

.footer__logo {
  display: inline-block;
}

.footer__logo img {
  width: 70%;
  height: auto;
}

.footer__main {
  /** flexbox fallback for IE11 **/
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 3em 0;
  line-height: 1.4;
}

@supports (display: grid) {
  .footer__main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 2.5em;
  }
}

@media (max-width: 28.125em) {
  @supports (display: grid) {
    .footer__main {
      grid-gap: 3.5em;
    }
  }
}

.footer__main > * {
  width: 250px;
  margin: 1em;
}

@supports (display: grid) {
  .footer__main > * {
    width: auto;
    margin: 0;
  }
}

.footer__subheading {
  color: #fff;
  font-weight: 300;
  font-size: 1.2em;
  margin-bottom: 1em;
}

.footer__subheading-span {
  font-weight: 700;
}

.footer__mission {
  line-height: 1.5;
}

.footer__hours {
  color: #0188cb;
  margin-bottom: .8em;
}

.footer__closings-link {
  color: #0188cb;
  text-decoration: underline;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.footer__closings-link:hover {
  color: #01aafe;
}

.footer__contact p {
  margin-bottom: 1.2em;
  font-weight: 300;
  overflow: auto;
}

.footer__contact-icon {
  text-align: left;
  float: left;
  margin-right: .25em;
  width: 1.1em;
  height: 1.1em;
  fill: #0188cb;
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

.footer__contact-icon--1 {
  width: 1.2em;
  height: 1.2em;
}

.footer__telephone a {
  color: #b0b0b0 !important;
}

.footer__fax {
  color: #b0b0b0 !important;
}

.footer__shape {
  background-image: url("../img/shape_bottom.png");
  background-repeat: no-repeat;
  width: 300px;
  height: 45px;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.footer__icon-wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.footer__icon {
  fill: #0188cb;
  width: 1.3em;
  height: 1.3em;
  -webkit-transform: translateY(3px);
          transform: translateY(3px);
}

.footer__bottom {
  background-color: #121212;
  padding: 2em;
  color: #b0b0b0;
}

.footer__copyright {
  text-align: center;
  margin-bottom: .5em;
}

@media (max-width: 28.125em) {
  .footer__copyright {
    font-size: .95em;
  }
}

.footer__design {
  text-align: center;
  font-size: .9em;
}

.footer__me, .footer__me:visited {
  color: #0188cb;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.footer__me:hover, .footer__me:visited:hover {
  color: #01aafe;
}

.footer__taxid {
  margin-top: 2.5em;
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(79, 79, 79, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  border: 1px dashed #0188cb;
  z-index: 9500;
}

.js-btt-btn-icon {
  fill: #fff;
  width: 1em;
  height: 1em;
  -webkit-transform: translateY(5px);
          transform: translateY(5px);
  -webkit-transition: fill 300ms ease-in;
  transition: fill 300ms ease-in;
}

.js-btt-btn:hover .js-btt-btn-icon {
  fill: #0188cb;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 1.5em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

.hero__wrap--two {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/wall.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/wall.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--two {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/wall--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/wall--small.jpg");
  }
}

.hero__hdg {
  font-size: 4.5em;
  color: #fff;
  font-family: 'Bubblegum Sans', sans-serif;
  letter-spacing: 2px;
}

@media (max-width: 47.5em) {
  .hero__hdg {
    font-size: 3.75em;
  }
}

@media (max-width: 35em) {
  .hero__hdg {
    font-size: 3.2em;
  }
}

@media (max-width: 23.0625em) {
  .hero__hdg {
    font-size: 2.6em;
  }
}

.aboutus {
  max-width: 1280px;
  margin: 0 auto;
  /*
    
    To make the font-size change a little smoother when the size of the
    SVG embedded object changes/in media queries, you can add in a CSS transition effect:
    
    svg text { transition: font-size 0.5s; }
    
    */
}

.aboutus__wrap {
  width: 70%;
  margin: 6em auto 0 auto;
  overflow-x: hidden;
}

@media (max-width: 57.5em) {
  .aboutus__wrap {
    width: 80%;
  }
}

@media (max-width: 47.5em) {
  .aboutus__wrap {
    width: 90%;
  }
}

@media (max-width: 38.4375em) {
  .aboutus__wrap {
    width: 95%;
  }
}

@media (max-width: 35em) {
  .aboutus__wrap {
    width: 100%;
  }
}

.aboutus__svg {
  width: 100%;
  height: 100%;
}

.aboutus__text-svg {
  font-family: 'Bubblegum Sans', sans-serif;
  font-size: 20px;
}

.aboutus__tspan-svg {
  font-size: 35px;
}

.aboutus__image-svg {
  -webkit-clip-path: url(#svg-path);
          clip-path: url(#svg-path);
}

.aboutus__sect {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
  grid-gap: 1.5em 1.25em;
  margin-bottom: 3em;
}

.aboutus__imgwrap {
  background: url("../img/aqua-circle-bubble.png") no-repeat top left;
  height: 60px;
  width: 58px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.aboutus__icon {
  fill: #fff;
  width: 1.4em;
  height: 1.4em;
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.aboutus__hdg {
  font-weight: 300;
  position: relative;
  font-size: 1.6em;
  justify-self: start;
  -ms-flex-item-align: center;
      align-self: center;
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.aboutus__hdg::after {
  content: "";
  position: absolute;
  height: 1px;
  background-color: #e0e0e0;
  width: 1.5em;
  bottom: -.5em;
  left: 0;
}

.aboutus__summary {
  font-size: 1.1em;
  line-height: 1.4;
  grid-column: 1 / 3;
  grid-row: 2 / 3;
}

.aboutus__para {
  margin-bottom: 1em;
}

@media (max-width: 28.125em) {
  .aboutus__para {
    font-size: .95em;
  }
}

.aboutus__span {
  font-weight: 700;
}

.aboutus__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.aboutus__link:hover {
  color: #01557f;
}

.aboutus__quote {
  font-weight: 400;
  font-style: italic;
  font-size: 1.4em;
  width: 100%;
  margin: 3em 0;
  padding-right: 4em;
  padding-left: 2em;
  display: grid;
  grid-column-gap: 1.5em;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  opacity: 0;
  -webkit-transition: all 800ms ease-out;
  transition: all 800ms ease-out;
  -webkit-transform: translateY(-150%) scale(1.4);
          transform: translateY(-150%) scale(1.4);
}

@media (max-width: 52.5em) {
  .aboutus__quote {
    font-size: 1.3em;
    margin: 2.5em 0;
  }
}

@media (max-width: 47.5em) {
  .aboutus__quote {
    font-size: 1.2em;
  }
}

@media (max-width: 35em) {
  .aboutus__quote {
    padding-right: 3em;
    padding-left: 1.5em;
  }
}

@media (max-width: 28.125em) {
  .aboutus__quote {
    padding-right: 2em;
    padding-left: 1em;
  }
}

@media (max-width: 25em) {
  .aboutus__quote {
    font-size: 1.1em;
  }
}

.aboutus__quote.visible {
  opacity: 1;
  -webkit-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1);
}

.aboutus__quote span {
  font-family: sans-serif;
  color: #b0b0b0;
  font-size: 8em;
  line-height: .5;
  grid-column: 1 / 2;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

@media (max-width: 35em) {
  .aboutus__quote span {
    line-height: .45;
  }
}

.hero__wrap--five {
  background-image: url("../img/staff.jpg");
  background-repeat: no-repeat;
  background-position: 90%;
}

/**** iPhones landscape *****/
@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

@media only screen and (min-device-width: 414px) and (max-device-width: 736px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 812px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

/******* Galaxy Phones landscape *******/
@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

/******* Pixel Phones landscape *******/
@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

.staff {
  max-width: 1280px;
  margin: 0 auto 0 auto;
  /******* TEACHERS ******/
}

@media (max-width: 40.3125em) {
  .staff {
    padding: 6em 0;
  }
}

.staff__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

@media (max-width: 47.5em) {
  .staff__about {
    font-size: 1em;
    margin: 4em auto 5em auto;
  }
}

@media (max-width: 35em) {
  .staff__about {
    width: 90%;
  }
}

@media (max-width: 28.125em) {
  .staff__about {
    font-size: .95em;
    line-height: 1.4;
    width: 95%;
  }
}

.staff__office-wrap {
  /***** NOT -ms-display: grid ****/
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr;
  /** if its IE 11 then I have added margin to make up for this **/
  margin-bottom: 15em;
  margin-top: 3em;
  justify-items: center;
}

@supports (display: grid) {
  .staff__office-wrap {
    grid-column-gap: 1.5em;
  }
}

@media (max-width: 40.3125em) {
  .staff__office-wrap {
    margin-bottom: 10em;
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    /** if its IE 11 then I have added margin to make up for this **/
  }
  @supports (display: grid) {
    .staff__office-wrap {
      grid-gap: 7em 0;
    }
  }
}

.staff__individual {
  position: relative;
  width: 300px;
}

@media (max-width: 63.75em) {
  .staff__individual {
    width: 250px;
  }
}

@media (max-width: 54.375em) {
  .staff__individual {
    width: 220px;
  }
}

@media (max-width: 47.5em) {
  .staff__individual {
    width: 180px;
  }
}

@media (max-width: 40.3125em) {
  .staff__individual {
    width: 300px;
    /*** remove the margin declared below the @supports for browsers that support grid ***/
    /*** fallback for grid-gap **/
    margin: 0 auto 7em auto;
  }
  @supports (display: grid) {
    .staff__individual {
      margin: 0;
    }
  }
}

.staff__individual:first-of-type {
  -ms-grid-column: 1;
  -ms-grid-row: 1;
}

.staff__individual:nth-of-type(2) {
  -ms-grid-column: 2;
  -ms-grid-row: 1;
}

@media (max-width: 40.3125em) {
  .staff__individual:nth-of-type(2) {
    -ms-grid-column: 1;
    -ms-grid-row: 2;
  }
}

.staff__individual:nth-of-type(3) {
  -ms-grid-column: 3;
  -ms-grid-row: 1;
}

@media (max-width: 40.3125em) {
  .staff__individual:nth-of-type(3) {
    -ms-grid-column: 1;
    -ms-grid-row: 3;
  }
}

.staff__image {
  max-width: 100%;
  height: auto;
  display: block;
}

.staff__summary {
  position: absolute;
  bottom: -12%;
  background-color: #fff;
  padding: 2em;
  left: 10%;
  right: 10%;
  z-index: 3;
}

@media (max-width: 63.75em) {
  .staff__summary {
    bottom: -15%;
  }
}

@media (max-width: 54.375em) {
  .staff__summary {
    padding: 1.2em 1em;
    bottom: -12%;
  }
}

@media (max-width: 47.5em) {
  .staff__summary {
    left: 5%;
    right: 5%;
    bottom: -14.5%;
  }
}

@media (max-width: 40.3125em) {
  .staff__summary {
    padding: 2em;
    bottom: -12%;
    left: 10%;
    right: 10%;
  }
}

.staff__summary--noabsolute {
  position: relative;
  top: auto;
  left: auto;
  right: auto;
  bottom: auto;
  width: 50%;
  padding: 2em;
  -webkit-box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.2);
          box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.2);
  margin: 3.5em auto;
  text-align: center;
}

@media (max-width: 28.125em) {
  .staff__summary--noabsolute {
    padding: 1.5em 1em;
  }
}

@media (max-width: 23.0625em) {
  .staff__summary--noabsolute {
    font-size: .92em;
  }
}

.staff__summary--noabsolute::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #f27d7f;
  z-index: 1;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.staff__summary--noabsolute:hover::after {
  height: 100%;
}

.staff__summary--noabsolute:hover .staff__title {
  color: #fff;
}

.staff__summary--noabsolute:hover .staff__email {
  color: #fff;
}

.staff__summary--noabsolute:hover .staff__icon {
  fill: #fff;
}

.staff__summary:hover::after {
  height: 100%;
}

.staff__summary:hover .staff__title {
  color: #fff;
}

.staff__summary:hover .staff__email {
  color: #fff;
}

.staff__summary:hover .staff__icon {
  fill: #fff;
}

.staff__summary::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #f27d7f;
  z-index: 1;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.staff__summary--blue::after {
  background: #4b7195;
}

.staff__summary--green::after {
  background: #acc157;
}

.staff__summary--orange::after {
  background: #ea9f61;
}

.staff__name {
  position: relative;
  z-index: 2;
}

.staff__email {
  font-size: 1.25em;
  display: inline-block;
  margin-right: .15em;
  color: #2665d9;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__email:hover {
  color: #1b4798;
}

@media (max-width: 54.375em) {
  .staff__email {
    font-size: 1.1em;
  }
}

@media (max-width: 40.3125em) {
  .staff__email {
    font-size: 1.25em;
  }
}

.staff__icon {
  width: 1em;
  height: 1em;
  fill: #2665d9;
}

.staff__title {
  font-style: italic;
  font-size: 1.1em;
  position: relative;
  z-index: 2;
}

@media (max-width: 54.375em) {
  .staff__title {
    font-size: 1.05em;
  }
}

@media (max-width: 40.3125em) {
  .staff__title {
    font-size: 1.1em;
  }
}

.staff__teachers-grid {
  display: grid;
  display: -ms-grid;
  grid-template-columns: 1fr 3fr;
  -ms-grid-columns: 1fr 3fr;
  border: 1px solid #e0e0e0;
  margin-bottom: 4em;
  margin-top: 3em;
}

@media (max-width: 35em) {
  .staff__teachers-grid {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
  }
}

.staff__teachers-list {
  position: relative;
  background-color: #fff;
  -ms-grid-column: 1;
  -ms-grid-row: 1;
}

@media (max-width: 35em) {
  .staff__teachers-list {
    -ms-grid-column: 1;
    -ms-grid-row: 1;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: distribute;
        justify-content: space-around;
  }
}

.staff__teachers-hdg {
  background: #0188cb;
  height: 93px;
  width: 100%;
  position: relative;
  line-height: 93px;
  text-align: center;
  color: #fff;
  text-transform: uppercase;
  font-size: 1.3em;
}

@media (max-width: 35em) {
  .staff__teachers-hdg {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }
}

.staff__teachers-hdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
}

.staff__teachers-hdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
}

.staff__teachers-btmhdg {
  background: #0188cb;
  height: 93px;
  left: 0;
  bottom: 0;
  width: 100%;
  position: absolute;
}

@media (max-width: 35em) {
  .staff__teachers-btmhdg {
    display: none;
  }
}

.staff__teachers-btmhdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-btmhdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-item {
  padding: 1em;
  text-align: center;
}

@media (max-width: 35em) {
  .staff__teachers-item {
    padding: 1em .5em;
  }
}

.staff__teachers-item--first {
  margin-top: 1em;
}

@media (max-width: 35em) {
  .staff__teachers-item--first {
    margin-top: 0;
  }
}

.staff__teachers-item--last {
  margin-bottom: calc(93px + 1em);
}

@media (max-width: 35em) {
  .staff__teachers-item--last {
    margin-bottom: 0;
    margin-right: 0;
  }
}

.staff__teachers-link {
  font-family: 'Bubblegum Sans', Arial;
  color: #212121;
  text-transform: uppercase;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__teachers-link:hover {
  color: #0188cb;
}

.staff__teachers-link--current {
  color: #0188cb;
  font-weight: 700;
}

.staff__teachers-listout {
  display: none;
  -webkit-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
}

.staff__teachers-listout--visible {
  display: block;
  height: 100%;
}

.staff__teachers-table-wrap {
  color: #fff;
  -ms-grid-column: 2;
  -ms-grid-row: 1;
}

@media (max-width: 35em) {
  .staff__teachers-table-wrap {
    -ms-grid-column: 1;
    -ms-grid-row: 2;
    grid-column: 1 / 2;
    grid-row: 2 / 3;
  }
}

.staff__teachers-table {
  width: 100%;
  height: 100%;
  border-collapse: collapse;
}

.staff__teachers-table tr:nth-of-type(odd) {
  background-color: #333333;
}

.staff__teachers-table tr:nth-of-type(even) {
  background-color: #4f4f4f;
}

.staff__teachers-table th {
  text-align: left;
  padding: 1em;
  text-transform: uppercase;
  font-weight: 700;
}

.staff__teachers-table td {
  padding: .5em .5em .5em 1em;
}

@media (max-width: 35em) {
  .staff__teachers-table td {
    font-size: .95em;
  }
}

.staff__teachers-icon {
  width: 1.5em;
  height: 1.5em;
  fill: #fff;
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
  -webkit-transition: fill 350ms ease-out;
  transition: fill 350ms ease-out;
}

.staff__teachers-icon:hover {
  fill: #0188cb;
}

/* MAY NEED TO ADD OVERFLOW-X: HIDDEN ON TABLE OR TABLE WRAPPER ELEMENTS SINCE THEY ARE OFFSCREEN HORIZONTALLY AND THE ANIMATED IN */
.hero__wrap--three {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/school-room--large.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/school-room--large.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--three {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/school-room--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/school-room--small.jpg");
  }
}

.program {
  padding-right: 0;
  padding-left: 0;
  /** flexbox fix for IE11 **/
  /** flexbox fix for IE11 **/
  /*** rotation is 90deg not -90 and margin is -22, not -12 ***/
}

.program__split--one {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 2fr;
  grid-template-columns: 1fr 2fr;
  background-color: rgba(0, 0, 0, 0.05);
  margin-top: 2em;
  position: relative;
}

@media (max-width: 47.5em) {
  .program__split--one {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    margin-bottom: 16em;
  }
}

@media (max-width: 28.125em) {
  .program__split--one {
    margin-bottom: 18em;
  }
}

@media (max-width: 28.125em) {
  .program__split--one::before {
    content: "";
    background-color: #e0e0e0;
    width: 50px;
    height: 2px;
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    bottom: -13.5em;
  }
}

.program__split-cell--one {
  -ms-grid-column: 1;
  grid-column: 1 / 2;
  position: relative;
  text-align: right;
}

@media (max-width: 47.5em) {
  .program__split-cell--one {
    -ms-grid-column: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 2;
    grid-row: 2 / 3;
    text-align: left;
  }
}

.program__translate {
  padding: 2em;
  background-color: rgba(255, 255, 255, 0.85);
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  border-top: 5px solid #0188cb;
  max-width: 750px;
}

@media (max-width: 57.5em) {
  .program__translate {
    padding: 1em;
  }
}

@media (max-width: 25em) {
  .program__translate {
    padding: .5em;
  }
}

.program__translate--one {
  width: 150%;
  left: 0;
}

@media (max-width: 47.5em) {
  .program__translate--one {
    width: 80%;
    left: 10%;
  }
}

@media (max-width: 31.25em) {
  .program__translate--one {
    width: 90%;
    left: 5%;
  }
}

@media (max-width: 28.125em) {
  .program__translate--one {
    width: 100%;
    left: 0;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.program__heading {
  font-size: 1.4em;
  font-weight: 300;
  margin-bottom: .5em;
}

@media (max-width: 28.125em) {
  .program__heading {
    margin-top: .5em;
  }
}

.program__paraa {
  line-height: 1.4;
}

@media (max-width: 57.5em) {
  .program__paraa {
    font-size: .95em;
  }
}

.program__split-cell--two {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
}

@media (max-width: 47.5em) {
  .program__split-cell--two {
    -ms-grid-column: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 1;
    grid-row: 1 / 2;
  }
}

.program__split-cell--two img {
  max-width: 100%;
  height: auto;
  display: block;
  border: 1px solid #e0e0e0;
  /* this is needed to get it to expand width to the right */
  margin-left: auto;
}

.program__split--two {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 2fr 1fr;
  grid-template-columns: 2fr 1fr;
  background-color: rgba(0, 0, 0, 0.05);
}

@media (max-width: 47.5em) {
  .program__split--two {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    margin-bottom: 16em;
  }
}

@media (max-width: 31.25em) {
  .program__split--two {
    margin-bottom: 22em;
  }
}

@media (max-width: 28.125em) {
  .program__split--two {
    /* extra top margin as there looks like margin collapsing */
    margin-top: 16em;
    margin-bottom: 27em;
  }
}

@media (max-width: 23.0625em) {
  .program__split--two {
    margin-bottom: 29em;
  }
}

.program__split-cell--three {
  -ms-grid-column: 1;
  grid-column: 1 / 2;
}

@media (max-width: 47.5em) {
  .program__split-cell--three {
    -ms-grid-row: 1;
    grid-row: 1 / 2;
  }
}

.program__split-cell--three img {
  max-width: 120%;
  height: auto;
  display: block;
  border: 1px solid #e0e0e0;
}

@media (max-width: 47.5em) {
  .program__split-cell--three img {
    max-width: 100%;
  }
}

.program__split-cell--four {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
  position: relative;
  text-align: left;
}

@media (max-width: 47.5em) {
  .program__split-cell--four {
    -ms-grid-column: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 2;
    grid-row: 2 / 3;
    text-align: left;
  }
}

.program__translate--two {
  /* wider since it has more content */
  width: 150%;
  right: 0;
}

@media (max-width: 47.5em) {
  .program__translate--two {
    width: 80%;
    left: 10%;
  }
}

@media (max-width: 31.25em) {
  .program__translate--two {
    width: 90%;
    left: 5%;
    /*** using top DOES NOT WORK here  ***/
    -webkit-transform: translateY(-30%);
            transform: translateY(-30%);
  }
}

@media (max-width: 28.125em) {
  .program__translate--two {
    width: 100%;
    left: 0;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.program__wrap {
  padding-right: 2em;
  padding-left: 2em;
  max-width: 1280px;
  margin: 8em auto 6em auto;
  overflow-x: hidden;
}

@media (max-width: 57.5em) {
  .program__wrap {
    margin-bottom: 0;
  }
}

@media (max-width: 35em) {
  .program__wrap {
    padding-right: 1em;
    padding-left: 1em;
  }
}

@media (max-width: 28.125em) {
  .program__wrap {
    padding-right: .5em;
    padding-left: .5em;
  }
}

@media (max-width: 25em) {
  .program__wrap {
    padding-right: 0;
    padding-left: 0;
  }
}

.program__sect {
  margin: 0 auto 3em auto;
  width: 80%;
}

@media (max-width: 70em) {
  .program__sect {
    width: 90%;
  }
}

@media (max-width: 57.5em) {
  .program__sect {
    width: 100%;
  }
}

.program__sect-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 8em;
}

@media (max-width: 48.75em) {
  .program__sect-flex {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

@media (max-width: 25em) {
  .program__sect-flex {
    border: 0;
    border-radius: 0;
  }
}

@media (max-width: 57.5em) {
  .program__sect-flex:last-of-type {
    margin-bottom: 0;
  }
}

.program__sect-flex--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

@media (max-width: 48.75em) {
  .program__sect-flex--reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.program__para-wrap {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 48.75em) {
  .program {
    /* override IE11 style above */
  }
  .program__para-wrap {
    -webkit-box-flex: 1;
        -ms-flex: auto;
            flex: auto;
  }
  @supports (display: grid) {
    .program__para-wrap {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
    }
  }
}

.program__para {
  line-height: 1.4;
  padding: 1em 1.5em 1em 1em;
}

@media (max-width: 48.75em) {
  .program__para {
    padding: 1em 1em 2em 1em;
  }
}

@media (max-width: 28.125em) {
  .program__para {
    font-size: .95em;
  }
}

.program__para--reverse {
  padding: 1em 1em 1em 1.5em;
}

@media (max-width: 48.75em) {
  .program__para--reverse {
    padding: 1em 1em 2em 1em;
  }
}

.program__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.program__link:hover {
  color: #01557f;
}

.program__small {
  font-size: 1em;
  display: block;
  font-style: italic;
  margin-top: 1em;
}

.program__table-wrap {
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background-color: #0188cb;
  color: #fff;
  padding: 2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 28.125em) {
  .program__table-wrap {
    padding: 2em 1em;
  }
}

.program__table-wrap::before {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #0188cb 16px);
}

@media (max-width: 48.75em) {
  .program__table-wrap::before {
    left: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap::after {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #0188cb 12px, transparent 13px);
}

@media (max-width: 48.75em) {
  .program__table-wrap::after {
    left: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

@media (max-width: 48.75em) {
  .program {
    /* override IE11 style above */
  }
  .program__table-wrap {
    -webkit-box-flex: 1;
        -ms-flex: auto;
            flex: auto;
  }
  @supports (display: grid) {
    .program__table-wrap {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
    }
  }
}

.program__table-wrap--reverse::before {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

@media (max-width: 48.75em) {
  .program__table-wrap--reverse::before {
    right: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap--reverse::after {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

@media (max-width: 48.75em) {
  .program__table-wrap--reverse::after {
    right: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table {
  font-size: 1.1em;
  border-collapse: collapse;
  border: 1px solid #fff;
  -webkit-transition: all 800ms cubic-bezier(0.75, -0.5, 0.25, 1.32);
  transition: all 800ms cubic-bezier(0.75, -0.5, 0.25, 1.32);
  -webkit-transform: translateX(200%);
          transform: translateX(200%);
}

@media (max-width: 28.125em) {
  .program__table {
    font-size: 1em;
  }
}

@media (max-width: 23.0625em) {
  .program__table {
    font-size: .95em;
  }
}

.program__table--reverse {
  -webkit-transform: translateX(-200%);
          transform: translateX(-200%);
}

.program__table--visible {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  opacity: 1;
}

.program__table tr:nth-of-type(1n) {
  background-color: transparent;
}

.program__table tr:nth-of-type(2n) {
  background-color: rgba(255, 255, 255, 0.2);
}

.program__table-row--one {
  background-color: #f27d7f !important;
}

.program__table-row--two {
  background-color: #4b7195 !important;
}

.program__table-row--three {
  background-color: #acc157 !important;
}

.program__table th {
  font-family: 'Bubblegum Sans', Arial;
  text-transform: uppercase;
  text-align: center;
  padding: 1em;
}

@media (max-width: 28.125em) {
  .program__table th {
    padding: .75em;
  }
}

.program__table td {
  padding: 1em;
}

@media (max-width: 28.125em) {
  .program__table td {
    padding: .75em;
  }
}

.hero__wrap--four {
  background-image: url("../img/chalkboard--blue-highres.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--four {
    background-image: url("../img/chalkboard--blue-highres--small.jpg");
  }
}

.curriculum {
  padding: 10em 0 6em 0;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  /* flexbox fix for IE11 **/
  /* Using translate since padding makes the bottom sect go higher and thus the entire curriculum__sect is going higher */
}

@media (max-width: 43.75em) {
  .curriculum {
    padding: 8em 0 3em 0;
  }
}

.curriculum__hdg {
  font-family: 'Bubblegum Sans', Arial;
  font-size: 7em;
  color: #000;
}

.curriculum__wrap {
  max-width: 1280px;
  margin: 6em auto 0 auto;
}

.curriculum__sect {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  margin-bottom: 8em;
  position: relative;
}

@media (max-width: 57.5em) {
  .curriculum__sect {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
    width: 80%;
    margin: 0 auto 8em auto;
    border: 0;
    -webkit-box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.3);
            box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.3);
  }
}

@media (max-width: 43.75em) {
  .curriculum__sect {
    width: 90%;
  }
}

@media (max-width: 38.4375em) {
  .curriculum__sect {
    width: 100%;
    -webkit-box-shadow: 0px 0px 2px 3px rgba(0, 0, 0, 0.4);
            box-shadow: 0px 0px 2px 3px rgba(0, 0, 0, 0.4);
  }
}

@media (max-width: 57.5em) {
  .curriculum__sect:not(.no--line)::before {
    content: "";
    background-color: #e0e0e0;
    width: 50px;
    height: 2px;
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    top: -4em;
  }
}

.curriculum__sect--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

@media (max-width: 57.5em) {
  .curriculum__sect--reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
  }
}

.curriculum__image {
  max-width: 60%;
  height: auto;
  -o-object-fit: cover;
     object-fit: cover;
}

@media (max-width: 70em) {
  .curriculum__image {
    /* ??????? */
    font-size: 1.55em;
  }
}

@media (max-width: 57.5em) {
  .curriculum__image {
    max-width: 100%;
  }
}

@supports (display: grid) {
  .curriculum__main {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.curriculum__top {
  color: #fff;
  padding: 1em;
  background-color: #f27d7f;
}

@media (max-width: 57.5em) {
  .curriculum__top {
    padding: 1em 2em 2em 2em;
  }
}

@media (max-width: 35em) {
  .curriculum__top {
    padding: 1em;
  }
}

@media (max-width: 25em) {
  .curriculum__top {
    padding: .5em;
  }
}

.curriculum__top--blue {
  background-color: #4b7195;
}

.curriculum__top--green {
  background-color: #acc157;
}

.curriculum__top--orange {
  background-color: #ea9f61;
}

.curriculum__heading {
  font-family: 'Bubblegum Sans', cursive;
  font-size: 1.6em;
  line-height: 1.6em;
  text-transform: uppercase;
  margin-bottom: 10px;
  text-align: center;
}

@media (max-width: 57.5em) {
  .curriculum__heading {
    margin-top: 10px;
    margin-bottom: 14px;
  }
}

@media (max-width: 28.125em) {
  .curriculum__heading {
    font-size: 1.45em;
    line-height: 1.45em;
  }
}

.curriculum__hearts {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 1.5em;
}

.curriculum__hearts div {
  z-index: 99;
}

.curriculum__hearts div + div {
  margin-left: .1em;
}

.curriculum__hearts::before {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  content: "";
  height: 2px;
  width: 100%;
  background-color: #fff;
  position: absolute;
  top: 44%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.curriculum__hearts-icon {
  height: 18px;
  width: 18px;
  fill: #fff;
}

.curriculum__summary {
  line-height: 1.4;
  font-size: 1.1em;
}

@media (max-width: 70em) {
  .curriculum__summary {
    line-height: 1.35;
  }
}

@media (max-width: 57.5em) {
  .curriculum__summary {
    line-height: 1.4;
  }
}

@media (max-width: 28.125em) {
  .curriculum__summary {
    font-size: 1.05em;
  }
}

@media (max-width: 25em) {
  .curriculum__summary {
    font-size: 1em;
    line-height: 1.3;
  }
}

.curriculum__link {
  color: #fff;
  border-bottom: 1px solid currentColor;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.curriculum__link:hover {
  color: #ddd;
}

.curriculum__price {
  display: block;
  text-transform: uppercase;
  color: #fff;
  border: 1px solid #fff;
  padding: .75em 1.5em;
  background-color: transparent;
  border-radius: 99em;
  margin: 2em auto 1em auto;
  -webkit-box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
  -webkit-transition: background-color 300ms ease-out, color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, transform 150ms linear, -webkit-transform 150ms linear;
  width: 10em;
  text-align: center;
}

@media (max-width: 47.5em) {
  .curriculum__price {
    margin: 2em auto .5em auto;
  }
}

@media (max-width: 35em) {
  .curriculum__price {
    margin: 2em auto 1em auto;
  }
}

@media (max-width: 28.125em) {
  .curriculum__price {
    font-size: .95em;
    width: 8em;
  }
}

.curriculum__price:hover {
  background-color: #fff;
  color: #f27d7f;
}

.curriculum__price:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.curriculum__price--blue:hover {
  color: #4b7195;
}

.curriculum__price--green:hover {
  color: #acc157;
}

.curriculum__price--orange:hover {
  color: #ea9f61;
}

.curriculum__note {
  display: inline-block;
  font-style: italic;
  font-size: 1em;
  margin-top: .5em;
}

.curriculum__bottom {
  color: #4f4f4f;
  padding: 1.75em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 70em) {
  .curriculum__bottom {
    padding: 1em;
  }
}

.curriculum__subheading {
  margin: 0;
  font-size: 1.75em;
  text-transform: uppercase;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 70em) {
  .curriculum__subheading {
    font-size: 1.55em;
  }
}

@media (max-width: 25em) {
  .curriculum__subheading {
    font-size: 1.4em;
  }
}

.curriculum__ratio {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.curriculum__ratio {
  border-left: 1px solid #e0e0e0;
}

.curriculum__title {
  font-weight: 700;
  text-transform: uppercase;
  /*transform: translateY(.25em);*/
}

@media (max-width: 25em) {
  .curriculum__title {
    font-size: .95em;
  }
}

.curriculum__number {
  font-size: 2em;
  color: #0188cb;
  /*transform: translateY(-.35em);*/
}

@media (max-width: 70em) {
  .curriculum__number {
    font-size: 1.7em;
  }
}

@media (max-width: 25em) {
  .curriculum__number {
    font-size: 1.6em;
  }
}

.hero__wrap-2.calendar {
  height: 0vh;
  margin-bottom: 0;
}

.calendar--wrap {
  background-image: url("../img/cloud-bg.png");
  background-color: #008c99;
  background-attachment: fixed;
  padding-top: 10em;
  padding-bottom: 10em;
}

.footer.cal {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/footer--bg.png");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/footer--bg.png");
}

/* fix to make height stay full height of calendar at mobile viewports */
.fc-unthemed th, .fc-unthemed td, .fc-unthemed thead, .fc-unthemed tbody, .fc-unthemed .fc-divider, .fc-unthemed .fc-row, .fc-unthemed .fc-content, .fc-unthemed .fc-popover, .fc-unthemed .fc-list-view, .fc-unthemed .fc-list-heading td {
  border-color: #000 !important;
}

.fc-scroller.fc-day-grid-container {
  height: auto !important;
}

@media (max-width: 41.875em) {
  body .fc {
    font-size: .9em !important;
  }
}

@media (max-width: 35em) {
  body .fc {
    font-size: .85em !important;
  }
}

@media (max-width: 25em) {
  body .fc {
    font-size: .8em !important;
  }
}

@media (max-width: 35em) {
  .fc-toolbar {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .fc-center {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
    text-align: center;
    margin-bottom: .5em;
  }
  .fc-dayGrid-view .fc-body .fc-row {
    min-height: 6.25em !important;
  }
}

.note {
  font-size: 1.3em;
  color: darkred;
  margin-top: 1em;
  width: 80%;
  margin: 3em auto 2em auto;
  border: 1px solid darkred;
  padding: 1em;
}

.hero__wrap--seven {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/business-girl--large.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/business-girl--large.jpg");
  background-attachment: scroll;
  background-position: top;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--seven {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/business-girl--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/business-girl--small.jpg");
  }
}

.forms__grid {
  margin-top: 6em;
}

.forms__wrap {
  display: -ms-grid;
  display: grid;
  color: #212121;
  /** min-content and max-content are supported by ie11 **/
  -ms-grid-columns: min-content 1fr;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-template-rows: auto auto;
  grid-column-gap: 1em;
  margin-bottom: 2.5em;
}

.forms__link {
  /** grid item cannot be an inline element in IE11 **/
  display: block;
  -ms-grid-column: 1;
  grid-column: 1 / 2;
  /** must use the following 2 for a row or col span **/
  -ms-grid-row: 1;
  -ms-grid-row-span: 2;
  grid-row: 1 / 3;
  color: inherit;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
  /** fallback for grid-gap in IE11 **/
  margin-right: 1em;
  /** reset margin for browsers that support grid **/
}

@supports (display: grid) {
  .forms__link {
    margin: 0;
  }
}

.forms__link:hover {
  color: gray;
}

.forms__item {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
  -ms-grid-row: 1;
  grid-row: 1 / 2;
  font-size: 1.2em;
  /** ie11 syntax for align-self  **/
  -ms-grid-row-align: end;
  -ms-flex-item-align: end;
      align-self: end;
  margin-bottom: .1em;
}

@media (max-width: 28.125em) {
  .forms__item {
    font-size: 1em;
  }
}

.forms__info {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
  -ms-grid-row: 2;
  grid-row: 2 / 3;
  font-style: italic;
  -ms-grid-row-align: start;
  -ms-flex-item-align: start;
      align-self: start;
}

@media (max-width: 28.125em) {
  .forms__info {
    font-size: .95em;
  }
}

/*
temp fix to kwes removing the class name from the form
.subscribe form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 3em 1.5em;
}

*/
/*
KWES WRAPS EACH INPUT ELEMENT IN A SPAN .kw-field-wrapper so the 100% width needs to be added to this span but I still might need to account for the submit button any time is is a button element and NOT a input type=submit element
*/
/*** ADD THIS POSITION RELATIVE MAYBE!!!! *****/
/***** KWES STYLES START ****/
.kw-field-wrapper {
  width: 100%;
}

.kwes-field-wrapper .help {
  position: absolute;
}

/* TEXTAREA */
.kw-field-wrapper-6 {
  height: 6em !important;
}

/* This matches pencil icon wrap to be the same height at the textarea field --why 8 and not 6?????? */
#applicant-pencil-prefix {
  height: 8em;
}

/***** KWES STYLES END ****/
.hero__wrap--eight {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.2))), url("../img/hero-contact.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("../img/hero-contact.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--eight {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.2))), url("../img/hero-contact--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("../img/hero-contact--small.jpg");
  }
}

.form-wrapper {
  margin: 4em auto 4em auto;
  max-width: 1280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 52.5em) {
  .form-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.contact {
  padding: 8em 1em;
}

@media (max-width: 25em) {
  .contact {
    padding: 5em 0;
  }
}

.contacts {
  background-color: #13326c;
  color: #fff;
  padding: 1.25em;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.contact-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
}

@media (max-width: 52.5em) {
  .contact-wrap {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
  }
}

@media (max-width: 23.0625em) {
  .contact-wrap {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.wrappy--one {
  margin-bottom: auto;
}

@media (max-width: 52.5em) {
  .wrappy--one {
    margin-right: auto;
    margin-bottom: 0;
  }
}

@media (max-width: 23.0625em) {
  .wrappy--one {
    margin-bottom: 3em;
    margin-right: 0;
  }
}

.contact-hdg {
  margin-bottom: .3em;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1.2em;
}

.contact-icon {
  fill: #0188cb;
  padding-right: .1em;
  width: 1.2em;
  height: 1.2em;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

.contact-hdg-span {
  font-weight: 700;
  font-size: .915em;
}

@media (max-width: 55.625em) {
  .contact-item {
    font-size: .95em;
  }
}

@media (max-width: 23.0625em) {
  .contact-item {
    font-size: 1em;
  }
}

.contact-item + .contact-item {
  margin-top: .3em;
}

/* Fix for iphone safari browser showing blue text */
.contact-item--gray {
  color: #fff;
}

.contact-item.hours {
  color: #0188cb;
  margin-top: 0;
  margin-bottom: .3em;
}

.contact-item.hours:not(:last-of-type) {
  margin-bottom: .75em;
}

.form {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/child-writing.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/child-writing.jpg");
  background-size: cover;
  padding: 4em 1.5em;
  -webkit-box-flex: 4;
      -ms-flex: 4;
          flex: 4;
}

@media (max-width: 28.125em) {
  .form {
    padding: 2em .75em;
  }
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
  padding-top: 3em;
}

.full-width:last-of-type {
  justify-self: center;
}

.field-text input,
.field-text textarea,
.submit {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
}

.field-text input {
  height: 2.125em;
}

.field-text input:focus,
.field-text textarea:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

form label {
  display: block;
  color: #fff;
}

.field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.field-prefix {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em;
  color: #fff;
  background-color: #13326c;
  -webkit-transition: background-color 300ms ease-out 100ms;
  transition: background-color 300ms ease-out 100ms;
}

.field-prefix.background-color {
  background-color: #333;
}

.form-icon {
  width: 1em;
  height: 1em;
  fill: #fff;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

form p {
  margin: 0;
}

textarea {
  height: 8em;
  resize: none;
}

/* changed from 1 / 3 because otherwise there will ALWAYS be two columns*/
.full-width {
  grid-column: 1 / -1;
}

@media (max-width: 35em) {
  .field-text {
    grid-column: 1 / -1;
  }
}

.full-width:last-of-type {
  justify-self: center;
}

.submit {
  margin-top: 2em;
  padding: .6em 1.2em;
  color: #fff;
  border-radius: 6px;
  border: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#1b4798), to(#153675));
  background-image: linear-gradient(#1b4798, #153675);
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.submit:hover {
  cursor: pointer;
}

.submit:focus {
  outline: none;
}

.submit:active {
  -webkit-box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
  outline: none;
  -webkit-transform: translate(1px, 1px);
          transform: translate(1px, 1px);
}

.submit span {
  margin: 0 .3em .2em 0;
}

.submit .form-icon {
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

/* Set the size of the div element that contains the map */
#map {
  height: 400px;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
