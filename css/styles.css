:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* check for overflowed elements - use mobile devtools simulator

* {
    outline: 1px solid red;
}

*/
body {
  font-size: 100%;
  font-family: 'Lato', sans-serif;
  color: #212121;
  overflow-x: hidden;
}

@media (max-width: 70.625em) {
  body {
    font-size: .95em;
  }
}

section {
  padding: 10em 2em;
}

@media (max-width: 47.5em) {
  section {
    padding: 8em 1em;
  }
}

@media (max-width: 25em) {
  section {
    padding: 6em .5em;
  }
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #4f4f4f;
  margin-bottom: .2em;
}

@media (max-width: 57.5em) {
  .pre-heading {
    font-size: .95em;
    margin-bottom: .15em;
  }
}

@media (max-width: 23.0625em) {
  .pre-heading {
    font-size: .9em;
  }
}

.sect-heading {
  font-size: 2.5em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

@media (max-width: 57.5em) {
  .sect-heading {
    font-size: 2.3em;
    letter-spacing: 1px;
  }
}

@media (max-width: 47.5em) {
  .sect-heading {
    font-size: 2.1em;
    letter-spacing: normal;
  }
}

@media (max-width: 35em) {
  .sect-heading {
    font-size: 1.9em;
  }
}

@media (max-width: 28.125em) {
  .sect-heading {
    font-size: 1.7em;
  }
}

@media (max-width: 23.0625em) {
  .sect-heading {
    font-size: 1.5em;
  }
}

.sect-heading-img {
  height: 13px;
  width: 142px;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

.sect-heading-img--program,
.sect-heading-img--curriculum,
.sect-heading-img--contactus {
  margin-bottom: 10em;
}

@media (max-width: 47.5em) {
  .sect-heading-img--program,
  .sect-heading-img--curriculum,
  .sect-heading-img--contactus {
    margin-bottom: 5em;
  }
}

.handprints {
  height: 120px;
  background-image: url("../img/handprints.jpg");
  background-position: left bottom;
  background-size: contain;
  background-repeat: repeat-x;
}

@media (max-width: 35em) {
  .handprints {
    height: 100px;
    background-size: cover;
  }
}

.line__subhdg {
  max-width: 1280px;
  text-transform: uppercase;
  color: #4f4f4f;
  font-size: 1.65em;
  margin: 0 auto .75em auto;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  grid-column-gap: .5em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  letter-spacing: .02em;
  word-spacing: .05em;
}

@media (max-width: 28.125em) {
  .line__subhdg {
    font-size: 1.5em;
  }
}

.line__subhdg::before {
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, right top, left top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to left, #0188cb, transparent);
  border-radius: .625em;
}

.line__subhdg::after {
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, left top, right top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to right, #0188cb, transparent);
  border-radius: .625em;
}

.hero {
  position: relative;
}

.brush {
  background-image: url("../img/brush-hero-btm.png");
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
  height: 63px;
}

/*** STYLES FOR THE MOBILE MENU ANIMATION ***/
/*.header__nav-item.testt {
    transition: all 800ms ease-out;
    position: relative;
}

.empty.yo {
    //transform: scale(50);
    //width: 116px;
    //height: 40px;
     transform: scale(50) rotate(180deg);
    
    opacity: 1;
    
}

.empty {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    content: "";
    z-index: -1;
    transform: scale(1) rotate(0);
    background-color: #fff;
    
    opacity: 0;
    
    //width: 0;
    //height: 0;
    //transform: scale(.1);
    transition: transform 400ms ease-in, opacity 200ms ease-in;
    pointer-events: none;
}*/
/*** END STYLES FOR THE MOBILE MENU ANIMATION ***/
.header {
  /* phone icon text  */
}

.header__top-sect {
  border-top: 5px solid #333333;
}

.header__top-sect-container {
  max-width: 1280px;
  margin: 0 auto;
}

.header__top-bar {
  background: url("../img/cner-536.png") no-repeat top center;
  height: 39px;
  width: 536px;
  position: relative;
  right: -55vw;
}

@media (max-width: 80em) {
  .header__top-bar {
    right: -50vw;
  }
}

@media (max-width: 70.625em) {
  .header__top-bar {
    right: -45vw;
  }
}

@media (max-width: 63.75em) {
  .header__top-bar {
    right: -40vw;
  }
}

@media (max-width: 57.5em) {
  .header__top-bar {
    right: -35vw;
  }
}

@media (max-width: 52.5em) {
  .header__top-bar {
    background: url("../img/cner-301.png") no-repeat top center;
    right: -57vw;
    width: 301px;
  }
}

@media (max-width: 45em) {
  .header__top-bar {
    right: -47vw;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar {
    background: none;
    width: 100%;
    right: 0;
  }
}

.header__top-bar-contact {
  position: absolute;
  right: 4em;
  top: 50%;
  -webkit-transform: translateY(calc(-50% - 5px));
          transform: translateY(calc(-50% - 5px));
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1em 0;
}

@media (max-width: 52.5em) {
  .header__top-bar-contact {
    right: 6em;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar-contact {
    right: .25em;
    z-index: 5565;
  }
}

.header__top-bar-item + .header__top-bar-item {
  margin-left: 1.5em;
}

@media (max-width: 52.5em) {
  .header__top-bar-item:last-of-type {
    display: none;
  }
}

.header__top-bar-item:first-of-type {
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
}

.header__top-bar-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.header__top-bar-icon {
  fill: #0188cb;
  margin-right: .3em;
  width: 1.2em;
  height: 1.2em;
}

.header__phone-icon {
  font-size: .9em;
}

@media (max-width: 38.4375em) {
  .header__phone-icon {
    font-size: .8em;
  }
}

.header__top-bar-link {
  color: #fff;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.header__top-bar-link:hover {
  color: #d9d9d9;
}

@media (max-width: 38.4375em) {
  .header__top-bar-link {
    color: #333;
  }
  .header__top-bar-link:hover {
    color: gray;
  }
}

.header__main-sect {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 2em;
}

@media (max-width: 63.75em) {
  .header__main-sect {
    padding: 0 1em;
  }
}

@media (max-width: 38.4375em) {
  .header__main-sect {
    padding: 2em;
  }
}

.header__logo {
  -webkit-transform: translateY(-37px);
          transform: translateY(-37px);
  margin-bottom: -30px;
}

@media (max-width: 38.4375em) {
  .header__logo {
    margin-left: auto;
    margin-right: auto;
  }
}

.header__logo-image {
  width: 15.625em;
  height: auto;
  display: block;
}

.header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header__nav-item {
  padding: .5em 0;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__nav-item + .header__nav-item {
  margin-left: 1em;
}

.header__nav-icon {
  fill: #333333;
  width: 1em;
  height: 1em;
}

.header__nav-item:hover {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
}

.header__nav-item:hover .header__nav-link {
  color: #0188cb;
}

.header__nav-item.clicked-parent {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link.clicked {
  color: #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link {
  font-size: .95em;
  letter-spacing: .05em;
  color: #333333;
  text-transform: uppercase;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

@media (max-width: 63.75em) {
  .header__nav-link {
    font-size: .85em;
  }
}

.header.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  z-index: 1001;
}

.header.sticky .header__top-sect {
  display: none;
}

.header.sticky .header__logo-image {
  width: 13.5em;
  height: auto;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

@media (max-width: 38.4375em) {
  .header.sticky .header__main-sect {
    padding: 0 1em;
  }
}

.header.sticky .header__logo {
  -webkit-transform: none;
          transform: none;
  margin-bottom: 0;
}

.header.sticky .header__nav-link {
  color: #fff;
}

.header.sticky .header__nav-item.has-submenu::after {
  color: #fff;
}

.navigation__checkbox {
  display: none;
}

@media (max-width: 57.5em) {
  .navigation__button {
    background-color: #444;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: fixed;
    top: 40px;
    right: 15px;
    z-index: 2000;
    -webkit-box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
            box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
  }
  .navigation__background {
    height: 40px;
    width: 40px;
    border-radius: 50%;
    position: fixed;
    top: 45px;
    right: 20px;
    background-image: radial-gradient(rgba(27, 71, 152, 0.8), rgba(1, 136, 203, 0.8));
    z-index: 1000;
    -webkit-transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1), -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
  }
  .header__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;
    opacity: 0;
    /* use transform instead for a smoother animation and also more performant  */
    -webkit-transform: translateX(-800px);
            transform: translateX(-800px);
    /* put the width 100% here  */
    width: 100%;
  }
  .header__nav-list {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: center;
    display: block;
  }
  .header__nav-item.clicked-parent {
    -webkit-box-shadow: none;
            box-shadow: none;
    background-color: #333;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item {
    margin-bottom: .5em;
    margin-top: .5em;
    margin-left: 0 !important;
    padding: .75em 1em;
    background-color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item:hover {
    -webkit-transform: translateX(0.75em);
            transform: translateX(0.75em);
    background-color: #333;
  }
  .header__nav-item:hover {
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  /*.header__nav-item.has-submenu::after {
        color: $royalblue;
    }*/
  /*.header__nav-item.has-submenu:hover::after {
        color: #fff;
    }*/
  .header__nav-link.clicked {
    color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-link {
    color: #1b4798;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .navigation__checkbox:checked ~ .navigation__background {
    -webkit-transform: scale(70);
            transform: scale(70);
  }
  .navigation__checkbox:checked ~ .header__nav {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link {
    color: #1b4798;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  /*.header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu::after {
        color: $royalblue;
    }*/
  /*.navigation__checkbox:checked ~ .header__nav .header__nav-item.clicked-parent.has-submenu::after  {
        color: #fff;
    }*/
  /*.header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.clicked-parent.has-submenu::after  {
        color: #fff;
    }*/
  /*.header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu:hover::after {
        color: #fff;
    }*/
  /*.navigation__checkbox:checked ~ .header__nav .header__nav-item.has-submenu:hover > ul {
        opacity: 0;
        visibility: hidden;
        top: 300%;
    }*/
  .navigation__icon {
    position: relative;
    margin-top: 1.55em;
  }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 1.6em;
    height: 2px;
    background-color: #fff;
    display: inline-block;
  }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    -webkit-transition: all 400ms;
    transition: all 400ms;
    left: 0;
  }
  .navigation__icon::before {
    -webkit-transform: translateY(-0.45em);
            transform: translateY(-0.45em);
  }
  .navigation__icon::after {
    -webkit-transform: translateY(0.45em);
            transform: translateY(0.45em);
  }
  .navigation__button:hover .navigation__icon::before {
    -webkit-transform: translateY(-0.55em);
            transform: translateY(-0.55em);
  }
  .navigation__button:hover .navigation__icon::after {
    -webkit-transform: translateY(0.55em);
            transform: translateY(0.55em);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    background-color: transparent;
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    -webkit-transform: translateY(0) rotate(135deg);
            transform: translateY(0) rotate(135deg);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    -webkit-transform: translateY(0) rotate(-135deg);
            transform: translateY(0) rotate(-135deg);
  }
}

.hero {
  position: relative;
  /*&__wrap-two {
        height: 80vh;
        background-image: url('../img/hero2.jpg');
        background-size: cover;
        
        color: rgba(255,255,255,.8);
        width: 1200px;
    }
    
    &__wrap-three {
        height: 80vh;
        background-image: url('../img/hero3.jpg');
        background-size: cover;
        
        color: rgba(255,255,255,.8);
        width: 1200px;
    }*/
}

.hero__wrap {
  height: 75vh;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/hero.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/hero.jpg");
  background-size: cover;
  background-attachment: fixed;
  color: rgba(255, 255, 255, 0.8);
  position: relative;
}

.hero__center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.hero__heading {
  text-transform: uppercase;
  font-weight: 300;
  font-size: 4em;
  letter-spacing: 2px;
  line-height: 1;
  margin-bottom: .3em;
}

.hero__heading--span {
  font-size: .5em;
}

.hero__subheading {
  font-size: 3em;
  text-transform: uppercase;
  margin-bottom: .7em;
}

.hero__subheading--span {
  color: #0188cb;
}

.btn:link, .btn:visited {
  font-size: .8em;
  text-transform: uppercase;
  display: inline-block;
  color: #fff;
  background-color: #0188cb;
  padding: 1em 2em;
  border-radius: 99em;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
  -webkit-transition: background-color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, transform 150ms linear;
  transition: background-color 300ms ease-out, transform 150ms linear, -webkit-transform 150ms linear;
}

.btn:link:hover, .btn:visited:hover {
  background-color: #016698;
}

.btn:link:active, .btn:visited:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.cards__btn-2:link, .cards__btn-2:visited {
  background-color: transparent;
  border: 1px solid #fff;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.cards__btn-2:hover {
  background-color: transparent !important;
  color: #cccccc;
  border-color: #cccccc;
}

.cards__btn-2:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.cards {
  /* 3RD CARD START -- is this used??? */
}

.cards__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

@media (max-width: 47.5em) {
  .cards__about {
    font-size: 1em;
    margin: 4em auto 5em auto;
  }
}

@media (max-width: 35em) {
  .cards__about {
    width: 90%;
  }
}

@media (max-width: 28.125em) {
  .cards__about {
    font-size: .95em;
    line-height: 1.4;
    width: 100%;
  }
}

.cards__main-wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.cards__grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-gap: 2em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media (max-width: 61.25em) {
  .cards__grid {
    grid-gap: 1em;
  }
}

@media (max-width: 38.875em) {
  .cards__grid {
    grid-gap: 3em 1em;
  }
}

.cards__wrap {
  background-color: #fff;
  border-radius: 10px;
  border: 1px solid #e0e0e0;
}

@media (max-width: 38.875em) {
  .cards__wrap {
    width: 80%;
    margin: 0 auto;
  }
}

@media (max-width: 28.125em) {
  .cards__wrap {
    width: 100%;
    margin: 0 auto;
  }
}

.cards__image-wrap {
  position: relative;
  width: 100%;
  overflow: hidden;
  z-index: 2;
  border-radius: 10px 10px 0 0;
}

.cards__image {
  width: 100%;
  height: auto;
  display: block;
}

.cards__wave {
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  height: 0;
}

.cards__wave::before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #fff 16px);
}

.cards__wave::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #fff 12px, transparent 13px);
}

.cards__content {
  padding: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cards__icon {
  color: #0188cb;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__icon::before {
  margin: 0 !important;
  font-size: 3em !important;
}

.cards__icon.flaticon-kindergarten::before {
  margin: 0 !important;
  font-size: 3.2em !important;
}

.cards__icon-large {
  color: #1b4798 !important;
}

.cards__icon-large::before {
  font-size: 3em;
}

.cards__subheading-brush {
  position: relative;
  padding-bottom: 20px;
}

.cards__subheading-brush::after {
  background-color: #f27d7f;
  position: absolute;
  content: "";
  padding: 0;
  max-width: 274px;
  width: 100%;
  display: inline-block;
  background-image: url("../img/footer_title_bg.png");
  background-position: left bottom;
  background-repeat: no-repeat;
  bottom: 0;
  left: 55%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  height: 14px;
}

@media (max-width: 61.25em) {
  .cards__subheading-brush::after {
    max-width: 240px;
    left: 50%;
  }
}

.cards__subheading-brush--2::after {
  background-color: #4b7195;
}

.cards__subheading-brush--3::after {
  background-color: #acc157;
}

.cards__subheading-brush-span--1, .cards__subheading-brush-span--2, .cards__subheading-brush-span--3 {
  font-weight: 700;
}

.cards__subheading {
  margin: .5em 0 1em 0;
  font-size: 1.7em;
  font-weight: 300;
  text-align: center;
}

@media (max-width: 61.25em) {
  .cards__subheading {
    font-size: 1.5em;
    margin: .5em 0 .75em 0;
  }
}

.cards__icon-wrap {
  margin-bottom: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cards__icon:not(:last-of-type) {
  margin-right: .3em;
}

.cards__summary {
  line-height: 1.5;
}

@media (max-width: 28.125em) {
  .cards__summary {
    font-size: .95em;
    line-height: 1.4;
  }
}

.cards__btn {
  margin: 3em 0;
  -ms-flex-item-align: center;
      align-self: center;
}

@media (max-width: 28.125em) {
  .cards__btn {
    margin: 2em 0;
  }
}

.current-cal {
  padding: 0 0 3em 0;
  text-align: center;
}

.current-cal__image {
  max-width: 600px;
  width: 60%;
  height: auto;
}

@media (max-width: 35em) {
  .current-cal__image {
    width: 90%;
  }
}

.gallery.fullwidth {
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.gallery__image-wrap {
  width: 25%;
  background-color: #000;
  overflow: hidden;
}

@media (max-width: 57.5em) {
  .gallery.fullwidth {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .gallery__image-wrap {
    width: 50%;
  }
  .gallery__image-wrap--order {
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
  }
}

.gallery__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .85;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__image:hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  opacity: 1;
}

.footer {
  position: relative;
  padding: 2em;
  background-image: url("../img/footer--bg.png");
  background-repeat: repeat;
  border-bottom: 5px solid #212121;
}

@media (max-width: 28.125em) {
  .footer {
    padding: 2em 1em;
  }
}

.footer__wrap {
  color: #b0b0b0;
  margin-bottom: 3em;
  max-width: 1280px;
  margin: 0 auto;
}

.footer__logo-wrap {
  margin: 1em 0;
}

.footer__logo {
  display: inline-block;
}

.footer__logo img {
  width: 70%;
  height: auto;
}

.footer__main {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 2.5em;
  margin: 3em 0;
  line-height: 1.4;
}

@media (max-width: 28.125em) {
  .footer__main {
    grid-gap: 3.5em;
  }
}

.footer__subheading {
  color: #fff;
  font-weight: 300;
  font-size: 1.2em;
  margin-bottom: 1em;
}

.footer__subheading-span {
  font-weight: 700;
}

.footer__mission {
  line-height: 1.5;
}

.footer__hours {
  color: #0188cb;
  margin-bottom: .8em;
}

.footer__closings-link {
  color: #0188cb;
  text-decoration: underline;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.footer__closings-link:hover {
  color: #01aafe;
}

.footer__contact p {
  margin-bottom: 1.2em;
  font-weight: 300;
  overflow: auto;
}

.footer__contact-icon {
  text-align: left;
  float: left;
  margin-right: .25em;
  width: 1.1em;
  height: 1.1em;
  fill: #0188cb;
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

.footer__contact-icon--1 {
  width: 1.2em;
  height: 1.2em;
}

.footer__shape {
  background-image: url("../img/shape_bottom.png");
  background-repeat: no-repeat;
  width: 300px;
  height: 45px;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.footer__icon-wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.footer__icon {
  fill: #0188cb;
  width: 1.3em;
  height: 1.3em;
  -webkit-transform: translateY(3px);
          transform: translateY(3px);
}

.footer__bottom {
  background-color: #121212;
  padding: 2em;
  color: #b0b0b0;
}

.footer__copyright {
  text-align: center;
  margin-bottom: .5em;
}

@media (max-width: 28.125em) {
  .footer__copyright {
    font-size: .95em;
  }
}

.footer__design {
  text-align: center;
  font-size: .9em;
}

.footer__me, .footer__me:visited {
  color: #0188cb;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.footer__me:hover, .footer__me:visited:hover {
  color: #01aafe;
}

.footer__taxid {
  margin-top: 2.5em;
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(79, 79, 79, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  border: 1px dashed #0188cb;
  z-index: 9500;
}

.js-btt-btn-icon {
  fill: #fff;
  width: 1em;
  height: 1em;
  -webkit-transform: translateY(5px);
          transform: translateY(5px);
  -webkit-transition: fill 300ms ease-in;
  transition: fill 300ms ease-in;
}

.js-btt-btn:hover .js-btt-btn-icon {
  fill: #0188cb;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 1.5em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

/* IF YOU KEEP THE MOBILE ANIMATION THEN JUST ADD THESE STYLES TO THE MAIN BODY element CLASS */
/*
.TheAboutUs {
    opacity: 0;
    transition: opacity 400ms ease-in;
}
*/
.hero__wrap--two {
  background-image: url("../img/wall.jpg");
}

.hero__heading {
  color: #fff;
}

.aboutus {
  max-width: 1280px;
  margin: 0 auto;
  /*
    
    To make the font-size change a little smoother when the size of the
    SVG embedded object changes/in media queries, you can add in a CSS transition effect:
    
    svg text { transition: font-size 0.5s; }
    
    */
  /*&__text-svg {
        font-family: 'Bubblegum Sans', sans-serif;
        font-size: 90px;
    }*/
  /*&__tspan-svg {
        font-size: 165px;
        letter-spacing: 2px;
    }*/
  /*&__image-svg {
        //height: 70vh;
        width: 100%;
        height: 300px;
        clip-path: url(#svg-path);
        object-fit: cover;
    }*/
}

.aboutus__wrap {
  width: 70%;
  margin: 6em auto 0 auto;
}

@media (max-width: 57.5em) {
  .aboutus__wrap {
    width: 80%;
  }
}

@media (max-width: 47.5em) {
  .aboutus__wrap {
    width: 90%;
  }
}

@media (max-width: 38.4375em) {
  .aboutus__wrap {
    width: 95%;
  }
}

@media (max-width: 35em) {
  .aboutus__wrap {
    width: 100%;
  }
}

.aboutus__svg {
  width: 100%;
  height: 100%;
}

.aboutus__text-svg {
  font-family: 'Bubblegum Sans', sans-serif;
  font-size: 20px;
}

.aboutus__tspan-svg {
  font-size: 35px;
  letter-spacing: 2px;
}

.aboutus__image-svg {
  -webkit-clip-path: url(#svg-path);
          clip-path: url(#svg-path);
}

.aboutus__sect {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
  grid-gap: 1.5em 1.25em;
  margin-bottom: 3em;
}

.aboutus__imgwrap {
  background: url("../img/aqua-circle-bubble.png") no-repeat top left;
  height: 60px;
  width: 58px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.aboutus__icon {
  fill: #fff;
  width: 1.4em;
  height: 1.4em;
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.aboutus__hdg {
  font-weight: 300;
  position: relative;
  font-size: 1.6em;
  justify-self: start;
  -ms-flex-item-align: center;
      align-self: center;
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.aboutus__hdg::after {
  content: "";
  position: absolute;
  height: 1px;
  background-color: #e0e0e0;
  width: 1.5em;
  bottom: -.5em;
  left: 0;
}

.aboutus__summary {
  font-size: 1.1em;
  line-height: 1.4;
  grid-column: 1 / 3;
  grid-row: 2 / 3;
}

.aboutus__para {
  margin-bottom: 1em;
}

@media (max-width: 28.125em) {
  .aboutus__para {
    font-size: .95em;
  }
}

.aboutus__span {
  font-weight: 700;
}

.aboutus__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.aboutus__link:hover {
  color: #01557f;
}

.aboutus__quote {
  font-weight: 400;
  font-style: italic;
  font-size: 1.4em;
  width: 100%;
  margin: 3em 0;
  padding-right: 4em;
  padding-left: 2em;
  display: grid;
  grid-column-gap: 1.5em;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  opacity: 0;
  -webkit-transition: all 800ms ease-out;
  transition: all 800ms ease-out;
  -webkit-transform: translateY(-150%) scale(1.4);
          transform: translateY(-150%) scale(1.4);
}

@media (max-width: 52.5em) {
  .aboutus__quote {
    font-size: 1.3em;
    margin: 2.5em 0;
  }
}

@media (max-width: 47.5em) {
  .aboutus__quote {
    font-size: 1.2em;
  }
}

@media (max-width: 35em) {
  .aboutus__quote {
    padding-right: 3em;
    padding-left: 1.5em;
  }
}

@media (max-width: 28.125em) {
  .aboutus__quote {
    padding-right: 2em;
    padding-left: 1em;
  }
}

@media (max-width: 25em) {
  .aboutus__quote {
    font-size: 1.1em;
  }
}

.aboutus__quote.visible {
  opacity: 1;
  -webkit-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1);
}

.aboutus__quote span {
  font-family: sans-serif;
  color: #b0b0b0;
  font-size: 8em;
  line-height: .5;
  grid-column: 1 / 2;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

@media (max-width: 35em) {
  .aboutus__quote span {
    line-height: .45;
  }
}

.hero__wrap--five {
  background-image: url("../img/staff.jpg");
  background-repeat: no-repeat;
  background-position: bottom;
}

.staff {
  max-width: 1280px;
  margin: 0 auto 0 auto;
  /******* TEACHERS ******/
  /*&__teachers-table td a {
        color: inherit;
        transition: color 300ms ease-out;
        
        &:hover &__teachers-icon {
            color: $aqua;
        }
        
    }*/
}

@media (max-width: 40.3125em) {
  .staff {
    padding: 6em 0;
  }
}

.staff__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

@media (max-width: 47.5em) {
  .staff__about {
    font-size: 1em;
    margin: 4em auto 5em auto;
  }
}

@media (max-width: 35em) {
  .staff__about {
    width: 90%;
  }
}

@media (max-width: 28.125em) {
  .staff__about {
    font-size: .95em;
    line-height: 1.4;
    width: 95%;
  }
}

.staff__office-wrap {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-column-gap: 1.5em;
  margin-bottom: 15em;
  margin-top: 3em;
  justify-items: center;
}

@media (max-width: 40.3125em) {
  .staff__office-wrap {
    margin-bottom: 10em;
    grid-template-columns: 1fr;
    grid-gap: 7em 0;
  }
}

.staff__individual {
  position: relative;
  width: 300px;
}

@media (max-width: 63.75em) {
  .staff__individual {
    width: 250px;
  }
}

@media (max-width: 54.375em) {
  .staff__individual {
    width: 220px;
  }
}

@media (max-width: 47.5em) {
  .staff__individual {
    width: 180px;
  }
}

@media (max-width: 40.3125em) {
  .staff__individual {
    width: 300px;
  }
}

.staff__image {
  max-width: 100%;
  height: auto;
  display: block;
}

.staff__summary {
  position: absolute;
  bottom: -12%;
  background-color: #fff;
  padding: 2em;
  left: 10%;
  right: 10%;
  z-index: 3;
}

@media (max-width: 63.75em) {
  .staff__summary {
    bottom: -15%;
  }
}

@media (max-width: 54.375em) {
  .staff__summary {
    padding: 1.2em 1em;
    bottom: -12%;
  }
}

@media (max-width: 47.5em) {
  .staff__summary {
    left: 5%;
    right: 5%;
    bottom: -14.5%;
  }
}

@media (max-width: 40.3125em) {
  .staff__summary {
    padding: 2em;
    bottom: -12%;
    left: 10%;
    right: 10%;
  }
}

.staff__summary:hover::after {
  height: 100%;
}

.staff__summary:hover .staff__title {
  color: #fff;
}

.staff__summary:hover .staff__email {
  color: #fff;
}

.staff__summary:hover .staff__icon {
  fill: #fff;
}

.staff__summary::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #f27d7f;
  z-index: 1;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.staff__summary--blue::after {
  background: #4b7195;
}

.staff__summary--green::after {
  background: #acc157;
}

.staff__name {
  position: relative;
  z-index: 2;
}

.staff__email {
  font-size: 1.25em;
  display: inline-block;
  margin-right: .15em;
  color: #2665d9;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__email:hover {
  color: #1b4798;
}

@media (max-width: 54.375em) {
  .staff__email {
    font-size: 1.1em;
  }
}

@media (max-width: 40.3125em) {
  .staff__email {
    font-size: 1.25em;
  }
}

.staff__icon {
  width: 1em;
  height: 1em;
  fill: #2665d9;
}

.staff__title {
  font-style: italic;
  font-size: 1.1em;
  position: relative;
  z-index: 2;
}

@media (max-width: 54.375em) {
  .staff__title {
    font-size: 1.05em;
  }
}

@media (max-width: 40.3125em) {
  .staff__title {
    font-size: 1.1em;
  }
}

.staff__teachers-grid {
  display: grid;
  grid-template-columns: 1fr 3fr;
  border: 1px solid #e0e0e0;
  margin-bottom: 4em;
  margin-top: 3em;
}

@media (max-width: 35em) {
  .staff__teachers-grid {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
  }
}

.staff__teachers-list {
  position: relative;
  background-color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

@media (max-width: 35em) {
  .staff__teachers-list {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }
}

.staff__teachers-hdg {
  background: #0188cb;
  height: 93px;
  width: 100%;
  position: relative;
  line-height: 93px;
  text-align: center;
  color: #fff;
  text-transform: uppercase;
  font-size: 1.3em;
}

@media (max-width: 35em) {
  .staff__teachers-hdg {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }
}

.staff__teachers-hdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
}

.staff__teachers-hdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
}

.staff__teachers-btmhdg {
  background: #0188cb;
  height: 93px;
  left: 0;
  bottom: 0;
  width: 100%;
  position: absolute;
}

@media (max-width: 35em) {
  .staff__teachers-btmhdg {
    display: none;
  }
}

.staff__teachers-btmhdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-btmhdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-item {
  padding: 1em;
  text-align: center;
}

@media (max-width: 35em) {
  .staff__teachers-item {
    padding: 1em .5em;
  }
}

.staff__teachers-item--first {
  margin-top: 1em;
}

@media (max-width: 35em) {
  .staff__teachers-item--first {
    margin-top: 0;
  }
}

.staff__teachers-item--last {
  margin-bottom: calc(93px + 1em);
}

@media (max-width: 35em) {
  .staff__teachers-item--last {
    margin-bottom: 0;
    margin-right: 0;
  }
}

.staff__teachers-link {
  font-family: 'Bubblegum Sans', Arial;
  color: #212121;
  text-transform: uppercase;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__teachers-link:hover {
  color: #0188cb;
}

.staff__teachers-link--current {
  color: #0188cb;
  font-weight: 700;
}

.staff__teachers-listout {
  display: none;
  -webkit-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
}

.staff__teachers-listout--visible {
  display: block;
  height: 100%;
}

.staff__teachers-table-wrap {
  color: #fff;
}

@media (max-width: 35em) {
  .staff__teachers-table-wrap {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
  }
}

.staff__teachers-table {
  width: 100%;
  height: 100%;
  border-collapse: collapse;
}

.staff__teachers-table tr:nth-of-type(odd) {
  background-color: #333333;
}

.staff__teachers-table tr:nth-of-type(even) {
  background-color: #4f4f4f;
}

.staff__teachers-table th {
  text-align: left;
  padding: 1em;
  text-transform: uppercase;
  font-weight: 700;
}

.staff__teachers-table td {
  padding: .5em .5em .5em 1em;
}

@media (max-width: 35em) {
  .staff__teachers-table td {
    font-size: .95em;
  }
}

.staff__teachers-icon {
  width: 1.5em;
  height: 1.5em;
  fill: #fff;
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
  -webkit-transition: fill 350ms ease-out;
  transition: fill 350ms ease-out;
}

.staff__teachers-icon:hover {
  fill: #0188cb;
}

/* MAY NEED TO ADD OVERFLOW-X: HIDDEN ON TABLE OR TABLE WRAPPER ELEMENTS SINCE THEY ARE OFFSCREEN HORIZONTALLY AND THE ANIMATED IN */
.hero__wrap--three {
  background-image: url("../img/school-room.jpg");
}

.program {
  padding-right: 0;
  padding-left: 0;
  /*** rotation is 90deg not -90 and margin is -22, not -12 ***/
}

.program__split--one {
  display: grid;
  grid-template-columns: 1fr 2fr;
  background-color: rgba(0, 0, 0, 0.05);
  margin-top: 2em;
}

@media (max-width: 47.5em) {
  .program__split--one {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    margin-bottom: 16em;
  }
}

@media (max-width: 28.125em) {
  .program__split--one {
    margin-bottom: 18em;
  }
}

.program__split-cell--one {
  grid-column: 1 / 2;
  position: relative;
  text-align: right;
}

@media (max-width: 47.5em) {
  .program__split-cell--one {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    text-align: left;
  }
}

.program__translate {
  padding: 2em;
  background-color: #fff;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  border-top: 5px solid #0188cb;
}

@media (max-width: 57.5em) {
  .program__translate {
    padding: 1em;
  }
}

@media (max-width: 25em) {
  .program__translate {
    padding: .5em;
  }
}

.program__translate--one {
  width: 150%;
  left: 0;
}

@media (max-width: 47.5em) {
  .program__translate--one {
    width: 80%;
    left: 10%;
  }
}

@media (max-width: 31.25em) {
  .program__translate--one {
    width: 90%;
    left: 5%;
  }
}

@media (max-width: 28.125em) {
  .program__translate--one {
    width: 100%;
    left: 0;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.program__heading {
  font-size: 1.4em;
  font-weight: 300;
  margin-bottom: .5em;
}

@media (max-width: 28.125em) {
  .program__heading {
    margin-top: .5em;
  }
}

.program__paraa {
  line-height: 1.4;
}

@media (max-width: 57.5em) {
  .program__paraa {
    font-size: .95em;
  }
}

.program__split-cell--two {
  grid-column: 2 / 3;
}

@media (max-width: 47.5em) {
  .program__split-cell--two {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }
}

.program__split-cell--two img {
  max-width: 100%;
  height: auto;
  display: block;
  /* this is needed to get it to expand width to the right */
  margin-left: auto;
}

.program__split--two {
  display: grid;
  grid-template-columns: 2fr 1fr;
  background-color: rgba(0, 0, 0, 0.05);
}

@media (max-width: 47.5em) {
  .program__split--two {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    margin-bottom: 16em;
  }
}

@media (max-width: 31.25em) {
  .program__split--two {
    margin-bottom: 22em;
  }
}

@media (max-width: 28.125em) {
  .program__split--two {
    /* extra top margin as there looks like margin collapsing */
    margin-top: 16em;
    margin-bottom: 27em;
  }
}

@media (max-width: 23.0625em) {
  .program__split--two {
    margin-bottom: 29em;
  }
}

.program__split-cell--three {
  grid-column: 1 / 2;
}

@media (max-width: 47.5em) {
  .program__split-cell--three {
    grid-row: 1 / 2;
  }
}

.program__split-cell--three img {
  max-width: 120%;
  height: auto;
  display: block;
}

@media (max-width: 47.5em) {
  .program__split-cell--three img {
    max-width: 100%;
  }
}

.program__split-cell--four {
  grid-column: 2 / 3;
  position: relative;
  text-align: left;
}

@media (max-width: 47.5em) {
  .program__split-cell--four {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    text-align: left;
  }
}

.program__translate--two {
  /* wider since it has more content */
  width: 150%;
  right: 0;
}

@media (max-width: 47.5em) {
  .program__translate--two {
    width: 80%;
    left: 10%;
  }
}

@media (max-width: 31.25em) {
  .program__translate--two {
    width: 90%;
    left: 5%;
    /*** using top DOES NOT WORK here  ***/
    -webkit-transform: translateY(-30%);
            transform: translateY(-30%);
  }
}

@media (max-width: 28.125em) {
  .program__translate--two {
    width: 100%;
    left: 0;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.program__wrap {
  padding-right: 2em;
  padding-left: 2em;
  max-width: 1280px;
  margin: 8em auto 6em auto;
}

@media (max-width: 57.5em) {
  .program__wrap {
    margin-bottom: 0;
  }
}

@media (max-width: 35em) {
  .program__wrap {
    padding-right: 1em;
    padding-left: 1em;
  }
}

@media (max-width: 28.125em) {
  .program__wrap {
    padding-right: .5em;
    padding-left: .5em;
  }
}

@media (max-width: 25em) {
  .program__wrap {
    padding-right: 0;
    padding-left: 0;
  }
}

.program__sect {
  margin: 0 auto 3em auto;
  width: 80%;
}

@media (max-width: 70em) {
  .program__sect {
    width: 90%;
  }
}

@media (max-width: 57.5em) {
  .program__sect {
    width: 100%;
  }
}

.program__sect-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 8em;
}

@media (max-width: 48.75em) {
  .program__sect-flex {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

@media (max-width: 25em) {
  .program__sect-flex {
    border: 0;
    border-radius: 0;
  }
}

@media (max-width: 57.5em) {
  .program__sect-flex:last-of-type {
    margin-bottom: 0;
  }
}

.program__sect-flex--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

@media (max-width: 48.75em) {
  .program__sect-flex--reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.program__para-wrap {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.program__para {
  line-height: 1.4;
  padding: 1em 1.5em 1em 1em;
}

@media (max-width: 48.75em) {
  .program__para {
    padding: 1em 1em 2em 1em;
  }
}

@media (max-width: 28.125em) {
  .program__para {
    font-size: .95em;
  }
}

.program__para--reverse {
  padding: 1em 1em 1em 1.5em;
}

@media (max-width: 48.75em) {
  .program__para--reverse {
    padding: 1em 1em 2em 1em;
  }
}

.program__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.program__link:hover {
  color: #01557f;
}

.program__small {
  font-size: 1em;
  display: block;
  font-style: italic;
  margin-top: 1em;
}

.program__table-wrap {
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background-color: #0188cb;
  color: #fff;
  padding: 2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 28.125em) {
  .program__table-wrap {
    padding: 2em 1em;
  }
}

.program__table-wrap::before {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #0188cb 16px);
}

@media (max-width: 48.75em) {
  .program__table-wrap::before {
    left: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap::after {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #0188cb 12px, transparent 13px);
}

@media (max-width: 48.75em) {
  .program__table-wrap::after {
    left: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap--reverse::before {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

@media (max-width: 48.75em) {
  .program__table-wrap--reverse::before {
    right: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap--reverse::after {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

@media (max-width: 48.75em) {
  .program__table-wrap--reverse::after {
    right: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table {
  font-size: 1.1em;
  border-collapse: collapse;
  border: 1px solid #fff;
  -webkit-transition: all 800ms cubic-bezier(0.75, -0.5, 0.25, 1.32);
  transition: all 800ms cubic-bezier(0.75, -0.5, 0.25, 1.32);
  -webkit-transform: translateX(200%);
          transform: translateX(200%);
}

@media (max-width: 28.125em) {
  .program__table {
    font-size: 1em;
  }
}

@media (max-width: 23.0625em) {
  .program__table {
    font-size: .95em;
  }
}

.program__table--reverse {
  -webkit-transform: translateX(-200%);
          transform: translateX(-200%);
}

.program__table--visible {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  opacity: 1;
}

.program__table tr:nth-of-type(1n) {
  background-color: transparent;
}

.program__table tr:nth-of-type(2n) {
  background-color: rgba(255, 255, 255, 0.2);
}

.program__table-row--one {
  background-color: #f27d7f !important;
}

.program__table-row--two {
  background-color: #4b7195 !important;
}

.program__table-row--three {
  background-color: #acc157 !important;
}

.program__table th {
  font-family: 'Bubblegum Sans', Arial;
  text-transform: uppercase;
  text-align: center;
  padding: 1em;
}

@media (max-width: 28.125em) {
  .program__table th {
    padding: .75em;
  }
}

.program__table td {
  padding: 1em;
}

@media (max-width: 28.125em) {
  .program__table td {
    padding: .75em;
  }
}

.hero__wrap--four {
  background-image: url("../img/chalkboard--blue-highres.jpg");
}

.curriculum {
  padding: 10em 0 6em 0;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  /* Using translate since padding makes the bottom sect go higher and thus the entire curriculum__sect is going higher */
}

@media (max-width: 43.75em) {
  .curriculum {
    padding: 8em 0 3em 0;
  }
}

.curriculum__hdg {
  font-family: 'Bubblegum Sans', Arial;
  font-size: 7em;
  color: #000;
}

.curriculum__wrap {
  max-width: 1280px;
  margin: 6em auto 0 auto;
}

.curriculum__sect {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  margin-bottom: 8em;
  position: relative;
}

@media (max-width: 57.5em) {
  .curriculum__sect {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
    width: 80%;
    margin: 0 auto 8em auto;
    border: 0;
    -webkit-box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.3);
            box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.3);
  }
}

@media (max-width: 43.75em) {
  .curriculum__sect {
    width: 90%;
  }
}

@media (max-width: 38.4375em) {
  .curriculum__sect {
    width: 100%;
    -webkit-box-shadow: 0px 0px 2px 3px rgba(0, 0, 0, 0.4);
            box-shadow: 0px 0px 2px 3px rgba(0, 0, 0, 0.4);
  }
}

@media (max-width: 57.5em) {
  .curriculum__sect:not(.no--line)::before {
    content: "";
    background-color: #e0e0e0;
    width: 50px;
    height: 2px;
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    top: -4em;
  }
}

.curriculum__sect--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

@media (max-width: 57.5em) {
  .curriculum__sect--reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
  }
}

.curriculum__image {
  max-width: 60%;
  height: auto;
  -o-object-fit: cover;
     object-fit: cover;
}

@media (max-width: 70em) {
  .curriculum__image {
    /* ??????? */
    font-size: 1.55em;
  }
}

@media (max-width: 57.5em) {
  .curriculum__image {
    max-width: 100%;
  }
}

.curriculum__main {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.curriculum__top {
  color: #fff;
  padding: 1em;
  background-color: #f27d7f;
}

@media (max-width: 57.5em) {
  .curriculum__top {
    padding: 1em 2em 2em 2em;
  }
}

@media (max-width: 35em) {
  .curriculum__top {
    padding: 1em;
  }
}

@media (max-width: 25em) {
  .curriculum__top {
    padding: .5em;
  }
}

.curriculum__top--blue {
  background-color: #4b7195;
}

.curriculum__top--green {
  background-color: #acc157;
}

.curriculum__top--orange {
  background-color: #ea9f61;
}

.curriculum__heading {
  font-family: 'Bubblegum Sans', cursive;
  font-size: 1.6em;
  line-height: 1.6em;
  text-transform: uppercase;
  margin-bottom: 10px;
  text-align: center;
}

@media (max-width: 57.5em) {
  .curriculum__heading {
    margin-top: 10px;
    margin-bottom: 14px;
  }
}

@media (max-width: 28.125em) {
  .curriculum__heading {
    font-size: 1.45em;
    line-height: 1.45em;
  }
}

.curriculum__hearts {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 1.5em;
}

.curriculum__hearts div {
  z-index: 99;
}

.curriculum__hearts div + div {
  margin-left: .1em;
}

.curriculum__hearts::before {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  content: "";
  height: 2px;
  width: 100%;
  background-color: #fff;
  position: absolute;
  top: 44%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.curriculum__hearts-icon {
  height: 18px;
  width: 18px;
  fill: #fff;
}

.curriculum__summary {
  line-height: 1.4;
  font-size: 1.1em;
}

@media (max-width: 70em) {
  .curriculum__summary {
    line-height: 1.35;
  }
}

@media (max-width: 57.5em) {
  .curriculum__summary {
    line-height: 1.4;
  }
}

@media (max-width: 28.125em) {
  .curriculum__summary {
    font-size: 1.05em;
  }
}

@media (max-width: 25em) {
  .curriculum__summary {
    font-size: 1em;
    line-height: 1.3;
  }
}

.curriculum__link {
  color: #fff;
  border-bottom: 1px solid currentColor;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.curriculum__link:hover {
  color: #ddd;
}

.curriculum__price {
  display: block;
  text-transform: uppercase;
  color: #fff;
  border: 1px solid #fff;
  padding: .75em 1.5em;
  background-color: transparent;
  border-radius: 99em;
  margin: 2em auto 1em auto;
  -webkit-box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
  -webkit-transition: background-color 300ms ease-out, color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, transform 150ms linear, -webkit-transform 150ms linear;
  width: 10em;
  text-align: center;
}

@media (max-width: 47.5em) {
  .curriculum__price {
    margin: 2em auto .5em auto;
  }
}

@media (max-width: 35em) {
  .curriculum__price {
    margin: 2em auto 1em auto;
  }
}

@media (max-width: 28.125em) {
  .curriculum__price {
    font-size: .95em;
    width: 8em;
  }
}

.curriculum__price:hover {
  background-color: #fff;
  color: #f27d7f;
}

.curriculum__price:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.curriculum__price--blue:hover {
  color: #4b7195;
}

.curriculum__price--green:hover {
  color: #acc157;
}

.curriculum__price--orange:hover {
  color: #ea9f61;
}

.curriculum__note {
  display: inline-block;
  font-style: italic;
  font-size: 1em;
  margin-top: .5em;
}

.curriculum__bottom {
  color: #4f4f4f;
  padding: 1.75em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 70em) {
  .curriculum__bottom {
    padding: 1em;
  }
}

.curriculum__subheading {
  margin: 0;
  font-size: 1.75em;
  text-transform: uppercase;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 70em) {
  .curriculum__subheading {
    font-size: 1.55em;
  }
}

@media (max-width: 25em) {
  .curriculum__subheading {
    font-size: 1.4em;
  }
}

.curriculum__ratio {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.curriculum__ratio {
  border-left: 1px solid #e0e0e0;
}

.curriculum__title {
  font-weight: 700;
  text-transform: uppercase;
  /*transform: translateY(.25em);*/
}

@media (max-width: 25em) {
  .curriculum__title {
    font-size: .95em;
  }
}

.curriculum__number {
  font-size: 2em;
  color: #0188cb;
  /*transform: translateY(-.35em);*/
}

@media (max-width: 70em) {
  .curriculum__number {
    font-size: 1.7em;
  }
}

@media (max-width: 25em) {
  .curriculum__number {
    font-size: 1.6em;
  }
}

.hero__wrap-2.calendar {
  height: 0vh;
  margin-bottom: 0;
}

.calendar--wrap {
  background-image: url("../img/cloud-bg.png");
  background-color: #008c99;
  background-attachment: fixed;
  padding-top: 10em;
  padding-bottom: 10em;
}

.footer.cal {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/footer--bg.png");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/footer--bg.png");
}

.hero__wrap--seven {
  background-image: url("../img/books.jpg");
}

.forms__grid {
  margin-top: 6em;
}

.forms__wrap {
  color: #212121;
  display: grid;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-template-rows: auto auto;
  grid-column-gap: 1em;
  margin-bottom: 2.5em;
}

.forms__link {
  grid-column: 1 / 2;
  grid-row: 1 / 3;
  color: inherit;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.forms__link:hover {
  color: gray;
}

.forms__item {
  grid-column: 2 / 3;
  grid-row: 1 / 2;
  font-size: 1.2em;
  -ms-flex-item-align: end;
      align-self: end;
  margin-bottom: .1em;
}

@media (max-width: 28.125em) {
  .forms__item {
    font-size: 1em;
  }
}

.forms__info {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  font-style: italic;
  -ms-flex-item-align: start;
      align-self: start;
}

@media (max-width: 28.125em) {
  .forms__info {
    font-size: .95em;
  }
}

/*
temp fix to kwes removing the class name from the form
.subscribe form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 3em 1.5em;
}

*/
/*
KWES WRAPS EACH INPUT ELEMENT IN A SPAN .kw-field-wrapper so the 100% width needs to be added to this span but I still might need to account for the submit button any time is is a button element and NOT a input type=submit element
*/
/*** ADD THIS POSITION RELATIVE MAYBE!!!! *****/
/***** KWES STYLES START ****/
.kw-field-wrapper {
  width: 100%;
}

.kwes-field-wrapper .help {
  position: absolute;
}

/* TEXTAREA */
.kw-field-wrapper-6 {
  height: 6em !important;
}

/* This matches pencil icon wrap to be the same height at the textarea field --why 8 and not 6?????? */
#applicant-pencil-prefix {
  height: 8em;
}

/***** KWES STYLES END ****/
.hero__wrap--eight {
  background-image: url("../img/hero-contact.jpg");
}

.form-wrapper {
  margin: 4em auto 4em auto;
  max-width: 1280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 52.5em) {
  .form-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.contact {
  padding: 8em 1em;
}

@media (max-width: 25em) {
  .contact {
    padding: 5em 0;
  }
}

.contacts {
  background-color: #13326c;
  color: #fff;
  padding: 1.25em;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.contact-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
}

@media (max-width: 52.5em) {
  .contact-wrap {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
  }
}

@media (max-width: 23.0625em) {
  .contact-wrap {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.wrappy--one {
  margin-bottom: auto;
}

@media (max-width: 52.5em) {
  .wrappy--one {
    margin-right: auto;
    margin-bottom: 0;
  }
}

@media (max-width: 23.0625em) {
  .wrappy--one {
    margin-bottom: 3em;
    margin-right: 0;
  }
}

.contact-hdg {
  margin-bottom: .3em;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1.2em;
}

.contact-icon {
  fill: #0188cb;
  padding-right: .1em;
  width: 1.2em;
  height: 1.2em;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

.contact-hdg-span {
  font-weight: 700;
  font-size: .915em;
}

@media (max-width: 55.625em) {
  .contact-item {
    font-size: .95em;
  }
}

@media (max-width: 23.0625em) {
  .contact-item {
    font-size: 1em;
  }
}

.contact-item + .contact-item {
  margin-top: .3em;
}

.contact-item.hours {
  color: #0188cb;
  margin-top: 0;
  margin-bottom: .3em;
}

.contact-item.hours:not(:last-of-type) {
  margin-bottom: .75em;
}

.form {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/child-writing.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/child-writing.jpg");
  background-size: cover;
  padding: 4em 1.5em;
  -webkit-box-flex: 4;
      -ms-flex: 4;
          flex: 4;
}

@media (max-width: 28.125em) {
  .form {
    padding: 2em .75em;
  }
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
  padding-top: 3em;
}

.full-width:last-of-type {
  justify-self: center;
}

.field-text input,
.field-text textarea,
.submit {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
}

.field-text input {
  height: 2.125em;
}

.field-text input:focus,
.field-text textarea:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

form label {
  display: block;
  color: #fff;
}

.field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.field-prefix {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em;
  color: #fff;
  background-color: #13326c;
  -webkit-transition: background-color 300ms ease-out 100ms;
  transition: background-color 300ms ease-out 100ms;
}

.field-prefix.background-color {
  background-color: #333;
}

.form-icon {
  width: 1em;
  height: 1em;
  fill: #fff;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

form p {
  margin: 0;
}

textarea {
  height: 8em;
  resize: none;
}

/* changed from 1 / 3 because otherwise there will ALWAYS be two columns*/
.full-width {
  grid-column: 1 / -1;
}

@media (max-width: 35em) {
  .field-text {
    grid-column: 1 / -1;
  }
}

.full-width:last-of-type {
  justify-self: center;
}

.submit {
  margin-top: 2em;
  padding: .6em 1.2em;
  color: #fff;
  border-radius: 6px;
  border: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#1b4798), to(#153675));
  background-image: linear-gradient(#1b4798, #153675);
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.submit:hover {
  cursor: pointer;
}

.submit:focus {
  outline: none;
}

.submit:active {
  -webkit-box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
  outline: none;
  -webkit-transform: translate(1px, 1px);
          transform: translate(1px, 1px);
}

.submit span {
  margin: 0 .3em .2em 0;
}

.submit .form-icon {
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

/* Set the size of the div element that contains the map */
#map {
  height: 400px;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlLnNjc3MiLCJfdmFyTWl4aW5zLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL19icmVha3BvaW50LnNjc3MiLCJzdHlsZXMuY3NzIiwibW9kdWxlcy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL19oZXJvLnNjc3MiLCJtb2R1bGVzL19jYXJkcy5zY3NzIiwibW9kdWxlcy9fZ2FsbGVyeS5zY3NzIiwibW9kdWxlcy9fZm9vdGVyLnNjc3MiLCJtb2R1bGVzL19idG4uc2NzcyIsIm1vZHVsZXMvX2Fib3V0dXMuc2NzcyIsIm1vZHVsZXMvX3N0YWZmLnNjc3MiLCJtb2R1bGVzL19wcm9ncmFtLnNjc3MiLCJtb2R1bGVzL19jdXJyaWN1bHVtLnNjc3MiLCJtb2R1bGVzL19jYWxlbmRhci5zY3NzIiwibW9kdWxlcy9fZm9ybXMuc2NzcyIsIm1vZHVsZXMvX2NvbnRhY3Quc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLCtCQUFzQjtVQUF0Qix1QkFBc0I7RUFDbkIsd0JBQXVCO0NBQzFCOztBQUVEO0VBQ0ksNEJBQW1CO1VBQW5CLG9CQUFtQjtFQUNuQixzQkFBcUI7RUFDckIsc0JBQXFCO0VBQ3JCLFVBQVM7RUFDVCxXQUFVO0NBQ2I7O0FBR0Q7Ozs7OztFQU1FO0FBR0Y7RUFDSSxnQkFBZTtFQUNmLGdDQUErQjtFQUMvQixlQ25CMEI7RURxQjFCLG1CQUFrQjtDQUtyQjs7QUUrQkc7RUZ6Q0o7SUFRUSxpQkFBZ0I7R0FFdkI7Q0dGQTs7QUhJRDtFQUNJLGtCQUFpQjtDQVNwQjs7QUVtQkc7RUY3Qko7SUFJUSxpQkFBZ0I7R0FNdkI7Q0dKQTs7QUR1Qkc7RUY3Qko7SUFRUSxrQkFBaUI7R0FFeEI7Q0dFQTs7QUhFRDtFQUNJLDBCQUF5QjtFQUN6QixtQkFBa0I7RUFDbEIsZUMvQ3VCO0VEZ0R2QixvQkFBbUI7Q0FVdEI7O0FFQ0c7RUZmSjtJQU9RLGlCQUFnQjtJQUNoQixxQkFBb0I7R0FN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ZTtBYm0yRmY7RWFqMkZDLGNBQUE7RWJtMkZDLFlBQVk7Q0FDYiIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOnJvb3Qge1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxufVxyXG5cclxuKiwgOjpiZWZvcmUsIDo6YWZ0ZXIge1xyXG4gICAgYm94LXNpemluZzogaW5oZXJpdDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcblxyXG4vKiBjaGVjayBmb3Igb3ZlcmZsb3dlZCBlbGVtZW50cyAtIHVzZSBtb2JpbGUgZGV2dG9vbHMgc2ltdWxhdG9yXHJcblxyXG4qIHtcclxuICAgIG91dGxpbmU6IDFweCBzb2xpZCByZWQ7XHJcbn1cclxuXHJcbiovXHJcblxyXG5cclxuYm9keSB7XHJcbiAgICBmb250LXNpemU6IDEwMCU7XHJcbiAgICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xyXG4gICAgY29sb3I6ICRncmF5LWRhcmtlc3Q7XHJcbiAgICBcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxuICAgICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggMTEzMHB4KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgIH1cclxufVxyXG5cclxuc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nOiAxMGVtIDJlbTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgcGFkZGluZzogOGVtIDFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDZlbSAuNWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbi5wcmUtaGVhZGluZyB7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICRncmF5LWRhcms7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuMmVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4xNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnktMzY5KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VjdC1oZWFkaW5nIHtcclxuICAgIGZvbnQtc2l6ZTogMi41ZW07XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuMmVtO1xyXG4gICAgY29sb3I6ICRncmF5LWRhcmtlcjtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjNlbTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICBmb250LXNpemU6IDIuMWVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiBub3JtYWw7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjllbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS43ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2VjdC1oZWFkaW5nLWltZyB7XHJcbiAgICBoZWlnaHQ6IDEzcHg7XHJcbiAgICB3aWR0aDogMTQycHg7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9oZWFkaW5nLWltZy5zdmcnKTtcclxuICAgIG1hcmdpbjogMCBhdXRvIDNlbSBhdXRvO1xyXG4gICAgb3BhY2l0eTogLjU7XHJcbn1cclxuXHJcbi5zZWN0LWhlYWRpbmctaW1nLS1wcm9ncmFtLCBcclxuLnNlY3QtaGVhZGluZy1pbWctLWN1cnJpY3VsdW0sIFxyXG4uc2VjdC1oZWFkaW5nLWltZy0tY29udGFjdHVzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwZW07XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDVlbTtcclxuICAgIH0gIFxyXG59XHJcblxyXG4uaGFuZHByaW50cyB7XHJcbiAgICBoZWlnaHQ6IDEyMHB4O1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvaGFuZHByaW50cy5qcGcnKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAvL2JhY2tncm91bmQtc2l6ZTogMTAwJSA4NSU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5saW5lX19zdWJoZGcge1xyXG4gICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgY29sb3I6ICRncmF5LWRhcms7XHJcbiAgICBmb250LXNpemU6IDEuNjVlbTtcclxuICAgIG1hcmdpbjogMCBhdXRvIC43NWVtIGF1dG87XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgYXV0byAxZnI7XHJcbiAgICBncmlkLWNvbHVtbi1nYXA6IC41ZW07XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IC4wMmVtO1xyXG4gICAgd29yZC1zcGFjaW5nOiAuMDVlbTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBoZWlnaHQ6IC4zMTI1ZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICRhcXVhLCB0cmFuc3BhcmVudCk7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjYyNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBoZWlnaHQ6IC4zMTI1ZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAkYXF1YSwgdHJhbnNwYXJlbnQpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IC42MjVlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmhlcm8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uYnJ1c2gge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvYnJ1c2gtaGVyby1idG0ucG5nJyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDYzcHg7XHJcbn1cclxuXHJcblxyXG5cclxuIiwiQGluY2x1ZGUgYnJlYWtwb2ludC1zZXQoXCJ0byBlbXNcIiwgdHJ1ZSk7XHJcblxyXG4kZ3JheS1saWdodDogaHNsKDAsIDAlLCA2OSUpO1xyXG4kZ3JheS1saWdodGVyOiBoc2woMCwgMCUsIDg4JSk7XHJcbiRncmF5OiBoc2woMCwgMCUsIDUwJSk7XHJcbiRncmF5LWRhcms6IGhzbCgwLCAwJSwgMzElKTtcclxuJGdyYXktZGFya2VyOiBoc2woMCwgMCUsIDIwJSk7XHJcbiRncmF5LWRhcmtlc3Q6IGhzbCgwLCAwJSwgMTMlKTtcclxuXHJcbiRibGFjay1saWdodGVyOiBoc2woMCwgMCUsIDclKTtcclxuXHJcbiRyb3lhbGJsdWU6IGhzbCgyMTksIDcwJSwgMzUlKTtcclxuJGFxdWE6IGhzbCgyMDAsIDk5JSwgNDAlKTtcclxuJGNvbXBsZW1lbnQtYXF1YTogaHNsKDIwLCA5OSUsIDQwJSk7XHJcbiRjb21wbGVtZW50LXJveWFsYmx1ZTogaHNsKDM5LCA3MCUsIDM1JSk7XHJcblxyXG4kcGluay1icnVzaDogaHNsKDM1OSwgODIlLCA3MiUpO1xyXG4kYmx1ZS1icnVzaDogaHNsKDIwOSwgMzMlLCA0NCUpO1xyXG4kZ3JlZW4tYnJ1c2g6IGhzbCg3MiwgNDYlLCA1NSUpO1xyXG4kb3JhbmdlLWJydXNoOiBoc2woMjcsIDc3JSwgNjUlKTtcclxuXHJcbiRyZWQtaGVhcnQ6IHJnYigxODYsMCwwKTtcclxuXHJcblxyXG4kaHVnZXN0LTEzMDA6IDEzMDBweDtcclxuJGh1Z2UtMTE3MDogMTE3MHB4O1xyXG4kbGFyZ2VyLTExMjA6IDExMjBweDtcclxuJGxhcmdlLTk4MDogOTgwcHg7XHJcbiRtb2JpbGUtaGFtYnVyZ2VyOiA5MjBweDtcclxuJG1lZGl1bS04NDA6IDg0MHB4O1xyXG4kbWVkaXVtOiA3ODBweDtcclxuJG1lZGl1bS03NjA6IDc2MHB4O1xyXG4kbWVkaXVtLXNtYWxsLTcwMDogNzAwcHg7XHJcbiRzbWFsbC02MTU6IDYxNXB4O1xyXG4kc21hbGwtNTYwOiA1NjBweDtcclxuJHNtYWxsZXItNDUwOiA0NTBweDtcclxuJHNtYWxsZXItNDAwOiA0MDBweDtcclxuJHRpbnktMzY5OiAzNjlweDtcclxuIiwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IFZhcmlhYmxlc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4kQnJlYWtwb2ludC1TZXR0aW5nczogKFxuICAnZGVmYXVsdCBtZWRpYSc6IGFsbCxcbiAgJ2RlZmF1bHQgZmVhdHVyZSc6IG1pbi13aWR0aCxcbiAgJ2RlZmF1bHQgcGFpcic6IHdpZHRoLFxuXG4gICdmb3JjZSBhbGwgbWVkaWEgdHlwZSc6IGZhbHNlLFxuICAndG8gZW1zJzogZmFsc2UsXG4gICd0cmFuc2Zvcm0gcmVzb2x1dGlvbnMnOiB0cnVlLFxuXG4gICdubyBxdWVyaWVzJzogZmFsc2UsXG4gICdubyBxdWVyeSBmYWxsYmFja3MnOiBmYWxzZSxcblxuICAnYmFzZSBmb250IHNpemUnOiAxNnB4LFxuXG4gICdsZWdhY3kgc3ludGF4JzogZmFsc2Vcbik7XG5cbiRicmVha3BvaW50OiAoKSAhZGVmYXVsdDtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBJbXBvcnRzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbkBpbXBvcnQgXCJicmVha3BvaW50L3NldHRpbmdzXCI7XG5AaW1wb3J0ICdicmVha3BvaW50L2NvbnRleHQnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9oZWxwZXJzJztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcGFyc2Vycyc7XG5AaW1wb3J0ICdicmVha3BvaW50L25vLXF1ZXJ5JztcblxuQGltcG9ydCAnYnJlYWtwb2ludC9yZXNwb25kLXRvJztcblxuQGltcG9ydCBcImJyZWFrcG9pbnQvbGVnYWN5LXNldHRpbmdzXCI7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQnJlYWtwb2ludCBNaXhpblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbkBtaXhpbiBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaW5jbHVkZSBsZWdhY3ktc2V0dGluZ3Mtd2FybmluZztcblxuICAvLyBSZXNldCBjb250ZXh0c1xuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcblxuICAkYnJlYWtwb2ludDogYnJlYWtwb2ludCgkcXVlcnksIGZhbHNlKTtcblxuICAkcXVlcnktc3RyaW5nOiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnknKTtcbiAgJHF1ZXJ5LWZhbGxiYWNrOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnZmFsbGJhY2snKTtcblxuICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnY29udGV4dCBob2xkZXInKSAhZ2xvYmFsO1xuICAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50OiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnkgY291bnQnKSAhZ2xvYmFsO1xuXG4gIC8vIEFsbG93IGZvciBhbiBhcy1uZWVkZWQgb3ZlcnJpZGUgb3IgdXNhZ2Ugb2Ygbm8gcXVlcnkgZmFsbGJhY2suXG4gIEBpZiAkbm8tcXVlcnkgIT0gZmFsc2Uge1xuICAgICRxdWVyeS1mYWxsYmFjazogJG5vLXF1ZXJ5O1xuICB9XG5cbiAgQGlmICRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSB7XG4gICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQoJ25vLXF1ZXJ5JywgJHF1ZXJ5LWZhbGxiYWNrKTtcbiAgfVxuXG4gIC8vIFByaW50IE91dCBRdWVyeSBTdHJpbmdcbiAgQGlmIG5vdCBicmVha3BvaW50LWdldCgnbm8gcXVlcmllcycpIHtcbiAgICBAbWVkaWEgI3skcXVlcnktc3RyaW5nfSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpICE9IGZhbHNlIG9yIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyaWVzJykgPT0gdHJ1ZSB7XG5cbiAgICAkdHlwZTogdHlwZS1vZihicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykpO1xuICAgICRwcmludDogZmFsc2U7XG5cbiAgICBAaWYgKCR0eXBlID09ICdib29sJykge1xuICAgICAgJHByaW50OiB0cnVlO1xuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ3N0cmluZycpIHtcbiAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJ5IGZhbGxiYWNrcycpIHtcbiAgICAgICAgJHByaW50OiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ2xpc3QnKSB7XG4gICAgICBAZWFjaCAkd3JhcHBlciBpbiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xuICAgICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrID09ICR3cmFwcGVyIHtcbiAgICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBXcml0ZSBGYWxsYmFja1xuICAgIEBpZiAoJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlKSBhbmQgKCRwcmludCA9PSB0cnVlKSB7XG4gICAgICAkdHlwZS1mYWxsYmFjazogdHlwZS1vZigkcXVlcnktZmFsbGJhY2spO1xuXG4gICAgICBAaWYgKCR0eXBlLWZhbGxiYWNrICE9ICdib29sJykge1xuICAgICAgICAjeyRxdWVyeS1mYWxsYmFja30gJiB7XG4gICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XG59XG5cblxuQG1peGluIG1xKCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaW5jbHVkZSBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIjpyb290IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG59XG5cbiosIDo6YmVmb3JlLCA6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyogY2hlY2sgZm9yIG92ZXJmbG93ZWQgZWxlbWVudHMgLSB1c2UgbW9iaWxlIGRldnRvb2xzIHNpbXVsYXRvclxyXG5cclxuKiB7XHJcbiAgICBvdXRsaW5lOiAxcHggc29saWQgcmVkO1xyXG59XHJcblxyXG4qL1xuYm9keSB7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC1mYW1pbHk6ICdMYXRvJywgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMyMTIxMjE7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwLjYyNWVtKSB7XG4gIGJvZHkge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuc2VjdGlvbiB7XG4gIHBhZGRpbmc6IDEwZW0gMmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIHNlY3Rpb24ge1xuICAgIHBhZGRpbmc6IDhlbSAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgc2VjdGlvbiB7XG4gICAgcGFkZGluZzogNmVtIC41ZW07XG4gIH1cbn1cblxuLnByZS1oZWFkaW5nIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgbWFyZ2luLWJvdHRvbTogLjJlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAucHJlLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLjE1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAucHJlLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgfVxufVxuXG4uc2VjdC1oZWFkaW5nIHtcbiAgZm9udC1zaXplOiAyLjVlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICBtYXJnaW4tYm90dG9tOiAuMmVtO1xuICBjb2xvcjogIzMzMzMzMztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuc2VjdC1oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDIuM2VtO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuc2VjdC1oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDIuMWVtO1xuICAgIGxldHRlci1zcGFjaW5nOiBub3JtYWw7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnNlY3QtaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxLjllbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnNlY3QtaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxLjdlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5zZWN0LWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gIH1cbn1cblxuLnNlY3QtaGVhZGluZy1pbWcge1xuICBoZWlnaHQ6IDEzcHg7XG4gIHdpZHRoOiAxNDJweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2hlYWRpbmctaW1nLnN2Z1wiKTtcbiAgbWFyZ2luOiAwIGF1dG8gM2VtIGF1dG87XG4gIG9wYWNpdHk6IC41O1xufVxuXG4uc2VjdC1oZWFkaW5nLWltZy0tcHJvZ3JhbSxcbi5zZWN0LWhlYWRpbmctaW1nLS1jdXJyaWN1bHVtLFxuLnNlY3QtaGVhZGluZy1pbWctLWNvbnRhY3R1cyB7XG4gIG1hcmdpbi1ib3R0b206IDEwZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnNlY3QtaGVhZGluZy1pbWctLXByb2dyYW0sXG4gIC5zZWN0LWhlYWRpbmctaW1nLS1jdXJyaWN1bHVtLFxuICAuc2VjdC1oZWFkaW5nLWltZy0tY29udGFjdHVzIHtcbiAgICBtYXJnaW4tYm90dG9tOiA1ZW07XG4gIH1cbn1cblxuLmhhbmRwcmludHMge1xuICBoZWlnaHQ6IDEyMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaGFuZHByaW50cy5qcGdcIik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmhhbmRwcmludHMge1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxufVxuXG4ubGluZV9fc3ViaGRnIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBmb250LXNpemU6IDEuNjVlbTtcbiAgbWFyZ2luOiAwIGF1dG8gLjc1ZW0gYXV0bztcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgYXV0byAxZnI7XG4gIGdyaWQtY29sdW1uLWdhcDogLjVlbTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wMmVtO1xuICB3b3JkLXNwYWNpbmc6IC4wNWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmxpbmVfX3N1YmhkZyB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgfVxufVxuXG4ubGluZV9fc3ViaGRnOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBoZWlnaHQ6IC4zMTI1ZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBsZWZ0LCAjMDE4OGNiLCB0cmFuc3BhcmVudCk7XG4gIGJvcmRlci1yYWRpdXM6IC42MjVlbTtcbn1cblxuLmxpbmVfX3N1YmhkZzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBoZWlnaHQ6IC4zMTI1ZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzAxODhjYiwgdHJhbnNwYXJlbnQpO1xuICBib3JkZXItcmFkaXVzOiAuNjI1ZW07XG59XG5cbi5oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYnJ1c2gge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvYnJ1c2gtaGVyby1idG0ucG5nXCIpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiA2M3B4O1xufVxuXG4vKioqIFNUWUxFUyBGT1IgVEhFIE1PQklMRSBNRU5VIEFOSU1BVElPTiAqKiovXG4vKi5oZWFkZXJfX25hdi1pdGVtLnRlc3R0IHtcclxuICAgIHRyYW5zaXRpb246IGFsbCA4MDBtcyBlYXNlLW91dDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmVtcHR5LnlvIHtcclxuICAgIC8vdHJhbnNmb3JtOiBzY2FsZSg1MCk7XHJcbiAgICAvL3dpZHRoOiAxMTZweDtcclxuICAgIC8vaGVpZ2h0OiA0MHB4O1xyXG4gICAgIHRyYW5zZm9ybTogc2NhbGUoNTApIHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgXHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgXHJcbn1cclxuXHJcbi5lbXB0eSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgei1pbmRleDogLTE7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpIHJvdGF0ZSgwKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBcclxuICAgIC8vd2lkdGg6IDA7XHJcbiAgICAvL2hlaWdodDogMDtcclxuICAgIC8vdHJhbnNmb3JtOiBzY2FsZSguMSk7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gNDAwbXMgZWFzZS1pbiwgb3BhY2l0eSAyMDBtcyBlYXNlLWluO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbn0qL1xuLyoqKiBFTkQgU1RZTEVTIEZPUiBUSEUgTU9CSUxFIE1FTlUgQU5JTUFUSU9OICoqKi9cbi5oZWFkZXIge1xuICAvKiBwaG9uZSBpY29uIHRleHQgICovXG59XG5cbi5oZWFkZXJfX3RvcC1zZWN0IHtcbiAgYm9yZGVyLXRvcDogNXB4IHNvbGlkICMzMzMzMzM7XG59XG5cbi5oZWFkZXJfX3RvcC1zZWN0LWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmhlYWRlcl9fdG9wLWJhciB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9jbmVyLTUzNi5wbmdcIikgbm8tcmVwZWF0IHRvcCBjZW50ZXI7XG4gIGhlaWdodDogMzlweDtcbiAgd2lkdGg6IDUzNnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHJpZ2h0OiAtNTV2dztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgcmlnaHQ6IC01MHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MC42MjVlbSkge1xuICAuaGVhZGVyX190b3AtYmFyIHtcbiAgICByaWdodDogLTQ1dnc7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYzLjc1ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgcmlnaHQ6IC00MHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgcmlnaHQ6IC0zNXZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2NuZXItMzAxLnBuZ1wiKSBuby1yZXBlYXQgdG9wIGNlbnRlcjtcbiAgICByaWdodDogLTU3dnc7XG4gICAgd2lkdGg6IDMwMXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0NWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXIge1xuICAgIHJpZ2h0OiAtNDd2dztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXIge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcmlnaHQ6IDA7XG4gIH1cbn1cblxuLmhlYWRlcl9fdG9wLWJhci1jb250YWN0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogNGVtO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoLTUwJSAtIDVweCkpO1xuICBjb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMWVtIDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhci1jb250YWN0IHtcbiAgICByaWdodDogNmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOC40Mzc1ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhci1jb250YWN0IHtcbiAgICByaWdodDogLjI1ZW07XG4gICAgei1pbmRleDogNTU2NTtcbiAgfVxufVxuXG4uaGVhZGVyX190b3AtYmFyLWl0ZW0gKyAuaGVhZGVyX190b3AtYmFyLWl0ZW0ge1xuICBtYXJnaW4tbGVmdDogMS41ZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhci1pdGVtOmxhc3Qtb2YtdHlwZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uaGVhZGVyX190b3AtYmFyLWl0ZW06Zmlyc3Qtb2YtdHlwZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xufVxuXG4uaGVhZGVyX190b3AtYmFyLWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uaGVhZGVyX190b3AtYmFyLWljb24ge1xuICBmaWxsOiAjMDE4OGNiO1xuICBtYXJnaW4tcmlnaHQ6IC4zZW07XG4gIHdpZHRoOiAxLjJlbTtcbiAgaGVpZ2h0OiAxLjJlbTtcbn1cblxuLmhlYWRlcl9fcGhvbmUtaWNvbiB7XG4gIGZvbnQtc2l6ZTogLjllbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM4LjQzNzVlbSkge1xuICAuaGVhZGVyX19waG9uZS1pY29uIHtcbiAgICBmb250LXNpemU6IC44ZW07XG4gIH1cbn1cblxuLmhlYWRlcl9fdG9wLWJhci1saW5rIHtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uaGVhZGVyX190b3AtYmFyLWxpbms6aG92ZXIge1xuICBjb2xvcjogI2Q5ZDlkOTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM4LjQzNzVlbSkge1xuICAuaGVhZGVyX190b3AtYmFyLWxpbmsge1xuICAgIGNvbG9yOiAjMzMzO1xuICB9XG4gIC5oZWFkZXJfX3RvcC1iYXItbGluazpob3ZlciB7XG4gICAgY29sb3I6IGdyYXk7XG4gIH1cbn1cblxuLmhlYWRlcl9fbWFpbi1zZWN0IHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjMuNzVlbSkge1xuICAuaGVhZGVyX19tYWluLXNlY3Qge1xuICAgIHBhZGRpbmc6IDAgMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOC40Mzc1ZW0pIHtcbiAgLmhlYWRlcl9fbWFpbi1zZWN0IHtcbiAgICBwYWRkaW5nOiAyZW07XG4gIH1cbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzdweCk7XG4gIG1hcmdpbi1ib3R0b206IC0zMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxufVxuXG4uaGVhZGVyX19sb2dvLWltYWdlIHtcbiAgd2lkdGg6IDE1LjYyNWVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGVhZGVyX19uYXYtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5oZWFkZXJfX25hdi1pdGVtIHtcbiAgcGFkZGluZzogLjVlbSAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbjtcbn1cblxuLmhlYWRlcl9fbmF2LWl0ZW0gKyAuaGVhZGVyX19uYXYtaXRlbSB7XG4gIG1hcmdpbi1sZWZ0OiAxZW07XG59XG5cbi5oZWFkZXJfX25hdi1pY29uIHtcbiAgZmlsbDogIzMzMzMzMztcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG59XG5cbi5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAtMC4xODc1ZW0gMCAjMDE4OGNiO1xufVxuXG4uaGVhZGVyX19uYXYtaXRlbTpob3ZlciAuaGVhZGVyX19uYXYtbGluayB7XG4gIGNvbG9yOiAjMDE4OGNiO1xufVxuXG4uaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudCB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgLTAuMTg3NWVtIDAgIzAxODhjYjtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbn1cblxuLmhlYWRlcl9fbmF2LWxpbmsuY2xpY2tlZCB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICB0cmFuc2l0aW9uOiBub25lO1xufVxuXG4uaGVhZGVyX19uYXYtbGluayB7XG4gIGZvbnQtc2l6ZTogLjk1ZW07XG4gIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgY29sb3I6ICMzMzMzMzM7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjMuNzVlbSkge1xuICAuaGVhZGVyX19uYXYtbGluayB7XG4gICAgZm9udC1zaXplOiAuODVlbTtcbiAgfVxufVxuXG4uaGVhZGVyLnN0aWNreSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICBib3gtc2hhZG93OiAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB6LWluZGV4OiAxMDAxO1xufVxuXG4uaGVhZGVyLnN0aWNreSAuaGVhZGVyX190b3Atc2VjdCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5oZWFkZXJfX2xvZ28taW1hZ2Uge1xuICB3aWR0aDogMTMuNWVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIHRyYW5zaXRpb246IGFsbCA2MDBtcyBlYXNlLW91dDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM4LjQzNzVlbSkge1xuICAuaGVhZGVyLnN0aWNreSAuaGVhZGVyX19tYWluLXNlY3Qge1xuICAgIHBhZGRpbmc6IDAgMWVtO1xuICB9XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5oZWFkZXJfX2xvZ28ge1xuICB0cmFuc2Zvcm06IG5vbmU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5oZWFkZXJfX25hdi1saW5rIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OjphZnRlciB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubmF2aWdhdGlvbl9fY2hlY2tib3gge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5uYXZpZ2F0aW9uX19idXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiA0MHB4O1xuICAgIHJpZ2h0OiAxNXB4O1xuICAgIHotaW5kZXg6IDIwMDA7XG4gICAgYm94LXNoYWRvdzogMCAxLjVlbSAyZW0gcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNDVweDtcbiAgICByaWdodDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQocmdiYSgyNywgNzEsIDE1MiwgMC44KSwgcmdiYSgxLCAxMzYsIDIwMywgMC44KSk7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gODAwbXMgY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xuICB9XG4gIC5oZWFkZXJfX25hdiB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTUwMDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC8qIHVzZSB0cmFuc2Zvcm0gaW5zdGVhZCBmb3IgYSBzbW9vdGhlciBhbmltYXRpb24gYW5kIGFsc28gbW9yZSBwZXJmb3JtYW50ICAqL1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtODAwcHgpO1xuICAgIC8qIHB1dCB0aGUgd2lkdGggMTAwJSBoZXJlICAqL1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX25hdi1saXN0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudCB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcbiAgfVxuICAuaGVhZGVyX19uYXYtaXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbiAgICBtYXJnaW4tdG9wOiAuNWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogLjc1ZW0gMWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xuICB9XG4gIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMC43NWVtKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICB9XG4gIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIC5oZWFkZXJfX25hdi1saW5rIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAvKi5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OjphZnRlciB7XHJcbiAgICAgICAgY29sb3I6ICRyb3lhbGJsdWU7XHJcbiAgICB9Ki9cbiAgLyouaGVhZGVyX19uYXYtaXRlbS5oYXMtc3VibWVudTpob3Zlcjo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfSovXG4gIC5oZWFkZXJfX25hdi1saW5rLmNsaWNrZWQge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcbiAgfVxuICAuaGVhZGVyX19uYXYtbGluayB7XG4gICAgY29sb3I6ICMxYjQ3OTg7XG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xuICB9XG4gIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoNzApO1xuICB9XG4gIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgY3ViaWMtYmV6aWVyKDAuNjgsIC0wLjU1LCAwLjI2NSwgMS41NSk7XG4gIH1cbiAgLmhlYWRlci5zdGlja3kgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWxpbmsuY2xpY2tlZCB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLmhlYWRlci5zdGlja3kgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWxpbmsge1xuICAgIGNvbG9yOiAjMWI0Nzk4O1xuICB9XG4gIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1saW5rLmNsaWNrZWQge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1saW5rLmNsaWNrZWQge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIC5oZWFkZXJfX25hdi1saW5rIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAvKi5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OjphZnRlciB7XHJcbiAgICAgICAgY29sb3I6ICRyb3lhbGJsdWU7XHJcbiAgICB9Ki9cbiAgLyoubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudC5oYXMtc3VibWVudTo6YWZ0ZXIgIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH0qL1xuICAvKi5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtLmNsaWNrZWQtcGFyZW50Lmhhcy1zdWJtZW51OjphZnRlciAge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfSovXG4gIC8qLmhlYWRlci5zdGlja3kgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWl0ZW0uaGFzLXN1Ym1lbnU6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH0qL1xuICAvKi5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OmhvdmVyID4gdWwge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgIHRvcDogMzAwJTtcclxuICAgIH0qL1xuICAubmF2aWdhdGlvbl9faWNvbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi10b3A6IDEuNTVlbTtcbiAgfVxuICAubmF2aWdhdGlvbl9faWNvbiwgLm5hdmlnYXRpb25fX2ljb246OmJlZm9yZSwgLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcbiAgICB3aWR0aDogMS42ZW07XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2ljb246OmJlZm9yZSwgLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgNDAwbXM7XG4gICAgbGVmdDogMDtcbiAgfVxuICAubmF2aWdhdGlvbl9faWNvbjo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuNDVlbSk7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC40NWVtKTtcbiAgfVxuICAubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMC41NWVtKTtcbiAgfVxuICAubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAuNTVlbSk7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgKyAubmF2aWdhdGlvbl9fYnV0dG9uIC5uYXZpZ2F0aW9uX19pY29uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCArIC5uYXZpZ2F0aW9uX19idXR0b24gLm5hdmlnYXRpb25fX2ljb246OmJlZm9yZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSgxMzVkZWcpO1xuICB9XG4gIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkICsgLm5hdmlnYXRpb25fX2J1dHRvbiAubmF2aWdhdGlvbl9faWNvbjo6YWZ0ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoLTEzNWRlZyk7XG4gIH1cbn1cblxuLmhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIC8qJl9fd3JhcC10d28ge1xyXG4gICAgICAgIGhlaWdodDogODB2aDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9oZXJvMi5qcGcnKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC44KTtcclxuICAgICAgICB3aWR0aDogMTIwMHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX193cmFwLXRocmVlIHtcclxuICAgICAgICBoZWlnaHQ6IDgwdmg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvaGVybzMuanBnJyk7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICBcclxuICAgICAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuOCk7XHJcbiAgICAgICAgd2lkdGg6IDEyMDBweDtcclxuICAgIH0qL1xufVxuXG4uaGVyb19fd3JhcCB7XG4gIGhlaWdodDogNzV2aDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLCAwLCAwLCAwLjQpLCByZ2JhKDAsIDAsIDAsIDAuNCkpLCB1cmwoXCIuLi9pbWcvaGVyby5qcGdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmhlcm9fX2NlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbi5oZXJvX19oZWFkaW5nIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiA0ZW07XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xufVxuXG4uaGVyb19faGVhZGluZy0tc3BhbiB7XG4gIGZvbnQtc2l6ZTogLjVlbTtcbn1cblxuLmhlcm9fX3N1YmhlYWRpbmcge1xuICBmb250LXNpemU6IDNlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luLWJvdHRvbTogLjdlbTtcbn1cblxuLmhlcm9fX3N1YmhlYWRpbmctLXNwYW4ge1xuICBjb2xvcjogIzAxODhjYjtcbn1cblxuLmJ0bjpsaW5rLCAuYnRuOnZpc2l0ZWQge1xuICBmb250LXNpemU6IC44ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTg4Y2I7XG4gIHBhZGRpbmc6IDFlbSAyZW07XG4gIGJvcmRlci1yYWRpdXM6IDk5ZW07XG4gIGJveC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzMDBtcyBlYXNlLW91dCwgdHJhbnNmb3JtIDE1MG1zIGxpbmVhcjtcbn1cblxuLmJ0bjpsaW5rOmhvdmVyLCAuYnRuOnZpc2l0ZWQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDE2Njk4O1xufVxuXG4uYnRuOmxpbms6YWN0aXZlLCAuYnRuOnZpc2l0ZWQ6YWN0aXZlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCAycHgpO1xufVxuXG4uY2FyZHNfX2J0bi0yOmxpbmssIC5jYXJkc19fYnRuLTI6dmlzaXRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG59XG5cbi5jYXJkc19fYnRuLTI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICBjb2xvcjogI2NjY2NjYztcbiAgYm9yZGVyLWNvbG9yOiAjY2NjY2NjO1xufVxuXG4uY2FyZHNfX2J0bi0yOmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMnB4KTtcbn1cblxuLmNhcmRzIHtcbiAgLyogM1JEIENBUkQgU1RBUlQgLS0gaXMgdGhpcyB1c2VkPz8/ICovXG59XG5cbi5jYXJkc19fYWJvdXQge1xuICBmb250LXNpemU6IDEuMWVtO1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IDZlbSBhdXRvIDhlbSBhdXRvO1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5jYXJkc19fYWJvdXQge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIG1hcmdpbjogNGVtIGF1dG8gNWVtIGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmNhcmRzX19hYm91dCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmNhcmRzX19hYm91dCB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5jYXJkc19fbWFpbi13cmFwIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uY2FyZHNfX2dyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDI4MHB4LCAxZnIpKTtcbiAgZ3JpZC1nYXA6IDJlbTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgLmNhcmRzX19ncmlkIHtcbiAgICBncmlkLWdhcDogMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOC44NzVlbSkge1xuICAuY2FyZHNfX2dyaWQge1xuICAgIGdyaWQtZ2FwOiAzZW0gMWVtO1xuICB9XG59XG5cbi5jYXJkc19fd3JhcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOC44NzVlbSkge1xuICAuY2FyZHNfX3dyYXAge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5jYXJkc19fd3JhcCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuLmNhcmRzX19pbWFnZS13cmFwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgei1pbmRleDogMjtcbiAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4IDAgMDtcbn1cblxuLmNhcmRzX19pbWFnZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY2FyZHNfX3dhdmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMDtcbn1cblxuLmNhcmRzX193YXZlOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAtNXB4LCB0cmFuc3BhcmVudCAxNHB4LCAjZmZmIDE2cHgpO1xufVxuXG4uY2FyZHNfX3dhdmU6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBoZWlnaHQ6IDEycHg7XG4gIGJhY2tncm91bmQtc2l6ZTogNDBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggMTVweCwgI2ZmZiAxMnB4LCB0cmFuc3BhcmVudCAxM3B4KTtcbn1cblxuLmNhcmRzX19jb250ZW50IHtcbiAgcGFkZGluZzogMWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uY2FyZHNfX2ljb24ge1xuICBjb2xvcjogIzAxODhjYjtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuXG4uY2FyZHNfX2ljb246OmJlZm9yZSB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICBmb250LXNpemU6IDNlbSAhaW1wb3J0YW50O1xufVxuXG4uY2FyZHNfX2ljb24uZmxhdGljb24ta2luZGVyZ2FydGVuOjpiZWZvcmUge1xuICBtYXJnaW46IDAgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAzLjJlbSAhaW1wb3J0YW50O1xufVxuXG4uY2FyZHNfX2ljb24tbGFyZ2Uge1xuICBjb2xvcjogIzFiNDc5OCAhaW1wb3J0YW50O1xufVxuXG4uY2FyZHNfX2ljb24tbGFyZ2U6OmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogM2VtO1xufVxuXG4uY2FyZHNfX3N1YmhlYWRpbmctYnJ1c2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xufVxuXG4uY2FyZHNfX3N1YmhlYWRpbmctYnJ1c2g6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyN2Q3ZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIlwiO1xuICBwYWRkaW5nOiAwO1xuICBtYXgtd2lkdGg6IDI3NHB4O1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZm9vdGVyX3RpdGxlX2JnLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBib3R0b207XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogNTUlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGhlaWdodDogMTRweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgLmNhcmRzX19zdWJoZWFkaW5nLWJydXNoOjphZnRlciB7XG4gICAgbWF4LXdpZHRoOiAyNDBweDtcbiAgICBsZWZ0OiA1MCU7XG4gIH1cbn1cblxuLmNhcmRzX19zdWJoZWFkaW5nLWJydXNoLS0yOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YjcxOTU7XG59XG5cbi5jYXJkc19fc3ViaGVhZGluZy1icnVzaC0tMzo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWNjMTU3O1xufVxuXG4uY2FyZHNfX3N1YmhlYWRpbmctYnJ1c2gtc3Bhbi0tMSwgLmNhcmRzX19zdWJoZWFkaW5nLWJydXNoLXNwYW4tLTIsIC5jYXJkc19fc3ViaGVhZGluZy1icnVzaC1zcGFuLS0zIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmNhcmRzX19zdWJoZWFkaW5nIHtcbiAgbWFyZ2luOiAuNWVtIDAgMWVtIDA7XG4gIGZvbnQtc2l6ZTogMS43ZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgLmNhcmRzX19zdWJoZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIG1hcmdpbjogLjVlbSAwIC43NWVtIDA7XG4gIH1cbn1cblxuLmNhcmRzX19pY29uLXdyYXAge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uY2FyZHNfX2ljb246bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLXJpZ2h0OiAuM2VtO1xufVxuXG4uY2FyZHNfX3N1bW1hcnkge1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmNhcmRzX19zdW1tYXJ5IHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIH1cbn1cblxuLmNhcmRzX19idG4ge1xuICBtYXJnaW46IDNlbSAwO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY2FyZHNfX2J0biB7XG4gICAgbWFyZ2luOiAyZW0gMDtcbiAgfVxufVxuXG4uY3VycmVudC1jYWwge1xuICBwYWRkaW5nOiAwIDAgM2VtIDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmN1cnJlbnQtY2FsX19pbWFnZSB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIHdpZHRoOiA2MCU7XG4gIGhlaWdodDogYXV0bztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmN1cnJlbnQtY2FsX19pbWFnZSB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4uZ2FsbGVyeS5mdWxsd2lkdGgge1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZ2FsbGVyeV9faW1hZ2Utd3JhcCB7XG4gIHdpZHRoOiAyNSU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmdhbGxlcnkuZnVsbHdpZHRoIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLmdhbGxlcnlfX2ltYWdlLXdyYXAge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmdhbGxlcnlfX2ltYWdlLXdyYXAtLW9yZGVyIHtcbiAgICBvcmRlcjogLTE7XG4gIH1cbn1cblxuLmdhbGxlcnlfX2ltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIG9wYWNpdHk6IC44NTtcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uZ2FsbGVyeV9faW1hZ2U6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDJlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2Zvb3Rlci0tYmcucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBib3JkZXItYm90dG9tOiA1cHggc29saWQgIzIxMjEyMTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDJlbSAxZW07XG4gIH1cbn1cblxuLmZvb3Rlcl9fd3JhcCB7XG4gIGNvbG9yOiAjYjBiMGIwO1xuICBtYXJnaW4tYm90dG9tOiAzZW07XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmZvb3Rlcl9fbG9nby13cmFwIHtcbiAgbWFyZ2luOiAxZW0gMDtcbn1cblxuLmZvb3Rlcl9fbG9nbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmZvb3Rlcl9fbG9nbyBpbWcge1xuICB3aWR0aDogNzAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5mb290ZXJfX21haW4ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDI1MHB4LCAxZnIpKTtcbiAgZ3JpZC1nYXA6IDIuNWVtO1xuICBtYXJnaW46IDNlbSAwO1xuICBsaW5lLWhlaWdodDogMS40O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmZvb3Rlcl9fbWFpbiB7XG4gICAgZ3JpZC1nYXA6IDMuNWVtO1xuICB9XG59XG5cbi5mb290ZXJfX3N1YmhlYWRpbmcge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG4uZm9vdGVyX19zdWJoZWFkaW5nLXNwYW4ge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uZm9vdGVyX19taXNzaW9uIHtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuLmZvb3Rlcl9faG91cnMge1xuICBjb2xvcjogIzAxODhjYjtcbiAgbWFyZ2luLWJvdHRvbTogLjhlbTtcbn1cblxuLmZvb3Rlcl9fY2xvc2luZ3MtbGluayB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5mb290ZXJfX2Nsb3NpbmdzLWxpbms6aG92ZXIge1xuICBjb2xvcjogIzAxYWFmZTtcbn1cblxuLmZvb3Rlcl9fY29udGFjdCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4yZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZm9vdGVyX19jb250YWN0LWljb24ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAuMjVlbTtcbiAgd2lkdGg6IDEuMWVtO1xuICBoZWlnaHQ6IDEuMWVtO1xuICBmaWxsOiAjMDE4OGNiO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMnB4KTtcbn1cblxuLmZvb3Rlcl9fY29udGFjdC1pY29uLS0xIHtcbiAgd2lkdGg6IDEuMmVtO1xuICBoZWlnaHQ6IDEuMmVtO1xufVxuXG4uZm9vdGVyX19zaGFwZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zaGFwZV9ib3R0b20ucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICB3aWR0aDogMzAwcHg7XG4gIGhlaWdodDogNDVweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG4uZm9vdGVyX19pY29uLXdyYXAge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG4uZm9vdGVyX19pY29uIHtcbiAgZmlsbDogIzAxODhjYjtcbiAgd2lkdGg6IDEuM2VtO1xuICBoZWlnaHQ6IDEuM2VtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoM3B4KTtcbn1cblxuLmZvb3Rlcl9fYm90dG9tIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTIxMjtcbiAgcGFkZGluZzogMmVtO1xuICBjb2xvcjogI2IwYjBiMDtcbn1cblxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICB9XG59XG5cbi5mb290ZXJfX2Rlc2lnbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAuOWVtO1xufVxuXG4uZm9vdGVyX19tZSwgLmZvb3Rlcl9fbWU6dmlzaXRlZCB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluO1xufVxuXG4uZm9vdGVyX19tZTpob3ZlciwgLmZvb3Rlcl9fbWU6dmlzaXRlZDpob3ZlciB7XG4gIGNvbG9yOiAjMDFhYWZlO1xufVxuXG4uZm9vdGVyX190YXhpZCB7XG4gIG1hcmdpbi10b3A6IDIuNWVtO1xufVxuXG4uanMtYnR0LWJ0biB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAtMi43ZW07XG4gIHJpZ2h0OiAuNWVtO1xuICB3aWR0aDogMS43ZW07XG4gIGhlaWdodDogMS43ZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDc5LCA3OSwgNzksIDAuOCk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDEuN2VtO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAyZW07XG4gIG9wYWNpdHk6IDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDUwMG1zIGVhc2Utb3V0LCBib3R0b20gNDAwbXMgY3ViaWMtYmV6aWVyKDAuNjQsIDAuNTcsIDAuNjcsIDEuMjMpLCBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0LCBjb2xvciAzMDBtcyBlYXNlLW91dDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IDFweCBkYXNoZWQgIzAxODhjYjtcbiAgei1pbmRleDogOTUwMDtcbn1cblxuLmpzLWJ0dC1idG4taWNvbiB7XG4gIGZpbGw6ICNmZmY7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNXB4KTtcbiAgdHJhbnNpdGlvbjogZmlsbCAzMDBtcyBlYXNlLWluO1xufVxuXG4uanMtYnR0LWJ0bjpob3ZlciAuanMtYnR0LWJ0bi1pY29uIHtcbiAgZmlsbDogIzAxODhjYjtcbn1cblxuLmpzLWJ0dC1idG4uYWN0aXZlIHtcbiAgb3BhY2l0eTogMTtcbiAgYm90dG9tOiAxLjVlbTtcbiAgcG9pbnRlci1ldmVudHM6IGF1dG87XG59XG5cbi5qcy1idHQtYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG5cbi8qIElGIFlPVSBLRUVQIFRIRSBNT0JJTEUgQU5JTUFUSU9OIFRIRU4gSlVTVCBBREQgVEhFU0UgU1RZTEVTIFRPIFRIRSBNQUlOIEJPRFkgZWxlbWVudCBDTEFTUyAqL1xuLypcclxuLlRoZUFib3V0VXMge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgZWFzZS1pbjtcclxufVxyXG4qL1xuLmhlcm9fX3dyYXAtLXR3byB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy93YWxsLmpwZ1wiKTtcbn1cblxuLmhlcm9fX2hlYWRpbmcge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmFib3V0dXMge1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIC8qXHJcbiAgICBcclxuICAgIFRvIG1ha2UgdGhlIGZvbnQtc2l6ZSBjaGFuZ2UgYSBsaXR0bGUgc21vb3RoZXIgd2hlbiB0aGUgc2l6ZSBvZiB0aGVcclxuICAgIFNWRyBlbWJlZGRlZCBvYmplY3QgY2hhbmdlcy9pbiBtZWRpYSBxdWVyaWVzLCB5b3UgY2FuIGFkZCBpbiBhIENTUyB0cmFuc2l0aW9uIGVmZmVjdDpcclxuICAgIFxyXG4gICAgc3ZnIHRleHQgeyB0cmFuc2l0aW9uOiBmb250LXNpemUgMC41czsgfVxyXG4gICAgXHJcbiAgICAqL1xuICAvKiZfX3RleHQtc3ZnIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXNpemU6IDkwcHg7XHJcbiAgICB9Ki9cbiAgLyomX190c3Bhbi1zdmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTY1cHg7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcclxuICAgIH0qL1xuICAvKiZfX2ltYWdlLXN2ZyB7XHJcbiAgICAgICAgLy9oZWlnaHQ6IDcwdmg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAzMDBweDtcclxuICAgICAgICBjbGlwLXBhdGg6IHVybCgjc3ZnLXBhdGgpO1xyXG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgfSovXG59XG5cbi5hYm91dHVzX193cmFwIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiA2ZW0gYXV0byAwIGF1dG87XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmFib3V0dXNfX3dyYXAge1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuYWJvdXR1c19fd3JhcCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5hYm91dHVzX193cmFwIHtcbiAgICB3aWR0aDogOTUlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5hYm91dHVzX193cmFwIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuXG4uYWJvdXR1c19fc3ZnIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmFib3V0dXNfX3RleHQtc3ZnIHtcbiAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmFib3V0dXNfX3RzcGFuLXN2ZyB7XG4gIGZvbnQtc2l6ZTogMzVweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbn1cblxuLmFib3V0dXNfX2ltYWdlLXN2ZyB7XG4gIGNsaXAtcGF0aDogdXJsKCNzdmctcGF0aCk7XG59XG5cbi5hYm91dHVzX19zZWN0IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG4gIGdyaWQtZ2FwOiAxLjVlbSAxLjI1ZW07XG4gIG1hcmdpbi1ib3R0b206IDNlbTtcbn1cblxuLmFib3V0dXNfX2ltZ3dyYXAge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvYXF1YS1jaXJjbGUtYnViYmxlLnBuZ1wiKSBuby1yZXBlYXQgdG9wIGxlZnQ7XG4gIGhlaWdodDogNjBweDtcbiAgd2lkdGg6IDU4cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uYWJvdXR1c19faWNvbiB7XG4gIGZpbGw6ICNmZmY7XG4gIHdpZHRoOiAxLjRlbTtcbiAgaGVpZ2h0OiAxLjRlbTtcbiAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICBncmlkLXJvdzogMSAvIDI7XG59XG5cbi5hYm91dHVzX19oZGcge1xuICBmb250LXdlaWdodDogMzAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtc2l6ZTogMS42ZW07XG4gIGp1c3RpZnktc2VsZjogc3RhcnQ7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgZ3JpZC1jb2x1bW46IDIgLyAzO1xuICBncmlkLXJvdzogMSAvIDI7XG59XG5cbi5hYm91dHVzX19oZGc6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDtcbiAgd2lkdGg6IDEuNWVtO1xuICBib3R0b206IC0uNWVtO1xuICBsZWZ0OiAwO1xufVxuXG4uYWJvdXR1c19fc3VtbWFyeSB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGdyaWQtY29sdW1uOiAxIC8gMztcbiAgZ3JpZC1yb3c6IDIgLyAzO1xufVxuXG4uYWJvdXR1c19fcGFyYSB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5hYm91dHVzX19wYXJhIHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICB9XG59XG5cbi5hYm91dHVzX19zcGFuIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmFib3V0dXNfX2xpbmsge1xuICBjb2xvcjogIzAxODhjYjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5hYm91dHVzX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICMwMTU1N2Y7XG59XG5cbi5hYm91dHVzX19xdW90ZSB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogM2VtIDA7XG4gIHBhZGRpbmctcmlnaHQ6IDRlbTtcbiAgcGFkZGluZy1sZWZ0OiAyZW07XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtY29sdW1uLWdhcDogMS41ZW07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWluLWNvbnRlbnQgMWZyO1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgZWFzZS1vdXQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTUwJSkgc2NhbGUoMS40KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUyLjVlbSkge1xuICAuYWJvdXR1c19fcXVvdGUge1xuICAgIGZvbnQtc2l6ZTogMS4zZW07XG4gICAgbWFyZ2luOiAyLjVlbSAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLmFib3V0dXNfX3F1b3RlIHtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5hYm91dHVzX19xdW90ZSB7XG4gICAgcGFkZGluZy1yaWdodDogM2VtO1xuICAgIHBhZGRpbmctbGVmdDogMS41ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5hYm91dHVzX19xdW90ZSB7XG4gICAgcGFkZGluZy1yaWdodDogMmVtO1xuICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5hYm91dHVzX19xdW90ZSB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgfVxufVxuXG4uYWJvdXR1c19fcXVvdGUudmlzaWJsZSB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgxKTtcbn1cblxuLmFib3V0dXNfX3F1b3RlIHNwYW4ge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgY29sb3I6ICNiMGIwYjA7XG4gIGZvbnQtc2l6ZTogOGVtO1xuICBsaW5lLWhlaWdodDogLjU7XG4gIGdyaWQtY29sdW1uOiAxIC8gMjtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAuMmVtKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmFib3V0dXNfX3F1b3RlIHNwYW4ge1xuICAgIGxpbmUtaGVpZ2h0OiAuNDU7XG4gIH1cbn1cblxuLmhlcm9fX3dyYXAtLWZpdmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3RhZmYuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207XG59XG5cbi5zdGFmZiB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0byAwIGF1dG87XG4gIC8qKioqKioqIFRFQUNIRVJTICoqKioqKi9cbiAgLyomX190ZWFjaGVycy10YWJsZSB0ZCBhIHtcclxuICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyICZfX3RlYWNoZXJzLWljb24ge1xyXG4gICAgICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfSovXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmIHtcbiAgICBwYWRkaW5nOiA2ZW0gMDtcbiAgfVxufVxuXG4uc3RhZmZfX2Fib3V0IHtcbiAgZm9udC1zaXplOiAxLjFlbTtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiA2ZW0gYXV0byA4ZW0gYXV0bztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuc3RhZmZfX2Fib3V0IHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW46IDRlbSBhdXRvIDVlbSBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fYWJvdXQge1xuICAgIHdpZHRoOiA5MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5zdGFmZl9fYWJvdXQge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICB3aWR0aDogOTUlO1xuICB9XG59XG5cbi5zdGFmZl9fb2ZmaWNlLXdyYXAge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xuICBncmlkLWNvbHVtbi1nYXA6IDEuNWVtO1xuICBtYXJnaW4tYm90dG9tOiAxNWVtO1xuICBtYXJnaW4tdG9wOiAzZW07XG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQwLjMxMjVlbSkge1xuICAuc3RhZmZfX29mZmljZS13cmFwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMGVtO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdyaWQtZ2FwOiA3ZW0gMDtcbiAgfVxufVxuXG4uc3RhZmZfX2luZGl2aWR1YWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAzMDBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYzLjc1ZW0pIHtcbiAgLnN0YWZmX19pbmRpdmlkdWFsIHtcbiAgICB3aWR0aDogMjUwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU0LjM3NWVtKSB7XG4gIC5zdGFmZl9faW5kaXZpZHVhbCB7XG4gICAgd2lkdGg6IDIyMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnN0YWZmX19pbmRpdmlkdWFsIHtcbiAgICB3aWR0aDogMTgwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQwLjMxMjVlbSkge1xuICAuc3RhZmZfX2luZGl2aWR1YWwge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgfVxufVxuXG4uc3RhZmZfX2ltYWdlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uc3RhZmZfX3N1bW1hcnkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTEyJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMmVtO1xuICBsZWZ0OiAxMCU7XG4gIHJpZ2h0OiAxMCU7XG4gIHotaW5kZXg6IDM7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2My43NWVtKSB7XG4gIC5zdGFmZl9fc3VtbWFyeSB7XG4gICAgYm90dG9tOiAtMTUlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NC4zNzVlbSkge1xuICAuc3RhZmZfX3N1bW1hcnkge1xuICAgIHBhZGRpbmc6IDEuMmVtIDFlbTtcbiAgICBib3R0b206IC0xMiU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuc3RhZmZfX3N1bW1hcnkge1xuICAgIGxlZnQ6IDUlO1xuICAgIHJpZ2h0OiA1JTtcbiAgICBib3R0b206IC0xNC41JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDAuMzEyNWVtKSB7XG4gIC5zdGFmZl9fc3VtbWFyeSB7XG4gICAgcGFkZGluZzogMmVtO1xuICAgIGJvdHRvbTogLTEyJTtcbiAgICBsZWZ0OiAxMCU7XG4gICAgcmlnaHQ6IDEwJTtcbiAgfVxufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXI6OmFmdGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXIgLnN0YWZmX190aXRsZSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXIgLnN0YWZmX19lbWFpbCB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXIgLnN0YWZmX19pY29uIHtcbiAgZmlsbDogI2ZmZjtcbn1cblxuLnN0YWZmX19zdW1tYXJ5OjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQ6ICNmMjdkN2Y7XG4gIHotaW5kZXg6IDE7XG4gIHRyYW5zaXRpb246IGhlaWdodCAzMDBtcyBlYXNlLW91dDtcbn1cblxuLnN0YWZmX19zdW1tYXJ5LS1ibHVlOjphZnRlciB7XG4gIGJhY2tncm91bmQ6ICM0YjcxOTU7XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tZ3JlZW46OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI2FjYzE1Nztcbn1cblxuLnN0YWZmX19uYW1lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xufVxuXG4uc3RhZmZfX2VtYWlsIHtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAuMTVlbTtcbiAgY29sb3I6ICMyNjY1ZDk7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uc3RhZmZfX2VtYWlsOmhvdmVyIHtcbiAgY29sb3I6ICMxYjQ3OTg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NC4zNzVlbSkge1xuICAuc3RhZmZfX2VtYWlsIHtcbiAgICBmb250LXNpemU6IDEuMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX19lbWFpbCB7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG4gIH1cbn1cblxuLnN0YWZmX19pY29uIHtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGZpbGw6ICMyNjY1ZDk7XG59XG5cbi5zdGFmZl9fdGl0bGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU0LjM3NWVtKSB7XG4gIC5zdGFmZl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4wNWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnI7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG4gIG1hcmdpbi1ib3R0b206IDRlbTtcbiAgbWFyZ2luLXRvcDogM2VtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc3RhZmZfX3RlYWNoZXJzLWdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtbGlzdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy1saXN0IHtcbiAgICBncmlkLWNvbHVtbjogMSAvIDI7XG4gICAgZ3JpZC1yb3c6IDEgLyAyO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtaGRnIHtcbiAgYmFja2dyb3VuZDogIzAxODhjYjtcbiAgaGVpZ2h0OiA5M3B4O1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsaW5lLWhlaWdodDogOTNweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAxLjNlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy1oZGcge1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtaGRnOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAtNXB4LCB0cmFuc3BhcmVudCAxNHB4LCAjZjhmOGY4IDE2cHgpO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWhkZzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAxNXB4LCAjZjhmOGY4IDEycHgsIHRyYW5zcGFyZW50IDEzcHgpO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWJ0bWhkZyB7XG4gIGJhY2tncm91bmQ6ICMwMTg4Y2I7XG4gIGhlaWdodDogOTNweDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc3RhZmZfX3RlYWNoZXJzLWJ0bWhkZyB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWJ0bWhkZzo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBoZWlnaHQ6IDEycHg7XG4gIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggLTVweCwgdHJhbnNwYXJlbnQgMTRweCwgI2Y4ZjhmOCAxNnB4KTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLnN0YWZmX190ZWFjaGVycy1idG1oZGc6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBoZWlnaHQ6IDEycHg7XG4gIGJhY2tncm91bmQtc2l6ZTogNDBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggMTVweCwgI2Y4ZjhmOCAxMnB4LCB0cmFuc3BhcmVudCAxM3B4KTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn1cblxuLnN0YWZmX190ZWFjaGVycy1pdGVtIHtcbiAgcGFkZGluZzogMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fdGVhY2hlcnMtaXRlbSB7XG4gICAgcGFkZGluZzogMWVtIC41ZW07XG4gIH1cbn1cblxuLnN0YWZmX190ZWFjaGVycy1pdGVtLS1maXJzdCB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy1pdGVtLS1maXJzdCB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWl0ZW0tLWxhc3Qge1xuICBtYXJnaW4tYm90dG9tOiBjYWxjKDkzcHggKyAxZW0pO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc3RhZmZfX3RlYWNoZXJzLWl0ZW0tLWxhc3Qge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtbGluayB7XG4gIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBBcmlhbDtcbiAgY29sb3I6ICMyMTIxMjE7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWxpbms6aG92ZXIge1xuICBjb2xvcjogIzAxODhjYjtcbn1cblxuLnN0YWZmX190ZWFjaGVycy1saW5rLS1jdXJyZW50IHtcbiAgY29sb3I6ICMwMTg4Y2I7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtbGlzdG91dCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHRyYW5zaXRpb246IGFsbCA1MDBtcyBlYXNlLW91dDtcbn1cblxuLnN0YWZmX190ZWFjaGVycy1saXN0b3V0LS12aXNpYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnN0YWZmX190ZWFjaGVycy10YWJsZS13cmFwIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fdGVhY2hlcnMtdGFibGUtd3JhcCB7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICAgIGdyaWQtcm93OiAyIC8gMztcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbn1cblxuLnN0YWZmX190ZWFjaGVycy10YWJsZSB0cjpudGgtb2YtdHlwZShvZGQpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcbn1cblxuLnN0YWZmX190ZWFjaGVycy10YWJsZSB0cjpudGgtb2YtdHlwZShldmVuKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZjRmNGY7XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtdGFibGUgdGgge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBwYWRkaW5nOiAxZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtdGFibGUgdGQge1xuICBwYWRkaW5nOiAuNWVtIC41ZW0gLjVlbSAxZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fdGVhY2hlcnMtdGFibGUgdGQge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLnN0YWZmX190ZWFjaGVycy1pY29uIHtcbiAgd2lkdGg6IDEuNWVtO1xuICBoZWlnaHQ6IDEuNWVtO1xuICBmaWxsOiAjZmZmO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXB4KTtcbiAgdHJhbnNpdGlvbjogZmlsbCAzNTBtcyBlYXNlLW91dDtcbn1cblxuLnN0YWZmX190ZWFjaGVycy1pY29uOmhvdmVyIHtcbiAgZmlsbDogIzAxODhjYjtcbn1cblxuLyogTUFZIE5FRUQgVE8gQUREIE9WRVJGTE9XLVg6IEhJRERFTiBPTiBUQUJMRSBPUiBUQUJMRSBXUkFQUEVSIEVMRU1FTlRTIFNJTkNFIFRIRVkgQVJFIE9GRlNDUkVFTiBIT1JJWk9OVEFMTFkgQU5EIFRIRSBBTklNQVRFRCBJTiAqL1xuLmhlcm9fX3dyYXAtLXRocmVlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL3NjaG9vbC1yb29tLmpwZ1wiKTtcbn1cblxuLnByb2dyYW0ge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIC8qKiogcm90YXRpb24gaXMgOTBkZWcgbm90IC05MCBhbmQgbWFyZ2luIGlzIC0yMiwgbm90IC0xMiAqKiovXG59XG5cbi5wcm9ncmFtX19zcGxpdC0tb25lIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMmZyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICBtYXJnaW4tdG9wOiAyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LS1vbmUge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xuICAgIG1hcmdpbi1ib3R0b206IDE2ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX19zcGxpdC0tb25lIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxOGVtO1xuICB9XG59XG5cbi5wcm9ncmFtX19zcGxpdC1jZWxsLS1vbmUge1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LWNlbGwtLW9uZSB7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICAgIGdyaWQtcm93OiAyIC8gMztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59XG5cbi5wcm9ncmFtX190cmFuc2xhdGUge1xuICBwYWRkaW5nOiAyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgYm9yZGVyLXRvcDogNXB4IHNvbGlkICMwMTg4Y2I7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3RyYW5zbGF0ZSB7XG4gICAgcGFkZGluZzogMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5wcm9ncmFtX190cmFuc2xhdGUge1xuICAgIHBhZGRpbmc6IC41ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3RyYW5zbGF0ZS0tb25lIHtcbiAgd2lkdGg6IDE1MCU7XG4gIGxlZnQ6IDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3RyYW5zbGF0ZS0tb25lIHtcbiAgICB3aWR0aDogODAlO1xuICAgIGxlZnQ6IDEwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzEuMjVlbSkge1xuICAucHJvZ3JhbV9fdHJhbnNsYXRlLS1vbmUge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbGVmdDogNSU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX190cmFuc2xhdGUtLW9uZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIH1cbn1cblxuLnByb2dyYW1fX2hlYWRpbmcge1xuICBmb250LXNpemU6IDEuNGVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnByb2dyYW1fX2hlYWRpbmcge1xuICAgIG1hcmdpbi10b3A6IC41ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3BhcmFhIHtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAucHJvZ3JhbV9fcGFyYWEge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3NwbGl0LWNlbGwtLXR3byB7XG4gIGdyaWQtY29sdW1uOiAyIC8gMztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtY2VsbC0tdHdvIHtcbiAgICBncmlkLWNvbHVtbjogMSAvIDI7XG4gICAgZ3JpZC1yb3c6IDEgLyAyO1xuICB9XG59XG5cbi5wcm9ncmFtX19zcGxpdC1jZWxsLS10d28gaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAvKiB0aGlzIGlzIG5lZWRlZCB0byBnZXQgaXQgdG8gZXhwYW5kIHdpZHRoIHRvIHRoZSByaWdodCAqL1xuICBtYXJnaW4tbGVmdDogYXV0bztcbn1cblxuLnByb2dyYW1fX3NwbGl0LS10d28ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAxZnI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LS10d28ge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xuICAgIG1hcmdpbi1ib3R0b206IDE2ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMxLjI1ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LS10d28ge1xuICAgIG1hcmdpbi1ib3R0b206IDIyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX19zcGxpdC0tdHdvIHtcbiAgICAvKiBleHRyYSB0b3AgbWFyZ2luIGFzIHRoZXJlIGxvb2tzIGxpa2UgbWFyZ2luIGNvbGxhcHNpbmcgKi9cbiAgICBtYXJnaW4tdG9wOiAxNmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDI3ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtLXR3byB7XG4gICAgbWFyZ2luLWJvdHRvbTogMjllbTtcbiAgfVxufVxuXG4ucHJvZ3JhbV9fc3BsaXQtY2VsbC0tdGhyZWUge1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LWNlbGwtLXRocmVlIHtcbiAgICBncmlkLXJvdzogMSAvIDI7XG4gIH1cbn1cblxuLnByb2dyYW1fX3NwbGl0LWNlbGwtLXRocmVlIGltZyB7XG4gIG1heC13aWR0aDogMTIwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtY2VsbC0tdGhyZWUgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLnByb2dyYW1fX3NwbGl0LWNlbGwtLWZvdXIge1xuICBncmlkLWNvbHVtbjogMiAvIDM7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtY2VsbC0tZm91ciB7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICAgIGdyaWQtcm93OiAyIC8gMztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59XG5cbi5wcm9ncmFtX190cmFuc2xhdGUtLXR3byB7XG4gIC8qIHdpZGVyIHNpbmNlIGl0IGhhcyBtb3JlIGNvbnRlbnQgKi9cbiAgd2lkdGg6IDE1MCU7XG4gIHJpZ2h0OiAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5wcm9ncmFtX190cmFuc2xhdGUtLXR3byB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBsZWZ0OiAxMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMxLjI1ZW0pIHtcbiAgLnByb2dyYW1fX3RyYW5zbGF0ZS0tdHdvIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIGxlZnQ6IDUlO1xuICAgIC8qKiogdXNpbmcgdG9wIERPRVMgTk9UIFdPUksgaGVyZSAgKioqL1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzAlKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnByb2dyYW1fX3RyYW5zbGF0ZS0tdHdvIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxufVxuXG4ucHJvZ3JhbV9fd3JhcCB7XG4gIHBhZGRpbmctcmlnaHQ6IDJlbTtcbiAgcGFkZGluZy1sZWZ0OiAyZW07XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDhlbSBhdXRvIDZlbSBhdXRvO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5wcm9ncmFtX193cmFwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5wcm9ncmFtX193cmFwIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxZW07XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX193cmFwIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAuNWVtO1xuICAgIHBhZGRpbmctbGVmdDogLjVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICAucHJvZ3JhbV9fd3JhcCB7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gIH1cbn1cblxuLnByb2dyYW1fX3NlY3Qge1xuICBtYXJnaW46IDAgYXV0byAzZW0gYXV0bztcbiAgd2lkdGg6IDgwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwZW0pIHtcbiAgLnByb2dyYW1fX3NlY3Qge1xuICAgIHdpZHRoOiA5MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAucHJvZ3JhbV9fc2VjdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLnByb2dyYW1fX3NlY3QtZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luLWJvdHRvbTogOGVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDguNzVlbSkge1xuICAucHJvZ3JhbV9fc2VjdC1mbGV4IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5wcm9ncmFtX19zZWN0LWZsZXgge1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NlY3QtZmxleDpsYXN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuLnByb2dyYW1fX3NlY3QtZmxleC0tcmV2ZXJzZSB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLnByb2dyYW1fX3NlY3QtZmxleC0tcmV2ZXJzZSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuXG4ucHJvZ3JhbV9fcGFyYS13cmFwIHtcbiAgZmxleDogMTtcbn1cblxuLnByb2dyYW1fX3BhcmEge1xuICBsaW5lLWhlaWdodDogMS40O1xuICBwYWRkaW5nOiAxZW0gMS41ZW0gMWVtIDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLnByb2dyYW1fX3BhcmEge1xuICAgIHBhZGRpbmc6IDFlbSAxZW0gMmVtIDFlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnByb2dyYW1fX3BhcmEge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3BhcmEtLXJldmVyc2Uge1xuICBwYWRkaW5nOiAxZW0gMWVtIDFlbSAxLjVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLnByb2dyYW1fX3BhcmEtLXJldmVyc2Uge1xuICAgIHBhZGRpbmc6IDFlbSAxZW0gMmVtIDFlbTtcbiAgfVxufVxuXG4ucHJvZ3JhbV9fbGluayB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcbn1cblxuLnByb2dyYW1fX2xpbms6aG92ZXIge1xuICBjb2xvcjogIzAxNTU3Zjtcbn1cblxuLnByb2dyYW1fX3NtYWxsIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLnByb2dyYW1fX3RhYmxlLXdyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsZXg6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMTg4Y2I7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnByb2dyYW1fX3RhYmxlLXdyYXAge1xuICAgIHBhZGRpbmc6IDJlbSAxZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3RhYmxlLXdyYXA6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTEwMCU7XG4gIG1hcmdpbi1sZWZ0OiAtMTJweDtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBoZWlnaHQ6IDEycHg7XG4gIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggLTVweCwgdHJhbnNwYXJlbnQgMTRweCwgIzAxODhjYiAxNnB4KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLnByb2dyYW1fX3RhYmxlLXdyYXA6OmJlZm9yZSB7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IC0xMnB4O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgIC8qIE5FRUQgVE8gVU5ETyBUSEUgTkVHQVRJVkUgTUFSR0lOPz8gKi9cbiAgfVxufVxuXG4ucHJvZ3JhbV9fdGFibGUtd3JhcDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMDAlO1xuICBtYXJnaW4tbGVmdDogLTEycHg7XG4gIHRvcDogNTAlO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgaGVpZ2h0OiAxMnB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggMjBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IDE1cHgsICMwMTg4Y2IgMTJweCwgdHJhbnNwYXJlbnQgMTNweCk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZS13cmFwOjphZnRlciB7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IC0xMnB4O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICAgIC8qIE5FRUQgVE8gVU5ETyBUSEUgTkVHQVRJVkUgTUFSR0lOPz8gKi9cbiAgfVxufVxuXG4ucHJvZ3JhbV9fdGFibGUtd3JhcC0tcmV2ZXJzZTo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICBtYXJnaW4tcmlnaHQ6IC0yMnB4O1xuICByaWdodDogLTEwMCU7XG4gIGxlZnQ6IDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZS13cmFwLS1yZXZlcnNlOjpiZWZvcmUge1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogLTEycHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xuICB9XG59XG5cbi5wcm9ncmFtX190YWJsZS13cmFwLS1yZXZlcnNlOjphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgbWFyZ2luLXJpZ2h0OiAtMjJweDtcbiAgcmlnaHQ6IC0xMDAlO1xuICBsZWZ0OiAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDguNzVlbSkge1xuICAucHJvZ3JhbV9fdGFibGUtd3JhcC0tcmV2ZXJzZTo6YWZ0ZXIge1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogLTEycHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xuICB9XG59XG5cbi5wcm9ncmFtX190YWJsZSB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIHRyYW5zaXRpb246IGFsbCA4MDBtcyBjdWJpYy1iZXppZXIoMC43NSwgLTAuNSwgMC4yNSwgMS4zMik7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZSB7XG4gICAgZm9udC1zaXplOiAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAucHJvZ3JhbV9fdGFibGUge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3RhYmxlLS1yZXZlcnNlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAlKTtcbn1cblxuLnByb2dyYW1fX3RhYmxlLS12aXNpYmxlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucHJvZ3JhbV9fdGFibGUgdHI6bnRoLW9mLXR5cGUoMW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5wcm9ncmFtX190YWJsZSB0cjpudGgtb2YtdHlwZSgybikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG59XG5cbi5wcm9ncmFtX190YWJsZS1yb3ctLW9uZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMjdkN2YgIWltcG9ydGFudDtcbn1cblxuLnByb2dyYW1fX3RhYmxlLXJvdy0tdHdvIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRiNzE5NSAhaW1wb3J0YW50O1xufVxuXG4ucHJvZ3JhbV9fdGFibGUtcm93LS10aHJlZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhY2MxNTcgIWltcG9ydGFudDtcbn1cblxuLnByb2dyYW1fX3RhYmxlIHRoIHtcbiAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZSB0aCB7XG4gICAgcGFkZGluZzogLjc1ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3RhYmxlIHRkIHtcbiAgcGFkZGluZzogMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnByb2dyYW1fX3RhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiAuNzVlbTtcbiAgfVxufVxuXG4uaGVyb19fd3JhcC0tZm91ciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9jaGFsa2JvYXJkLS1ibHVlLWhpZ2hyZXMuanBnXCIpO1xufVxuXG4uY3VycmljdWx1bSB7XG4gIHBhZGRpbmc6IDEwZW0gMCA2ZW0gMDtcbiAgLyogVGhpcyBpcyBuZWNlc3NhcnkgdG8gbWFrZSB0aGUgYm90dG9tIHJhdGlvIHNlY3Rpb24gZmlsbCB0aGUgZW50aXJlIGhlaWdodCBvZiBpdHMgY29udGVudHMgKi9cbiAgLyogVXNpbmcgdHJhbnNsYXRlIHNpbmNlIHBhZGRpbmcgbWFrZXMgdGhlIGJvdHRvbSBzZWN0IGdvIGhpZ2hlciBhbmQgdGh1cyB0aGUgZW50aXJlIGN1cnJpY3VsdW1fX3NlY3QgaXMgZ29pbmcgaGlnaGVyICovXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0My43NWVtKSB7XG4gIC5jdXJyaWN1bHVtIHtcbiAgICBwYWRkaW5nOiA4ZW0gMCAzZW0gMDtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9faGRnIHtcbiAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xuICBmb250LXNpemU6IDdlbTtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5jdXJyaWN1bHVtX193cmFwIHtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogNmVtIGF1dG8gMCBhdXRvO1xufVxuXG4uY3VycmljdWx1bV9fc2VjdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMDtcbiAgbWFyZ2luLWJvdHRvbTogOGVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3NlY3Qge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMCBhdXRvIDhlbSBhdXRvO1xuICAgIGJvcmRlcjogMDtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0My43NWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zZWN0IHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOC40Mzc1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3NlY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMnB4IDNweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuY3VycmljdWx1bV9fc2VjdDpub3QoLm5vLS1saW5lKTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgdG9wOiAtNGVtO1xuICB9XG59XG5cbi5jdXJyaWN1bHVtX19zZWN0LS1yZXZlcnNlIHtcbiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zZWN0LS1yZXZlcnNlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX2ltYWdlIHtcbiAgbWF4LXdpZHRoOiA2MCU7XG4gIGhlaWdodDogYXV0bztcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSB7XG4gIC5jdXJyaWN1bHVtX19pbWFnZSB7XG4gICAgLyogPz8/Pz8/PyAqL1xuICAgIGZvbnQtc2l6ZTogMS41NWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX2ltYWdlIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX21haW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uY3VycmljdWx1bV9fdG9wIHtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDFlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyN2Q3Zjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuY3VycmljdWx1bV9fdG9wIHtcbiAgICBwYWRkaW5nOiAxZW0gMmVtIDJlbSAyZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3RvcCB7XG4gICAgcGFkZGluZzogMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5jdXJyaWN1bHVtX190b3Age1xuICAgIHBhZGRpbmc6IC41ZW07XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX3RvcC0tYmx1ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YjcxOTU7XG59XG5cbi5jdXJyaWN1bHVtX190b3AtLWdyZWVuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FjYzE1Nztcbn1cblxuLmN1cnJpY3VsdW1fX3RvcC0tb3JhbmdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VhOWY2MTtcbn1cblxuLmN1cnJpY3VsdW1fX2hlYWRpbmcge1xuICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgY3Vyc2l2ZTtcbiAgZm9udC1zaXplOiAxLjZlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX2hlYWRpbmcge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX2hlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMS40NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ1ZW07XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX2hlYXJ0cyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG59XG5cbi5jdXJyaWN1bHVtX19oZWFydHMgZGl2IHtcbiAgei1pbmRleDogOTk7XG59XG5cbi5jdXJyaWN1bHVtX19oZWFydHMgZGl2ICsgZGl2IHtcbiAgbWFyZ2luLWxlZnQ6IC4xZW07XG59XG5cbi5jdXJyaWN1bHVtX19oZWFydHM6OmJlZm9yZSB7XG4gIGZsZXg6IDAgMCAxMDAlO1xuICBjb250ZW50OiBcIlwiO1xuICBoZWlnaHQ6IDJweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA0NCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbn1cblxuLmN1cnJpY3VsdW1fX2hlYXJ0cy1pY29uIHtcbiAgaGVpZ2h0OiAxOHB4O1xuICB3aWR0aDogMThweDtcbiAgZmlsbDogI2ZmZjtcbn1cblxuLmN1cnJpY3VsdW1fX3N1bW1hcnkge1xuICBsaW5lLWhlaWdodDogMS40O1xuICBmb250LXNpemU6IDEuMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAuY3VycmljdWx1bV9fc3VtbWFyeSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuY3VycmljdWx1bV9fc3VtbWFyeSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3N1bW1hcnkge1xuICAgIGZvbnQtc2l6ZTogMS4wNWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zdW1tYXJ5IHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBsaW5lLWhlaWdodDogMS4zO1xuICB9XG59XG5cbi5jdXJyaWN1bHVtX19saW5rIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2UtaW47XG59XG5cbi5jdXJyaWN1bHVtX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICNkZGQ7XG59XG5cbi5jdXJyaWN1bHVtX19wcmljZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgcGFkZGluZzogLjc1ZW0gMS41ZW07XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItcmFkaXVzOiA5OWVtO1xuICBtYXJnaW46IDJlbSBhdXRvIDFlbSBhdXRvO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQsXHIgY29sb3IgMzAwbXMgZWFzZS1vdXQsXHIgdHJhbnNmb3JtIDE1MG1zIGxpbmVhcjtcbiAgd2lkdGg6IDEwZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuY3VycmljdWx1bV9fcHJpY2Uge1xuICAgIG1hcmdpbjogMmVtIGF1dG8gLjVlbSBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19wcmljZSB7XG4gICAgbWFyZ2luOiAyZW0gYXV0byAxZW0gYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3ByaWNlIHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICAgIHdpZHRoOiA4ZW07XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX3ByaWNlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgY29sb3I6ICNmMjdkN2Y7XG59XG5cbi5jdXJyaWN1bHVtX19wcmljZTphY3RpdmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIDJweCk7XG59XG5cbi5jdXJyaWN1bHVtX19wcmljZS0tYmx1ZTpob3ZlciB7XG4gIGNvbG9yOiAjNGI3MTk1O1xufVxuXG4uY3VycmljdWx1bV9fcHJpY2UtLWdyZWVuOmhvdmVyIHtcbiAgY29sb3I6ICNhY2MxNTc7XG59XG5cbi5jdXJyaWN1bHVtX19wcmljZS0tb3JhbmdlOmhvdmVyIHtcbiAgY29sb3I6ICNlYTlmNjE7XG59XG5cbi5jdXJyaWN1bHVtX19ub3RlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBtYXJnaW4tdG9wOiAuNWVtO1xufVxuXG4uY3VycmljdWx1bV9fYm90dG9tIHtcbiAgY29sb3I6ICM0ZjRmNGY7XG4gIHBhZGRpbmc6IDEuNzVlbTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAvKiBUaGlzIGlzIG5lY2Vzc2FyeSB0byBtYWtlIHRoZSBib3R0b20gcmF0aW8gc2VjdGlvbiBmaWxsIHRoZSBlbnRpcmUgaGVpZ2h0IG9mIGl0cyBjb250ZW50cyAqL1xuICBmbGV4OiAxO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAuY3VycmljdWx1bV9fYm90dG9tIHtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX3N1YmhlYWRpbmcge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMS43NWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleDogMTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDcwZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3N1YmhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMS41NWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zdWJoZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICB9XG59XG5cbi5jdXJyaWN1bHVtX19yYXRpbyB7XG4gIGZsZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uY3VycmljdWx1bV9fcmF0aW8ge1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbi5jdXJyaWN1bHVtX190aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIC8qdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC4yNWVtKTsqL1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICAuY3VycmljdWx1bV9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX251bWJlciB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBjb2xvcjogIzAxODhjYjtcbiAgLyp0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLS4zNWVtKTsqL1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAuY3VycmljdWx1bV9fbnVtYmVyIHtcbiAgICBmb250LXNpemU6IDEuN2VtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19udW1iZXIge1xuICAgIGZvbnQtc2l6ZTogMS42ZW07XG4gIH1cbn1cblxuLmhlcm9fX3dyYXAtMi5jYWxlbmRhciB7XG4gIGhlaWdodDogMHZoO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uY2FsZW5kYXItLXdyYXAge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvY2xvdWQtYmcucG5nXCIpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA4Yzk5O1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBwYWRkaW5nLXRvcDogMTBlbTtcbiAgcGFkZGluZy1ib3R0b206IDEwZW07XG59XG5cbi5mb290ZXIuY2FsIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDAuNSkpLCB1cmwoXCIuLi9pbWcvZm9vdGVyLS1iZy5wbmdcIik7XG59XG5cbi5oZXJvX193cmFwLS1zZXZlbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9ib29rcy5qcGdcIik7XG59XG5cbi5mb3Jtc19fZ3JpZCB7XG4gIG1hcmdpbi10b3A6IDZlbTtcbn1cblxuLmZvcm1zX193cmFwIHtcbiAgY29sb3I6ICMyMTIxMjE7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWluLWNvbnRlbnQgMWZyO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDIuNWVtO1xufVxuXG4uZm9ybXNfX2xpbmsge1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG4gIGdyaWQtcm93OiAxIC8gMztcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uZm9ybXNfX2xpbms6aG92ZXIge1xuICBjb2xvcjogZ3JheTtcbn1cblxuLmZvcm1zX19pdGVtIHtcbiAgZ3JpZC1jb2x1bW46IDIgLyAzO1xuICBncmlkLXJvdzogMSAvIDI7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIGFsaWduLXNlbGY6IGVuZDtcbiAgbWFyZ2luLWJvdHRvbTogLjFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5mb3Jtc19faXRlbSB7XG4gICAgZm9udC1zaXplOiAxZW07XG4gIH1cbn1cblxuLmZvcm1zX19pbmZvIHtcbiAgZ3JpZC1jb2x1bW46IDIgLyAzO1xuICBncmlkLXJvdzogMiAvIDM7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgYWxpZ24tc2VsZjogc3RhcnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuZm9ybXNfX2luZm8ge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLypcclxudGVtcCBmaXggdG8ga3dlcyByZW1vdmluZyB0aGUgY2xhc3MgbmFtZSBmcm9tIHRoZSBmb3JtXHJcbi5zdWJzY3JpYmUgZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyNTBweCwgMWZyKSk7XHJcbiAgICBncmlkLWdhcDogM2VtIDEuNWVtO1xyXG59XHJcblxyXG4qL1xuLypcclxuS1dFUyBXUkFQUyBFQUNIIElOUFVUIEVMRU1FTlQgSU4gQSBTUEFOIC5rdy1maWVsZC13cmFwcGVyIHNvIHRoZSAxMDAlIHdpZHRoIG5lZWRzIHRvIGJlIGFkZGVkIHRvIHRoaXMgc3BhbiBidXQgSSBzdGlsbCBtaWdodCBuZWVkIHRvIGFjY291bnQgZm9yIHRoZSBzdWJtaXQgYnV0dG9uIGFueSB0aW1lIGlzIGlzIGEgYnV0dG9uIGVsZW1lbnQgYW5kIE5PVCBhIGlucHV0IHR5cGU9c3VibWl0IGVsZW1lbnRcclxuKi9cbi8qKiogQUREIFRISVMgUE9TSVRJT04gUkVMQVRJVkUgTUFZQkUhISEhICoqKioqL1xuLyoqKioqIEtXRVMgU1RZTEVTIFNUQVJUICoqKiovXG4ua3ctZmllbGQtd3JhcHBlciB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ua3dlcy1maWVsZC13cmFwcGVyIC5oZWxwIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4vKiBURVhUQVJFQSAqL1xuLmt3LWZpZWxkLXdyYXBwZXItNiB7XG4gIGhlaWdodDogNmVtICFpbXBvcnRhbnQ7XG59XG5cbi8qIFRoaXMgbWF0Y2hlcyBwZW5jaWwgaWNvbiB3cmFwIHRvIGJlIHRoZSBzYW1lIGhlaWdodCBhdCB0aGUgdGV4dGFyZWEgZmllbGQgLS13aHkgOCBhbmQgbm90IDY/Pz8/Pz8gKi9cbiNhcHBsaWNhbnQtcGVuY2lsLXByZWZpeCB7XG4gIGhlaWdodDogOGVtO1xufVxuXG4vKioqKiogS1dFUyBTVFlMRVMgRU5EICoqKiovXG4uaGVyb19fd3JhcC0tZWlnaHQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaGVyby1jb250YWN0LmpwZ1wiKTtcbn1cblxuLmZvcm0td3JhcHBlciB7XG4gIG1hcmdpbjogNGVtIGF1dG8gNGVtIGF1dG87XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIC5mb3JtLXdyYXBwZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cblxuLmNvbnRhY3Qge1xuICBwYWRkaW5nOiA4ZW0gMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICAuY29udGFjdCB7XG4gICAgcGFkZGluZzogNWVtIDA7XG4gIH1cbn1cblxuLmNvbnRhY3RzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzMzI2YztcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDEuMjVlbTtcbiAgZmxleDogMTtcbn1cblxuLmNvbnRhY3Qtd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGhlaWdodDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUyLjVlbSkge1xuICAuY29udGFjdC13cmFwIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyMy4wNjI1ZW0pIHtcbiAgLmNvbnRhY3Qtd3JhcCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG59XG5cbi53cmFwcHktLW9uZSB7XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLndyYXBweS0tb25lIHtcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC53cmFwcHktLW9uZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogM2VtO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxufVxuXG4uY29udGFjdC1oZGcge1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDEuMmVtO1xufVxuXG4uY29udGFjdC1pY29uIHtcbiAgZmlsbDogIzAxODhjYjtcbiAgcGFkZGluZy1yaWdodDogLjFlbTtcbiAgd2lkdGg6IDEuMmVtO1xuICBoZWlnaHQ6IDEuMmVtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC4yZW0pO1xufVxuXG4uY29udGFjdC1oZGctc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogLjkxNWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTUuNjI1ZW0pIHtcbiAgLmNvbnRhY3QtaXRlbSB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5jb250YWN0LWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICB9XG59XG5cbi5jb250YWN0LWl0ZW0gKyAuY29udGFjdC1pdGVtIHtcbiAgbWFyZ2luLXRvcDogLjNlbTtcbn1cblxuLmNvbnRhY3QtaXRlbS5ob3VycyB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAuM2VtO1xufVxuXG4uY29udGFjdC1pdGVtLmhvdXJzOm5vdCg6bGFzdC1vZi10eXBlKSB7XG4gIG1hcmdpbi1ib3R0b206IC43NWVtO1xufVxuXG4uZm9ybSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC40KSksIHVybChcIi4uL2ltZy9jaGlsZC13cml0aW5nLmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgcGFkZGluZzogNGVtIDEuNWVtO1xuICBmbGV4OiA0O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmZvcm0ge1xuICAgIHBhZGRpbmc6IDJlbSAuNzVlbTtcbiAgfVxufVxuXG5mb3JtIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICBncmlkLWdhcDogMWVtO1xuICBwYWRkaW5nLXRvcDogM2VtO1xufVxuXG4uZnVsbC13aWR0aDpsYXN0LW9mLXR5cGUge1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbn1cblxuLmZpZWxkLXRleHQgaW5wdXQsXG4uZmllbGQtdGV4dCB0ZXh0YXJlYSxcbi5zdWJtaXQge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogMCAuMjVlbSAuMjVlbSAwO1xuICBwYWRkaW5nOiAuMzc1ZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG4uZmllbGQtdGV4dCBpbnB1dCB7XG4gIGhlaWdodDogMi4xMjVlbTtcbn1cblxuLmZpZWxkLXRleHQgaW5wdXQ6Zm9jdXMsXG4uZmllbGQtdGV4dCB0ZXh0YXJlYTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwLjVlbSByZ2JhKDkzLCAxNjIsIDI0OCwgMC41KTtcbn1cblxuZm9ybSBsYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmZpZWxkLXByZWZpeGVkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uZmllbGQtcHJlZml4IHtcbiAgZmxleDogMCAwIDIuMmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIGJvcmRlci1yYWRpdXM6IC4yNWVtIDAgMCAuMjVlbTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IC4zNzVlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzMyNmM7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQgMTAwbXM7XG59XG5cbi5maWVsZC1wcmVmaXguYmFja2dyb3VuZC1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG59XG5cbi5mb3JtLWljb24ge1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgZmlsbDogI2ZmZjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcbn1cblxuZm9ybSBwIHtcbiAgbWFyZ2luOiAwO1xufVxuXG50ZXh0YXJlYSB7XG4gIGhlaWdodDogOGVtO1xuICByZXNpemU6IG5vbmU7XG59XG5cbi8qIGNoYW5nZWQgZnJvbSAxIC8gMyBiZWNhdXNlIG90aGVyd2lzZSB0aGVyZSB3aWxsIEFMV0FZUyBiZSB0d28gY29sdW1ucyovXG4uZnVsbC13aWR0aCB7XG4gIGdyaWQtY29sdW1uOiAxIC8gLTE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5maWVsZC10ZXh0IHtcbiAgICBncmlkLWNvbHVtbjogMSAvIC0xO1xuICB9XG59XG5cbi5mdWxsLXdpZHRoOmxhc3Qtb2YtdHlwZSB7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xufVxuXG4uc3VibWl0IHtcbiAgbWFyZ2luLXRvcDogMmVtO1xuICBwYWRkaW5nOiAuNmVtIDEuMmVtO1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjMWI0Nzk4LCAjMTUzNjc1KTtcbiAgYm94LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xufVxuXG4uc3VibWl0OmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uc3VibWl0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLnN1Ym1pdDphY3RpdmUge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMXB4KTtcbn1cblxuLnN1Ym1pdCBzcGFuIHtcbiAgbWFyZ2luOiAwIC4zZW0gLjJlbSAwO1xufVxuXG4uc3VibWl0IC5mb3JtLWljb24ge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMnB4KTtcbn1cblxuLyogU2V0IHRoZSBzaXplIG9mIHRoZSBkaXYgZWxlbWVudCB0aGF0IGNvbnRhaW5zIHRoZSBtYXAgKi9cbiNtYXAge1xuICBoZWlnaHQ6IDQwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbiIsIi8qKiogU1RZTEVTIEZPUiBUSEUgTU9CSUxFIE1FTlUgQU5JTUFUSU9OICoqKi9cclxuXHJcbi8vIFRIRVNFIFNUWUxFUyBDQU4gUFJPQkFCTFkgSlVTVCBCRSBBRERFRCBUTyBUSEUgTUFJTiAuaGVhZGVyX19uYXYtaXRlbSBERUNMQVJUQVRJT05cclxuLyouaGVhZGVyX19uYXYtaXRlbS50ZXN0dCB7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgZWFzZS1vdXQ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5lbXB0eS55byB7XHJcbiAgICAvL3RyYW5zZm9ybTogc2NhbGUoNTApO1xyXG4gICAgLy93aWR0aDogMTE2cHg7XHJcbiAgICAvL2hlaWdodDogNDBweDtcclxuICAgICB0cmFuc2Zvcm06IHNjYWxlKDUwKSByb3RhdGUoMTgwZGVnKTtcclxuICAgIFxyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIFxyXG59XHJcblxyXG4uZW1wdHkge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHotaW5kZXg6IC0xO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKSByb3RhdGUoMCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgXHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgXHJcbiAgICAvL3dpZHRoOiAwO1xyXG4gICAgLy9oZWlnaHQ6IDA7XHJcbiAgICAvL3RyYW5zZm9ybTogc2NhbGUoLjEpO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDQwMG1zIGVhc2UtaW4sIG9wYWNpdHkgMjAwbXMgZWFzZS1pbjtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG59Ki9cclxuLyoqKiBFTkQgU1RZTEVTIEZPUiBUSEUgTU9CSUxFIE1FTlUgQU5JTUFUSU9OICoqKi9cclxuXHJcblxyXG4uaGVhZGVyIHtcclxuICAgICAgIFxyXG4gICAgJl9fdG9wLXNlY3Qge1xyXG4gICAgICAgIGJvcmRlci10b3A6IDVweCBzb2xpZCAkZ3JheS1kYXJrZXI7IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3Atc2VjdC1jb250YWluZXIge1xyXG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtYmFyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9jbmVyLTUzNi5wbmcnKSBuby1yZXBlYXQgdG9wIGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBoZWlnaHQ6IDM5cHg7XHJcbiAgICAgICAgd2lkdGg6IDUzNnB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICByaWdodDogLTU1dnc7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAxMjgwcHgpIHtcclxuICAgICAgICAgICAgcmlnaHQ6IC01MHZ3O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggMTEzMHB4KSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtNDV2dztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICByaWdodDogLTQwdnc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICByaWdodDogLTM1dnc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4NDBweCkge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltZy9jbmVyLTMwMS5wbmcnKSBuby1yZXBlYXQgdG9wIGNlbnRlcjtcclxuICAgICAgICAgICAgcmlnaHQ6IC01N3Z3O1xyXG4gICAgICAgICAgICB3aWR0aDogMzAxcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA3MjBweCkge1xyXG4gICAgICAgICAgICByaWdodDogLTQ3dnc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2MTVweCkge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtYmFyLWNvbnRhY3QgeyAgIFxyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXHJcbiAgICAgICAgcmlnaHQ6IDRlbTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoY2FsYygtNTAlIC0gNXB4KSk7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyAgICBcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggODQwcHgpIHtcclxuICAgICAgICAgICAgcmlnaHQ6IDZlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2MTVweCkge1xyXG4gICAgICAgICAgICByaWdodDogLjI1ZW07XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBhbGxvdyBwaG9uZSAjIHRvIGdvIGFib3ZlIGxvZ29cclxuICAgICAgICAgICAgei1pbmRleDogNTU2NTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RvcC1iYXItaXRlbSArICZfX3RvcC1iYXItaXRlbSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEuNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX3RvcC1iYXItaXRlbTpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4NDBweCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLWJhci1pdGVtOmZpcnN0LW9mLXR5cGUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtYmFyLWl0ZW0ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLWJhci1pY29uIHtcclxuICAgICAgICBmaWxsOiAkYXF1YTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC4zZW07XHJcbiAgICAgICAgd2lkdGg6IDEuMmVtO1xyXG4gICAgICAgIGhlaWdodDogMS4yZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qIHBob25lIGljb24gdGV4dCAgKi9cclxuICAgICZfX3Bob25lLWljb24ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDYxNXB4KSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjhlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdG9wLWJhci1saW5rIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6IGRhcmtlbigjZmZmLCAxNSUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTYxNSkge1xyXG4gICAgICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGxpZ2h0ZW4oIzMzMywgMzAlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbWFpbi1zZWN0IHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDAgMmVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAxMDIwcHgpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNjE1KSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzdweCk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLTMwcHg7IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNjE1KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2xvZ28taW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxNS42MjVlbTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX25hdi1saXN0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX25hdi1pdGVtIHtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgLy9wb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgLy96LWluZGV4OiAxMDA7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fbmF2LWl0ZW0gKyAmX19uYXYtaXRlbSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWljb24ge1xyXG4gICAgICAgIGZpbGw6ICRncmF5LWRhcmtlcjtcclxuICAgICAgICB3aWR0aDogMWVtO1xyXG4gICAgICAgIGhlaWdodDogMWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19uYXYtaXRlbTpob3ZlciB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMC4xODc1ZW0gMCAkYXF1YTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWl0ZW06aG92ZXIgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWl0ZW0uY2xpY2tlZC1wYXJlbnQge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTAuMTg3NWVtIDAgJGFxdWE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbm9uZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWxpbmsuY2xpY2tlZCB7XHJcbiAgICAgICAgY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX25hdi1saW5rIHtcclxuICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcclxuICAgICAgICBjb2xvcjogJGdyYXktZGFya2VyO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC44NWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuLmhlYWRlci5zdGlja3kge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwOyBcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjgpO1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggMnB4IHJnYmEoMCwwLDAsLjQpO1xyXG4gICAgei1pbmRleDogMTAwMTtcclxuICAgIFxyXG4gICAgJiAuaGVhZGVyX190b3Atc2VjdCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJiAuaGVhZGVyX19sb2dvLWltYWdlIHtcclxuICAgICAgICB3aWR0aDogMTMuNWVtO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBcclxuICAgICAgICAvLyBwdXR0aW5nIGluc2lkZSB0aGUgc2l0Y2t5IGNsYXNzIG9ubHkgc28gaXQgd2lsbCBvbmx5IHhpdGlvbiBvbiBzdGlja3kgbWVudSBpbiwgbm90IG91dCBcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNjAwbXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLmhlYWRlcl9fbWFpbi1zZWN0IHtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTYxNSkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLmhlYWRlcl9fbG9nbyB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmIC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OjphZnRlciB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG4ubmF2aWdhdGlvbl9fY2hlY2tib3gge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcblxyXG4gICAgLm5hdmlnYXRpb25fX2J1dHRvbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQ0NDtcclxuICAgICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICB0b3A6IDQwcHg7XHJcbiAgICAgICAgcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgei1pbmRleDogMjAwMDtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDEuNWVtIDJlbSByZ2JhKCMwMDAsIC4xKTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICB0b3A6IDQ1cHg7XHJcbiAgICAgICAgcmlnaHQ6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KHJnYmEoJHJveWFsYmx1ZSwgLjgpLCByZ2JhKCRhcXVhLCAuOCkpO1xyXG4gICAgICAgIHotaW5kZXg6IDEwMDA7XHJcblxyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSA4MDBtcyBjdWJpYy1iZXppZXIoLjg2LCAwLCAuMDcsIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIC5oZWFkZXJfX25hdiB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgei1pbmRleDogMTUwMDtcclxuXHJcbiAgICAgICAgLy90cmFuc2l0aW9uOiBhbGwgODAwbXMgY3ViaWMtYmV6aWVyKC42OCwgLS41NSwgLjI2NSwgMS41NSk7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuXHJcbiAgICAgICAgLyogdXNlIHRyYW5zZm9ybSBpbnN0ZWFkIGZvciBhIHNtb290aGVyIGFuaW1hdGlvbiBhbmQgYWxzbyBtb3JlIHBlcmZvcm1hbnQgICovXHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC04MDBweCk7XHJcblxyXG4gICAgICAgIC8qIHB1dCB0aGUgd2lkdGggMTAwJSBoZXJlICAqL1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuaGVhZGVyX19uYXYtbGlzdCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICAgIC8vIGNoYW5naW5nIGZyb20gZGlzcGxheTogZmxleFxyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgIC5oZWFkZXJfX25hdi1pdGVtLmNsaWNrZWQtcGFyZW50IHtcclxuICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgfSAgICAgXHJcblxyXG4gICAgLmhlYWRlcl9fbmF2LWl0ZW0ge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41ZW07XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLjVlbTtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyAgICAgXHJcbiAgICAgICAgcGFkZGluZzogLjc1ZW0gMWVtOyAgICBcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcclxuICAgIH0gXHJcbiAgICBcclxuICAgIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLjc1ZW0pO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcclxuICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuaGVhZGVyX19uYXYtaXRlbTpob3ZlciAuaGVhZGVyX19uYXYtbGluayB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qLmhlYWRlcl9fbmF2LWl0ZW0uaGFzLXN1Ym1lbnU6OmFmdGVyIHtcclxuICAgICAgICBjb2xvcjogJHJveWFsYmx1ZTtcclxuICAgIH0qL1xyXG4gICAgXHJcbiAgICAvKi5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OmhvdmVyOjphZnRlciB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9Ki9cclxuXHJcbiAgICAuaGVhZGVyX19uYXYtbGluay5jbGlja2VkIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcblxyXG4gICAgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAkcm95YWxibHVlO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcclxuICAgIH1cclxuXHJcbiAgICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDcwKTtcclxuICAgIH1cclxuXHJcbiAgICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XHJcblxyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA4MDBtcyBjdWJpYy1iZXppZXIoLjY4LCAtLjU1LCAuMjY1LCAxLjU1KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmhlYWRlci5zdGlja3kgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWxpbmsuY2xpY2tlZCB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1saW5rIHtcclxuICAgICAgICBjb2xvcjogJHJveWFsYmx1ZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWxpbmsuY2xpY2tlZCB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1saW5rLmNsaWNrZWQge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuaGVhZGVyLnN0aWNreSAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtaXRlbTpob3ZlciAuaGVhZGVyX19uYXYtbGluayAge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKi5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OjphZnRlciB7XHJcbiAgICAgICAgY29sb3I6ICRyb3lhbGJsdWU7XHJcbiAgICB9Ki9cclxuICAgIFxyXG4gICAgLyoubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudC5oYXMtc3VibWVudTo6YWZ0ZXIgIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH0qL1xyXG4gICAgXHJcbiAgICAvKi5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtLmNsaWNrZWQtcGFyZW50Lmhhcy1zdWJtZW51OjphZnRlciAge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfSovXHJcbiAgICBcclxuICAgIC8qLmhlYWRlci5zdGlja3kgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWl0ZW0uaGFzLXN1Ym1lbnU6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH0qL1xyXG4gICAgXHJcbiAgICAvKi5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OmhvdmVyID4gdWwge1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgIHRvcDogMzAwJTtcclxuICAgIH0qL1xyXG5cclxuICAgIC5uYXZpZ2F0aW9uX19pY29uIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMS41NWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgICYsICY6OmJlZm9yZSwgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDEuNmVtO1xyXG4gICAgICAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlLCAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDQwMG1zO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLS40NWVtKTsgfVxyXG4gICAgICAgICY6OmFmdGVyIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC40NWVtKTsgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtLjU1ZW0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC41NWVtKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgKyAubmF2aWdhdGlvbl9fYnV0dG9uIC5uYXZpZ2F0aW9uX19pY29uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgKyAubmF2aWdhdGlvbl9fYnV0dG9uIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoMTM1ZGVnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgKyAubmF2aWdhdGlvbl9fYnV0dG9uIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSgtMTM1ZGVnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcblxyXG5cclxufVxyXG5cclxuXHJcbiIsIlxyXG5cclxuLmhlcm8ge1xyXG5cclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIFxyXG4gICAgJl9fd3JhcCB7ICAgIFxyXG4gICAgICAgIGhlaWdodDogNzV2aDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsMCwwLC40KSwgcmdiYSgwLDAsMCwuNCkpLCB1cmwoJy4uL2ltZy9oZXJvLmpwZycpO1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuICAgICAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuOCk7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKiZfX3dyYXAtdHdvIHtcclxuICAgICAgICBoZWlnaHQ6IDgwdmg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvaGVybzIuanBnJyk7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICBcclxuICAgICAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuOCk7XHJcbiAgICAgICAgd2lkdGg6IDEyMDBweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fd3JhcC10aHJlZSB7XHJcbiAgICAgICAgaGVpZ2h0OiA4MHZoO1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2hlcm8zLmpwZycpO1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsLjgpO1xyXG4gICAgICAgIHdpZHRoOiAxMjAwcHg7XHJcbiAgICB9Ki9cclxuICAgIFxyXG4gICAgJl9fY2VudGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBmb250LXNpemU6IDRlbTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4zZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgJi0tc3BhbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjVlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjdlbTtcclxuICAgICAgICBcclxuICAgICAgICAmLS1zcGFuIHtcclxuICAgICAgICAgICAgY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG4uYnRuOmxpbmssIC5idG46dmlzaXRlZCB7XHJcbiAgICBmb250LXNpemU6IC44ZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYXF1YTtcclxuICAgIHBhZGRpbmc6IDFlbSAyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA5OWVtO1xyXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLDAsMCwuNCk7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0LCB0cmFuc2Zvcm0gMTUwbXMgbGluZWFyO1xyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJGFxdWEsIDEwJSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6YWN0aXZlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIDJweCk7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG5cclxuLmNhcmRzX19idG4tMjpsaW5rLCAuY2FyZHNfX2J0bi0yOnZpc2l0ZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLDAsMCwuNClcclxufVxyXG5cclxuLmNhcmRzX19idG4tMjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgY29sb3I6IGRhcmtlbigjZmZmLCAyMCUpO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBkYXJrZW4oI2ZmZiwgMjAlKTtcclxufVxyXG5cclxuLmNhcmRzX19idG4tMjphY3RpdmUge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCAycHgpO1xyXG59IiwiXHJcbi5jYXJkcyB7XHJcbiAgICBcclxuICAgICZfX2Fib3V0IHtcclxuICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgbWFyZ2luOiA2ZW0gYXV0byA4ZW0gYXV0bztcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICAgICAgbWFyZ2luOiA0ZW0gYXV0byA1ZW0gYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX21haW4td3JhcCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2dyaWQge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyODBweCwgMWZyKSk7XHJcbiAgICAgICAgZ3JpZC1nYXA6IDJlbTtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2UtOTgwKSB7XHJcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2MjJweCkge1xyXG4gICAgICAgICAgICBncmlkLWdhcDogM2VtIDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2MjJweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbWFnZS13cmFwIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHggMTBweCAwIDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlIHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fd2F2ZSB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTJweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAtNXB4LCB0cmFuc3BhcmVudCAxNHB4LCAjZmZmIDE2cHgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggMjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IDE1cHgsICNmZmYgMTJweCwgdHJhbnNwYXJlbnQgMTNweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jb250ZW50IHtcclxuICAgICAgICBwYWRkaW5nOiAxZW07IFxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgY29sb3I6ICRhcXVhOyBcclxuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcclxuICAgICAgICAgICBmb250LXNpemU6IDNlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbi5mbGF0aWNvbi1raW5kZXJnYXJ0ZW4ge1xyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgZm9udC1zaXplOiAzLjJlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAvKiAzUkQgQ0FSRCBTVEFSVCAtLSBpcyB0aGlzIHVzZWQ/Pz8gKi9cclxuICAgICZfX2ljb24tbGFyZ2Uge1xyXG4gICAgICAgIGNvbG9yOiAkcm95YWxibHVlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdWJoZWFkaW5nLWJydXNoIHtcclxuICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHBpbmstYnJ1c2g7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIHJlbW92ZWQgMXB4IHRvIGdldCByaWQgb2YgdGlueSBib3JkZXIgbGluZXMgb24gb3V0c2lkZSBvZiBwYWludGJydXNoXHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMjc0cHg7IFxyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9mb290ZXJfdGl0bGVfYmcucG5nJyk7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDU1JTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGxhcmdlLTk4MCkge1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAyNDBweDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZy1icnVzaC0tMiB7XHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZS1icnVzaDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmctYnJ1c2gtLTMge1xyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZWVuLWJydXNoO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZy1icnVzaC1zcGFuLS0xLCAmX19zdWJoZWFkaW5nLWJydXNoLXNwYW4tLTIsICZfX3N1YmhlYWRpbmctYnJ1c2gtc3Bhbi0tMyB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZyB7XHJcbiAgICAgICAgbWFyZ2luOiAuNWVtIDAgMWVtIDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjdlbTtcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGxhcmdlLTk4MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICBtYXJnaW46IC41ZW0gMCAuNzVlbSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbi13cmFwIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbjpub3QoOmxhc3Qtb2YtdHlwZSkge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogLjNlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3VtbWFyeSB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19idG4ge1xyXG4gICAgICAgIG1hcmdpbjogM2VtIDA7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAyZW0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuXHJcbiAgICBcclxufVxyXG5cclxuIiwiXHJcbi5jdXJyZW50LWNhbCB7XHJcbiAgICBwYWRkaW5nOiAwIDAgM2VtIDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDYwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcbi5nYWxsZXJ5IHtcclxuICAgIFxyXG4gICAgJi5mdWxsd2lkdGgge1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Utd3JhcCB7XHJcbiAgICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgIFxyXG4gICAgICAgICYuZnVsbHdpZHRoIHtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmX19pbWFnZS13cmFwIHtcclxuICAgICAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJl9faW1hZ2Utd3JhcC0tb3JkZXIge1xyXG4gICAgICAgICAgICBvcmRlcjogLTE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBvcGFjaXR5OiAuODU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbn0iLCJcclxuLmZvb3RlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiAyZW07XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9mb290ZXItLWJnLnBuZycpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCAkZ3JheS1kYXJrZXN0O1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgcGFkZGluZzogMmVtIDFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fd3JhcCB7XHJcbiAgICAgICAgY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNlbTsgXHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xvZ28td3JhcCB7XHJcbiAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbG9nbyB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19sb2dvIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX21haW4ge1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyNTBweCwgMWZyKSk7XHJcbiAgICAgICAgZ3JpZC1nYXA6IDIuNWVtO1xyXG4gICAgICAgIG1hcmdpbjogM2VtIDA7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGdyaWQtZ2FwOiAzLjVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmcge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmctc3BhbiB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbWlzc2lvbiB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faG91cnMge1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuOGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jbG9zaW5ncy1saW5rIHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRhcXVhLCAxMCUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250YWN0IHAge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEuMmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NvbnRhY3QtaWNvbiB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC4yNWVtO1xyXG4gICAgICAgIHdpZHRoOiAxLjFlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuMWVtO1xyXG4gICAgICAgIGZpbGw6ICRhcXVhO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jb250YWN0LWljb24tLTEge1xyXG4gICAgICAgIHdpZHRoOiAxLjJlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuMmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zaGFwZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvc2hhcGVfYm90dG9tLnBuZycpO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAgICAgLy9iYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgMCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIGhlaWdodDogNDVweDtcclxuICAgICAgICBcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ljb24td3JhcCB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIH1cclxuXHJcbiAgICAmX19pY29uIHtcclxuICAgICAgICBmaWxsOiAkYXF1YTtcclxuICAgICAgICB3aWR0aDogMS4zZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjNlbTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoM3B4KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYm90dG9tIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmxhY2stbGlnaHRlcjtcclxuICAgICAgICBwYWRkaW5nOiAyZW07XHJcbiAgICAgICAgY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jb3B5cmlnaHQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2Rlc2lnbiB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19tZSwgJl9fbWU6dmlzaXRlZCB7XHJcbiAgICAgICAgY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2UtaW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRhcXVhLCAxMCUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGF4aWQge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIuNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbiIsIlxyXG4uanMtYnR0LWJ0biB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IC0yLjdlbTtcclxuICAgIHJpZ2h0OiAuNWVtO1xyXG4gICAgd2lkdGg6IDEuN2VtO1xyXG4gICAgaGVpZ2h0OiAxLjdlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGdyYXktZGFyaywgLjgpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuN2VtO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgNTAwbXMgZWFzZS1vdXQsIGJvdHRvbSA0MDBtcyBjdWJpYy1iZXppZXIoMC42NCwgMC41NywgMC42NywgMS4yMyksIGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQsIGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgXHJcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgJGFxdWE7XHJcbiAgICBcclxuICAgIC8vIHRyeWluZyB0byBmaXggYnRuIG5vdCBzaG93aW5nIG9uIG1vYmlsZVxyXG4gICAgei1pbmRleDogOTUwMDtcclxuXHJcbiAgICAmLWljb24ge1xyXG4gICAgICAgIGZpbGw6ICNmZmY7XHJcbiAgICAgICAgd2lkdGg6IDFlbTtcclxuICAgICAgICBoZWlnaHQ6IDFlbTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNXB4KTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBmaWxsIDMwMG1zIGVhc2UtaW47XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6aG92ZXIgJi1pY29uIHtcclxuICAgICAgICBmaWxsOiAkYXF1YTtcclxuICAgIH1cclxuXHJcbiAgICAmLmFjdGl2ZSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICBib3R0b206IDEuNWVtO1xyXG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDEpO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiIsIi8qIElGIFlPVSBLRUVQIFRIRSBNT0JJTEUgQU5JTUFUSU9OIFRIRU4gSlVTVCBBREQgVEhFU0UgU1RZTEVTIFRPIFRIRSBNQUlOIEJPRFkgZWxlbWVudCBDTEFTUyAqL1xyXG4vKlxyXG4uVGhlQWJvdXRVcyB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSA0MDBtcyBlYXNlLWluO1xyXG59XHJcbiovXHJcblxyXG5cclxuXHJcbi5oZXJvX193cmFwLS10d28ge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvd2FsbC5qcGcnKTtcclxufVxyXG5cclxuLmhlcm9fX2hlYWRpbmcge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5hYm91dHVzIHtcclxuICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBcclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgbWFyZ2luOiA2ZW0gYXV0byAwIGF1dG87XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTYxNSkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTUlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICAvKlxyXG4gICAgXHJcbiAgICBUbyBtYWtlIHRoZSBmb250LXNpemUgY2hhbmdlIGEgbGl0dGxlIHNtb290aGVyIHdoZW4gdGhlIHNpemUgb2YgdGhlXHJcbiAgICBTVkcgZW1iZWRkZWQgb2JqZWN0IGNoYW5nZXMvaW4gbWVkaWEgcXVlcmllcywgeW91IGNhbiBhZGQgaW4gYSBDU1MgdHJhbnNpdGlvbiBlZmZlY3Q6XHJcbiAgICBcclxuICAgIHN2ZyB0ZXh0IHsgdHJhbnNpdGlvbjogZm9udC1zaXplIDAuNXM7IH1cclxuICAgIFxyXG4gICAgKi9cclxuICAgIFxyXG4gICAgXHJcbiAgICAvKiZfX3RleHQtc3ZnIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXNpemU6IDkwcHg7XHJcbiAgICB9Ki9cclxuICAgIFxyXG4gICAgLyomX190c3Bhbi1zdmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTY1cHg7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcclxuICAgIH0qL1xyXG4gICAgXHJcbiAgICAvKiZfX2ltYWdlLXN2ZyB7XHJcbiAgICAgICAgLy9oZWlnaHQ6IDcwdmg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAzMDBweDtcclxuICAgICAgICBjbGlwLXBhdGg6IHVybCgjc3ZnLXBhdGgpO1xyXG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgfSovXHJcbiAgICBcclxuICAgICZfX3N2ZyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZXh0LXN2ZyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190c3Bhbi1zdmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzVweDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbWFnZS1zdmcge1xyXG5cclxuICAgICAgICBjbGlwLXBhdGg6IHVybCgjc3ZnLXBhdGgpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0IHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnI7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XHJcbiAgICAgICAgZ3JpZC1nYXA6IDEuNWVtIDEuMjVlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltZ3dyYXAge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL2FxdWEtY2lyY2xlLWJ1YmJsZS5wbmcnKSBuby1yZXBlYXQgdG9wIGxlZnQ7XHJcbiAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICAgIHdpZHRoOiA1OHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgICAgICB3aWR0aDogMS40ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjRlbTtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZGcge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICAgICAganVzdGlmeS1zZWxmOiBzdGFydDtcclxuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xyXG4gICAgICAgIGdyaWQtcm93OiAxIC8gMjtcclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxLjVlbTtcclxuICAgICAgICAgICAgYm90dG9tOiAtLjVlbTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDM7XHJcbiAgICAgICAgZ3JpZC1yb3c6IDIgLyAzOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3BhcmEge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zcGFuIHtcclxuICAgICAgICAvL2NvbG9yOiAkYXF1YTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBkYXJrZW4oJGFxdWEsIDE1JSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19xdW90ZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDNlbSAwO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDRlbTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogMS41ZW07XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW4tY29udGVudCAxZnI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNTAlKSBzY2FsZSgxLjQpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTg0MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgICAgICBtYXJnaW46IDIuNWVtIDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICAvL2dyaWQtY29sdW1uLWdhcDogMWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMS41ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3F1b3RlLnZpc2libGUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19xdW90ZSBzcGFuIHtcclxuICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgICAgICBjb2xvcjogJGdyYXktbGlnaHQ7XHJcbiAgICAgICAgZm9udC1zaXplOiA4ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IC41O1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLjJlbSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IC40NTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG5cclxuIiwiLmhlcm9fX3dyYXAtLWZpdmUge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvc3RhZmYuanBnJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogYm90dG9tO1xyXG59XHJcblxyXG5cclxuLnN0YWZmIHtcclxuICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG8gMCBhdXRvO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjQ1cHgpIHtcclxuICAgICAgICBwYWRkaW5nOiA2ZW0gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYWJvdXQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBtYXJnaW46IDZlbSBhdXRvIDhlbSBhdXRvO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgICAgICBtYXJnaW46IDRlbSBhdXRvIDVlbSBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5NSU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19vZmZpY2Utd3JhcCB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogMS41ZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVlbTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAzZW07XHJcbiAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NDVweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMGVtO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgZ3JpZC1nYXA6IDdlbSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW5kaXZpZHVhbCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggMTAyMHB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDg3MHB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMjBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxODBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDY0NXB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAtMTIlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIGxlZnQ6IDEwJTtcclxuICAgICAgICByaWdodDogMTAlO1xyXG4gICAgICAgIHotaW5kZXg6IDM7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICBib3R0b206IC0xNSU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4NzBweCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxLjJlbSAxZW07XHJcbiAgICAgICAgICAgIGJvdHRvbTogLTEyJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDUlO1xyXG4gICAgICAgICAgICByaWdodDogNSU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogLTE0LjUlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjQ1cHgpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgICAgICBib3R0b206IC0xMiU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDEwJTtcclxuICAgICAgICAgICAgcmlnaHQ6IDEwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5OmhvdmVyOjphZnRlciB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5OmhvdmVyICZfX3RpdGxlIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICAgICZfX3N1bW1hcnk6aG92ZXIgJl9fZW1haWwge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5OmhvdmVyICZfX2ljb24ge1xyXG4gICAgICAgIGZpbGw6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnk6OmFmdGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBoZWlnaHQ6IDNweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkcGluay1icnVzaDtcclxuICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGhlaWdodCAzMDBtcyBlYXNlLW91dDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3VtbWFyeS0tYmx1ZTo6YWZ0ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRibHVlLWJydXNoO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5LS1ncmVlbjo6YWZ0ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRncmVlbi1icnVzaDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmFtZSB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2VtYWlsIHtcclxuICAgICAgICBmb250LXNpemU6IDEuMjVlbTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuMTVlbTtcclxuICAgICAgICBjb2xvcjogbGlnaHRlbigkcm95YWxibHVlLCAxNSUpO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogJHJveWFsYmx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDg3MHB4KSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NDVweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMjVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ljb24ge1xyXG4gICAgICAgIHdpZHRoOiAxZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxZW07XHJcbiAgICAgICAgZmlsbDogbGlnaHRlbigkcm95YWxibHVlLCAxNSUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDg3MHB4KSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4wNWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjQ1cHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIC8qKioqKioqIFRFQUNIRVJTICoqKioqKi9cclxuICAgICZfX3RlYWNoZXJzIHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtZ3JpZCB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA0ZW07XHJcbiAgICAgICAgbWFyZ2luLXRvcDogM2VtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWxpc3Qge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtaGRnIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkYXF1YTtcclxuICAgICAgICBoZWlnaHQ6IDkzcHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiA5M3B4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1oZGc6OmJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IC01cHgsIHRyYW5zcGFyZW50IDE0cHgsICNmOGY4ZjggMTZweCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWhkZzo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XHJcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogNDBweCAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAxNXB4LCAjZjhmOGY4IDEycHgsIHRyYW5zcGFyZW50IDEzcHgpXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWJ0bWhkZyB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGFxdWE7XHJcbiAgICAgICAgaGVpZ2h0OiA5M3B4O1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtYnRtaGRnOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XHJcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAtNXB4LCB0cmFuc3BhcmVudCAxNHB4LCAjZjhmOGY4IDE2cHgpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWJ0bWhkZzo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XHJcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogNDBweCAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAxNXB4LCAjZjhmOGY4IDEycHgsIHRyYW5zcGFyZW50IDEzcHgpO1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWl0ZW0ge1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIC41ZW07ICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtaXRlbS0tZmlyc3Qge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwOyAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWl0ZW0tLWxhc3Qge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IGNhbGMoOTNweCArIDFlbSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtbGluayB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbG9yOiAkZ3JheS1kYXJrZXN0O1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWxpbmstLWN1cnJlbnQge1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RlYWNoZXJzLWxpc3RvdXQge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDUwMG1zIGVhc2Utb3V0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1saXN0b3V0LS12aXNpYmxlIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLXRhYmxlLXdyYXAge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDIgLyAzO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy10YWJsZSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLXRhYmxlIHRyOm50aC1vZi10eXBlKG9kZCkge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWRhcmtlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtdGFibGUgdHI6bnRoLW9mLXR5cGUoZXZlbikge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWRhcms7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLXRhYmxlIHRoIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLXRhYmxlIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIC41ZW0gLjVlbSAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qJl9fdGVhY2hlcnMtdGFibGUgdGQgYSB7XHJcbiAgICAgICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciAmX190ZWFjaGVycy1pY29uIHtcclxuICAgICAgICAgICAgY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH0qL1xyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1pY29uIHtcclxuICAgICAgICB3aWR0aDogMS41ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjVlbTtcclxuICAgICAgICBmaWxsOiAjZmZmO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGZpbGwgMzUwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGZpbGw6ICRhcXVhO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIi8qIE1BWSBORUVEIFRPIEFERCBPVkVSRkxPVy1YOiBISURERU4gT04gVEFCTEUgT1IgVEFCTEUgV1JBUFBFUiBFTEVNRU5UUyBTSU5DRSBUSEVZIEFSRSBPRkZTQ1JFRU4gSE9SSVpPTlRBTExZIEFORCBUSEUgQU5JTUFURUQgSU4gKi9cclxuXHJcblxyXG4uaGVyb19fd3JhcC0tdGhyZWUge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvc2Nob29sLXJvb20uanBnJyk7XHJcbn1cclxuXHJcblxyXG4ucHJvZ3JhbSB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwO1xyXG4gICAgXHJcbiAgICAmX19zcGxpdC0tb25lIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDJmcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLC4wNSk7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMmVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMThlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NwbGl0LWNlbGwtLW9uZSB7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICAgICAgICBncmlkLXJvdzogMiAvIDM7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgfSAgICAgICBcclxuXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RyYW5zbGF0ZSB7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgICBib3JkZXItdG9wOiA1cHggc29saWQgJGFxdWE7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RyYW5zbGF0ZS0tb25lIHtcclxuICAgICAgICB3aWR0aDogMTUwJTtcclxuICAgICAgICBsZWZ0OiAwOyBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgbGVmdDogMTAlO1xyXG4gICAgICAgIH0gIFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICBsZWZ0OiA1JTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC41ZW07XHJcbiAgICAgICAgfSBcclxuXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3BhcmFhIHtcclxuICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAmX19zcGxpdC1jZWxsLS10d28ge1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAyIC8gMztcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICAgICAgICBncmlkLXJvdzogMSAvIDI7XHJcbiAgICAgICAgfSAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIC8qIHRoaXMgaXMgbmVlZGVkIHRvIGdldCBpdCB0byBleHBhbmQgd2lkdGggdG8gdGhlIHJpZ2h0ICovXHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIFxyXG4gICAgJl9fc3BsaXQtLXR3byB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAxZnI7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuMDUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIC8qIGV4dHJhIHRvcCBtYXJnaW4gYXMgdGhlcmUgbG9va3MgbGlrZSBtYXJnaW4gY29sbGFwc2luZyAqL1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxNmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyN2VtO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyOWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NwbGl0LWNlbGwtLXRocmVlIHtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIGdyaWQtcm93OiAxIC8gMjtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgICYgaW1nIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3BsaXQtY2VsbC0tZm91ciB7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgICAgIGdyaWQtcm93OiAyIC8gMztcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB9ICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190cmFuc2xhdGUtLXR3byB7XHJcbiAgICAgICAgLyogd2lkZXIgc2luY2UgaXQgaGFzIG1vcmUgY29udGVudCAqL1xyXG4gICAgICAgIHdpZHRoOiAxNTAlO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICBsZWZ0OiAxMCU7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNTAwcHgpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICAgICAgbGVmdDogNSU7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvKioqIHVzaW5nIHRvcCBET0VTIE5PVCBXT1JLIGhlcmUgICoqKi9cclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zMCUpO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgXHJcbiAgICAmX193cmFwIHsgICAgIFxyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDJlbTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBtYXJnaW46IDhlbSBhdXRvIDZlbSBhdXRvO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogLjVlbTtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAuNWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0IHtcclxuICAgICAgICBtYXJnaW46IDAgYXV0byAzZW0gYXV0bztcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2VyLTExMjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0LWZsZXgge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA4ZW07XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfSBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3QtZmxleDpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3QtZmxleC0tcmV2ZXJzZSB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcGFyYS13cmFwIHtcclxuICAgICAgICBmbGV4OiAxO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19wYXJhIHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbSAxLjVlbSAxZW0gMWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAxZW0gMmVtIDFlbTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3BhcmEtLXJldmVyc2Uge1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbSAxZW0gMWVtIDEuNWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAxZW0gMmVtIDFlbTtcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBkYXJrZW4oJGFxdWEsIDE1JSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zbWFsbCB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUtd3JhcCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFxdWE7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDJlbSAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogLTEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMTJweDtcclxuICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggLTVweCwgdHJhbnNwYXJlbnQgMTRweCwgJGFxdWEgMTZweCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHRvcDogLTEycHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogLTEwMCU7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMTJweDtcclxuICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogNDBweCAyMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggMTVweCwgJGFxdWEgMTJweCwgdHJhbnNwYXJlbnQgMTNweCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHRvcDogLTEycHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLyoqKiByb3RhdGlvbiBpcyA5MGRlZyBub3QgLTkwIGFuZCBtYXJnaW4gaXMgLTIyLCBub3QgLTEyICoqKi9cclxuICAgICZfX3RhYmxlLXdyYXAtLXJldmVyc2Uge1xyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMjJweDtcclxuICAgICAgICAgICAgcmlnaHQ6IC0xMDAlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMTJweDtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvKiBORUVEIFRPIFVORE8gVEhFIE5FR0FUSVZFIE1BUkdJTj8/ICovXHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC0yMnB4O1xyXG4gICAgICAgICAgICByaWdodDogLTEwMCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0xMnB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8qIE5FRUQgVE8gVU5ETyBUSEUgTkVHQVRJVkUgTUFSR0lOPz8gKi9cclxuICAgICAgICAgICAgfSBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlIHtcclxuICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgY3ViaWMtYmV6aWVyKC43NSwgLTAuNSwgLjI1LCAxLjMyKTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjAwJSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUtLXJldmVyc2Uge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjAwJSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlLS12aXNpYmxlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUgdHI6bnRoLW9mLXR5cGUoMW4pIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUgdHI6bnRoLW9mLXR5cGUoMm4pIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC4yKVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190YWJsZS1yb3ctLW9uZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHBpbmstYnJ1c2ggIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUtcm93LS10d28ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlLWJydXNoICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlLXJvdy0tdGhyZWUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlbi1icnVzaCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190YWJsZSB0aCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC43NWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUgdGQge1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC43NWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBcclxufVxyXG5cclxuIiwiXHJcbi5oZXJvX193cmFwLS1mb3VyIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2NoYWxrYm9hcmQtLWJsdWUtaGlnaHJlcy5qcGcnKTtcclxufVxyXG5cclxuXHJcbi5jdXJyaWN1bHVtIHtcclxuICAgIHBhZGRpbmc6IDEwZW0gMCA2ZW0gMDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tc21hbGwtNzAwKSB7XHJcbiAgICAgICAgcGFkZGluZzogOGVtIDAgM2VtIDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hkZyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogN2VtO1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgICAgIG1hcmdpbjogNmVtIGF1dG8gMCBhdXRvO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0LXdyYXAge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDhlbTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcclxuICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG8gOGVtIGF1dG87XHJcbiAgICAgICAgICAgIGJvcmRlcjogMDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAycHggMnB4IHJnYmEoMCwwLDAsLjMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbC03MDApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC02MTUpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMnB4IDNweCByZ2JhKDAsMCwwLC40KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmOm5vdCgubm8tLWxpbmUpOjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtNGVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX3NlY3QtLXJldmVyc2Uge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIG1heC13aWR0aDogNjAlO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGxhcmdlci0xMTIwKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvKiA/Pz8/Pz8/ICovXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41NWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLyogVGhpcyBpcyBuZWNlc3NhcnkgdG8gbWFrZSB0aGUgYm90dG9tIHJhdGlvIHNlY3Rpb24gZmlsbCB0aGUgZW50aXJlIGhlaWdodCBvZiBpdHMgY29udGVudHMgKi9cclxuICAgICZfX21haW4ge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHBpbmstYnJ1c2g7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAyZW0gMmVtIDJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtLWJsdWUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlLWJydXNoO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtLWdyZWVuIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW4tYnJ1c2g7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RvcC0tb3JhbmdlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkb3JhbmdlLWJydXNoO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFkaW5nIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgY3Vyc2l2ZTtcclxuICAgICAgICBmb250LXNpemU6IDEuNmVtO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjZlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40NWVtO1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS40NWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhcnRzIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYXJ0cyBkaXYge1xyXG4gICAgICAgIHotaW5kZXg6IDk5O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFydHMgZGl2ICsgZGl2IHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogLjFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhcnRzOjpiZWZvcmUge1xyXG4gICAgICAgIGZsZXg6IDAgMCAxMDAlO1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA0NCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFydHMtaWNvbiB7XHJcbiAgICAgICAgaGVpZ2h0OiAxOHB4O1xyXG4gICAgICAgIHdpZHRoOiAxOHB4O1xyXG4gICAgICAgIGZpbGw6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2luZm8ge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRsYXJnZXItMTEyMCkge1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4zNTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjA1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00MDApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgY3VycmVudENvbG9yO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2UtaW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZGRkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcHJpY2Uge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcclxuICAgICAgICBwYWRkaW5nOiAuNzVlbSAxLjVlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA5OWVtO1xyXG4gICAgICAgIG1hcmdpbjogMmVtIGF1dG8gMWVtIGF1dG87XHJcbiAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAzcHggcmdiYSgwLDAsMCwuNCk7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogXHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQsXHJcbiAgICAgICAgICAgIGNvbG9yIDMwMG1zIGVhc2Utb3V0LFxyXG4gICAgICAgICAgICB0cmFuc2Zvcm0gMTUwbXMgbGluZWFyO1xyXG4gICAgICAgIHdpZHRoOiAxMGVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAyZW0gYXV0byAuNWVtIGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMmVtIGF1dG8gMWVtIGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICAgICAgd2lkdGg6IDhlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkcGluay1icnVzaDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjphY3RpdmUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIDJweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19wcmljZS0tYmx1ZSB7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmx1ZS1icnVzaDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3ByaWNlLS1ncmVlbiB7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkZ3JlZW4tYnJ1c2g7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19wcmljZS0tb3JhbmdlIHtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2UtYnJ1c2g7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19ub3RlIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC41ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2JvdHRvbSB7XHJcbiAgICAgICAgY29sb3I6ICRncmF5LWRhcms7XHJcbiAgICAgICAgcGFkZGluZzogMS43NWVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qIFRoaXMgaXMgbmVjZXNzYXJ5IHRvIG1ha2UgdGhlIGJvdHRvbSByYXRpbyBzZWN0aW9uIGZpbGwgdGhlIGVudGlyZSBoZWlnaHQgb2YgaXRzIGNvbnRlbnRzICovXHJcbiAgICAgICAgZmxleDogMTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGxhcmdlci0xMTIwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmcge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBmb250LXNpemU6IDEuNzVlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2VyLTExMjApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjU1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00MDApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3JhdGlvIHtcclxuICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19yYXRpbyB7XHJcbiAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7IFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKiBVc2luZyB0cmFuc2xhdGUgc2luY2UgcGFkZGluZyBtYWtlcyB0aGUgYm90dG9tIHNlY3QgZ28gaGlnaGVyIGFuZCB0aHVzIHRoZSBlbnRpcmUgY3VycmljdWx1bV9fc2VjdCBpcyBnb2luZyBoaWdoZXIgKi9cclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgLyp0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLjI1ZW0pOyovXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbnVtYmVyIHtcclxuICAgICAgICBmb250LXNpemU6IDJlbTtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgLyp0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLS4zNWVtKTsqL1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2VyLTExMjApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjdlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG4iLCJcclxuXHJcbi5oZXJvX193cmFwLTIuY2FsZW5kYXIge1xyXG4gICAgLy9iYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9oZXJvMi5qcGcnKTtcclxuICAgIGhlaWdodDogMHZoO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuLmNhbGVuZGFyLS13cmFwIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2Nsb3VkLWJnLnBuZycpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaHNsKDE4NSwgMTAwJSwgMzAlKTtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XHJcbiAgICBwYWRkaW5nLXRvcDogMTBlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMGVtO1xyXG59XHJcblxyXG5cclxuLmZvb3Rlci5jYWwge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLDAsMCwuNSksIHJnYmEoMCwwLDAsLjUpKSwgdXJsKCcuLi9pbWcvZm9vdGVyLS1iZy5wbmcnKTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJcclxuLmhlcm9fX3dyYXAtLXNldmVuIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2Jvb2tzLmpwZycpO1xyXG59XHJcblxyXG5cclxuLmZvcm1zIHtcclxuICAgIFxyXG4gICAgJl9fZ3JpZCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX193cmFwIHtcclxuICAgICAgICBjb2xvcjogJGdyYXktZGFya2VzdDsgXHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1pbi1jb250ZW50IDFmcjtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICBncmlkLWNvbHVtbi1nYXA6IDFlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyLjVlbTtcclxuICAgIH0gIFxyXG4gICAgXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgZ3JpZC1yb3c6IDEgLyAzO1xyXG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogJGdyYXk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgICBncmlkLWNvbHVtbjogMiAvIDM7XHJcbiAgICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgYWxpZ24tc2VsZjogZW5kO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4xZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2luZm8ge1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAyIC8gMztcclxuICAgICAgICBncmlkLXJvdzogMiAvIDM7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIGFsaWduLXNlbGY6IHN0YXJ0O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuIiwiLypcclxudGVtcCBmaXggdG8ga3dlcyByZW1vdmluZyB0aGUgY2xhc3MgbmFtZSBmcm9tIHRoZSBmb3JtXHJcbi5zdWJzY3JpYmUgZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyNTBweCwgMWZyKSk7XHJcbiAgICBncmlkLWdhcDogM2VtIDEuNWVtO1xyXG59XHJcblxyXG4qL1xyXG5cclxuXHJcblxyXG4vKlxyXG5LV0VTIFdSQVBTIEVBQ0ggSU5QVVQgRUxFTUVOVCBJTiBBIFNQQU4gLmt3LWZpZWxkLXdyYXBwZXIgc28gdGhlIDEwMCUgd2lkdGggbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhpcyBzcGFuIGJ1dCBJIHN0aWxsIG1pZ2h0IG5lZWQgdG8gYWNjb3VudCBmb3IgdGhlIHN1Ym1pdCBidXR0b24gYW55IHRpbWUgaXMgaXMgYSBidXR0b24gZWxlbWVudCBhbmQgTk9UIGEgaW5wdXQgdHlwZT1zdWJtaXQgZWxlbWVudFxyXG4qL1xyXG5cclxuLy8ua3ctZmllbGQtd3JhcHBlciB7XHJcbi8vICAgIHdpZHRoOiAxMDAlO1xyXG4vL31cclxuXHJcbi8vIGtlZXBzIHRoZSBlcnJvciBtc2dzIGZyb20gbWVzc2luZyB1cCB0aGUgbGF5b3V0XHJcbi8vLmt3ZXMtZmllbGQtd3JhcHBlciAuaGVscCB7XHJcbi8vICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxyXG4vL31cclxuXHJcbiAvLyZfX2ZpZWxkLXByZWZpeGVkIHtcclxuICAgICAgICAvL2Rpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgXHJcbi8vIG1pZ2h0IGp1c3QgYmUgZmllbGQtcHJlZml4ZWRcclxuXHJcblxyXG4vKioqIEFERCBUSElTIFBPU0lUSU9OIFJFTEFUSVZFIE1BWUJFISEhISAqKioqKi9cclxuICAgICAgICAvLyB0aGlzIGlzIG5lZWQgdG8ga2VlcCB0aGUgZXJyb3IgbXNncyBmcm9tIG1lc3NpbmcgdXAgdGhlIGxheW91dFxyXG4gICAgICAgIC8vcG9zaXRpb246IHJlbGF0aXZlOyBcclxuICAgLy8gfVxyXG5cclxuXHJcbi8vIGhlaWdodCBmb3IgdGV4dGFyZWEgbmVlZHMgdG8gYmUgb24gaXRzIHdyYXBwZXJcclxuIC8vICAgJl9fZmllbGQtcHJlZml4ZWQgLmt3LWZpZWxkLXdyYXBwZXItNiB7XHJcbiAvLyAgICAgICBoZWlnaHQ6IDZlbTtcclxuLy8gIH1cclxuXHJcblxyXG5cclxuLyoqKioqIEtXRVMgU1RZTEVTIFNUQVJUICoqKiovXHJcbi5rdy1maWVsZC13cmFwcGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ua3dlcy1maWVsZC13cmFwcGVyIC5oZWxwIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxyXG59XHJcblxyXG5cclxuLyogVEVYVEFSRUEgKi9cclxuLmt3LWZpZWxkLXdyYXBwZXItNiB7XHJcbiAgICBoZWlnaHQ6IDZlbSAhaW1wb3J0YW50O1xyXG59XHJcbi8qIFRoaXMgbWF0Y2hlcyBwZW5jaWwgaWNvbiB3cmFwIHRvIGJlIHRoZSBzYW1lIGhlaWdodCBhdCB0aGUgdGV4dGFyZWEgZmllbGQgLS13aHkgOCBhbmQgbm90IDY/Pz8/Pz8gKi9cclxuI2FwcGxpY2FudC1wZW5jaWwtcHJlZml4IHtcclxuICAgIGhlaWdodDogOGVtO1xyXG59XHJcbi8qKioqKiBLV0VTIFNUWUxFUyBFTkQgKioqKi9cclxuXHJcblxyXG5cclxuLmhlcm9fX3dyYXAtLWVpZ2h0IHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2hlcm8tY29udGFjdC5qcGcnKTtcclxufVxyXG5cclxuXHJcbi5mb3JtLXdyYXBwZXIge1xyXG4gICAgbWFyZ2luOiA0ZW0gYXV0byA0ZW0gYXV0bztcclxuICAgIC8vcGFkZGluZzogMS41ZW0gMWVtO1xyXG4gICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS04NDApIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi8vQ09OVEFDVCBTRUNUXHJcblxyXG4uY29udGFjdCB7XHJcbiAgICBwYWRkaW5nOiA4ZW0gMWVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgcGFkZGluZzogNWVtIDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jb250YWN0cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHJveWFsYmx1ZSwgMTAlKTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMS4yNWVtO1xyXG4gICAgZmxleDogMTtcclxufVxyXG5cclxuLmNvbnRhY3Qtd3JhcCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGhlaWdodDogMTAwJTsgLy93aHkgaXMgdGhpcyBuZWVkZWQ/XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTg0MCkge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi53cmFwcHktLW9uZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS04NDApIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuLmNvbnRhY3QtaGRnIHtcclxuICAgIG1hcmdpbi1ib3R0b206IC4zZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbn1cclxuXHJcbi5jb250YWN0LWljb24ge1xyXG4gICAgZmlsbDogJGFxdWE7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAuMWVtO1xyXG4gICAgd2lkdGg6IDEuMmVtO1xyXG4gICAgaGVpZ2h0OiAxLjJlbTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSguMmVtKTtcclxufVxyXG5cclxuLmNvbnRhY3QtaGRnLXNwYW4ge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogLjkxNWVtO1xyXG59XHJcblxyXG4uY29udGFjdC1pdGVtIHtcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4OTBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmNvbnRhY3QtaXRlbSArIC5jb250YWN0LWl0ZW0ge1xyXG4gICAgbWFyZ2luLXRvcDogLjNlbTtcclxufVxyXG5cclxuLmNvbnRhY3QtaXRlbS5ob3VycyB7XHJcbiAgICBjb2xvcjogJGFxdWE7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjNlbTtcclxufVxyXG5cclxuLmNvbnRhY3QtaXRlbS5ob3Vyczpub3QoOmxhc3Qtb2YtdHlwZSkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjc1ZW07XHJcbn1cclxuXHJcbi8vTUFJTiBGT1JNXHJcbi5mb3JtIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDAsMCwwLC40KSwgcmdiYSgwLDAsMCwuNCkpLCB1cmwoJy4uL2ltZy9jaGlsZC13cml0aW5nLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIHBhZGRpbmc6IDRlbSAxLjVlbTtcclxuICAgIGZsZXg6IDQ7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICBwYWRkaW5nOiAyZW0gLjc1ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgIGdyaWQtZ2FwOiAxZW07XHJcbiAgICBwYWRkaW5nLXRvcDogM2VtO1xyXG59XHJcblxyXG4uZnVsbC13aWR0aDpsYXN0LW9mLXR5cGUge1xyXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5maWVsZC10ZXh0IGlucHV0LFxyXG4uZmllbGQtdGV4dCB0ZXh0YXJlYSxcclxuLnN1Ym1pdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAgLjI1ZW0gLjI1ZW0gMDtcclxuICAgIHBhZGRpbmc6IC4zNzVlbTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICAgIGNvbG9yOiBpbmhlcml0OyAgXHJcbn1cclxuXHJcbi5maWVsZC10ZXh0IGlucHV0IHtcclxuICAgIGhlaWdodDogMi4xMjVlbTsgIFxyXG59XHJcblxyXG4uZmllbGQtdGV4dCBpbnB1dDpmb2N1cyxcclxuLmZpZWxkLXRleHQgdGV4dGFyZWE6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTsgICAgXHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgLjVlbSByZ2JhKDkzLCAxNjIsIDI0OCwgMC41KTsgIFxyXG59XHJcblxyXG5mb3JtIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5maWVsZC1wcmVmaXhlZCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlIC8qIEtXRVMgLSBNQVkgTk9UIE5FRUQgVEVTVCBJVCAqKi9cclxufVxyXG5cclxuLmZpZWxkLXByZWZpeCB7XHJcbiAgICBmbGV4OiAwIDAgMi4yZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yaWdodDogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IC4yNWVtIDAgMCAuMjVlbTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IC4zNzVlbTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRyb3lhbGJsdWUsIDEwJSk7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0IDEwMG1zO1xyXG59XHJcblxyXG4uZmllbGQtcHJlZml4LmJhY2tncm91bmQtY29sb3Ige1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcclxufVxyXG5cclxuLmZvcm0taWNvbiB7XHJcbiAgICB3aWR0aDogMWVtO1xyXG4gICAgaGVpZ2h0OiAxZW07XHJcbiAgICBmaWxsOiAjZmZmO1xyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcclxufVxyXG5cclxuZm9ybSBwIHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgaGVpZ2h0OiA4ZW07XHJcbiAgICByZXNpemU6IG5vbmU7XHJcbn1cclxuXHJcbi8qIGNoYW5nZWQgZnJvbSAxIC8gMyBiZWNhdXNlIG90aGVyd2lzZSB0aGVyZSB3aWxsIEFMV0FZUyBiZSB0d28gY29sdW1ucyovXHJcbi5mdWxsLXdpZHRoIHtcclxuICAgIGdyaWQtY29sdW1uOiAxIC8gLTE7XHJcbn1cclxuXHJcbkBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICBcclxuICAgIC5maWVsZC10ZXh0IHtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIC0xO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG59XHJcblxyXG5cclxuXHJcbi5mdWxsLXdpZHRoOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcclxufVxyXG5cclxuLnN1Ym1pdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAyZW07XHJcbiAgICBwYWRkaW5nOiAuNmVtIDEuMmVtO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoJHJveWFsYmx1ZSwgZGFya2VuKCRyb3lhbGJsdWUsIDglKSwpO1xyXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLDAsMCwuNCk7XHJcbn1cclxuXHJcbi5zdWJtaXQ6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uc3VibWl0OmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbi5zdWJtaXQ6YWN0aXZlIHtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMXB4IHJnYmEoMCwwLDAsLjQpO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMXB4KTtcclxufVxyXG5cclxuLnN1Ym1pdCBzcGFuIHtcclxuICAgIG1hcmdpbjogMCAuM2VtIC4yZW0gMDtcclxufVxyXG5cclxuLnN1Ym1pdCAuZm9ybS1pY29uIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xyXG59XHJcblxyXG5cclxuXHJcbi8qIFNldCB0aGUgc2l6ZSBvZiB0aGUgZGl2IGVsZW1lbnQgdGhhdCBjb250YWlucyB0aGUgbWFwICovXHJcbiNtYXAge1xyXG4gIGhlaWdodDogNDAwcHg7ICBcclxuICB3aWR0aDogMTAwJTsgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdfQ== */
