:root {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  scroll-behavior: smooth;
}

*, ::before, ::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

body {
  font-size: 100%;
  font-family: 'Lato', sans-serif;
  color: #212121;
  overflow-x: hidden;
}

@media (max-width: 70.625em) {
  body {
    font-size: .95em;
  }
}

section {
  padding: 10em 2em;
}

@media (max-width: 47.5em) {
  section {
    padding: 8em 1em;
  }
}

@media (max-width: 25em) {
  section {
    padding: 6em .5em;
  }
}

.pre-heading {
  text-transform: uppercase;
  text-align: center;
  color: #4f4f4f;
  margin-bottom: .2em;
}

@media (max-width: 57.5em) {
  .pre-heading {
    font-size: .95em;
    margin-bottom: .15em;
  }
}

@media (max-width: 23.0625em) {
  .pre-heading {
    font-size: .9em;
  }
}

.sect-heading {
  font-size: 2.5em;
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: .2em;
  color: #333333;
}

@media (max-width: 57.5em) {
  .sect-heading {
    font-size: 2.3em;
    letter-spacing: 1px;
  }
}

@media (max-width: 47.5em) {
  .sect-heading {
    font-size: 2.1em;
    letter-spacing: normal;
  }
}

@media (max-width: 35em) {
  .sect-heading {
    font-size: 1.9em;
  }
}

@media (max-width: 28.125em) {
  .sect-heading {
    font-size: 1.7em;
  }
}

@media (max-width: 23.0625em) {
  .sect-heading {
    font-size: 1.5em;
  }
}

.sect-heading-img {
  height: 13px;
  width: 142px;
  background-image: url("../img/heading-img.svg");
  margin: 0 auto 3em auto;
  opacity: .5;
}

.sect-heading-img--program,
.sect-heading-img--curriculum,
.sect-heading-img--contactus {
  margin-bottom: 10em;
}

@media (max-width: 47.5em) {
  .sect-heading-img--program,
  .sect-heading-img--curriculum,
  .sect-heading-img--contactus {
    margin-bottom: 5em;
  }
}

.handprints {
  height: 140px;
  background-image: url("../img/handprints-heart.jpg");
  background-position: left bottom;
  background-size: contain;
  background-repeat: round;
}

@media (max-width: 35em) {
  .handprints {
    height: 100px;
  }
}

/** IE11 cannot have a text node be a grid cell **/
.ie {
  display: block;
  -ms-grid-column: 2;
  /** fallback for grid-gap **/
  margin: .5em;
  margin-left: .5em;
  /** reset margin for supported browsers **/
}

@supports (display: grid) {
  .ie {
    margin: 0;
  }
}

.line__subhdg {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr max-content 1fr;
  grid-template-columns: 1fr auto 1fr;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  grid-column-gap: .5em;
  max-width: 1280px;
  text-transform: uppercase;
  color: #4f4f4f;
  font-size: 1.65em;
  margin: 0 auto 1em auto;
  letter-spacing: .02em;
  word-spacing: .05em;
}

@media (max-width: 28.125em) {
  .line__subhdg {
    font-size: 1.5em;
  }
}

.line__subhdg::before {
  /* generated content works with grid but it must be set as display: block (inline-block might be ok too)*/
  display: block;
  -ms-grid-column: 1;
  /** this must be used as -ms-flex-align: center on the grid parent does not work **/
  -ms-grid-row-align: center;
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, right top, left top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to left, #0188cb, transparent);
  border-radius: .625em;
}

.line__subhdg::after {
  /* generated content works with grid but it must be set as display: block (inline-block might be ok too)*/
  display: block;
  -ms-grid-column: 3;
  /** this must be used as -ms-flex-align: center on the grid parent does not work **/
  -ms-grid-row-align: center;
  content: "";
  height: .3125em;
  background-image: -webkit-gradient(linear, left top, right top, from(#0188cb), to(transparent));
  background-image: linear-gradient(to right, #0188cb, transparent);
  border-radius: .625em;
}

.header {
  /* phone icon text  */
}

.header__top-sect {
  border-top: 5px solid #333333;
}

.header__top-sect-container {
  max-width: 1280px;
  margin: 0 auto;
}

.header__top-bar {
  background: url("../img/cner-536.png") no-repeat top center;
  height: 39px;
  width: 536px;
  position: relative;
  right: -55vw;
}

@media (max-width: 80em) {
  .header__top-bar {
    right: -50vw;
  }
}

@media (max-width: 70.625em) {
  .header__top-bar {
    right: -45vw;
  }
}

@media (max-width: 63.75em) {
  .header__top-bar {
    right: -40vw;
  }
}

@media (max-width: 57.5em) {
  .header__top-bar {
    right: -35vw;
  }
}

@media (max-width: 52.5em) {
  .header__top-bar {
    background: url("../img/cner-301.png") no-repeat top center;
    right: -57vw;
    width: 301px;
  }
}

@media (max-width: 45em) {
  .header__top-bar {
    right: -47vw;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar {
    background: none;
    width: 100%;
    right: 0;
  }
}

.header__top-bar-contact {
  position: absolute;
  right: 4em;
  top: 50%;
  -webkit-transform: translateY(-50%) translateY(-5px);
          transform: translateY(-50%) translateY(-5px);
  -webkit-transform: translateY(calc(-50% - 5px));
          transform: translateY(calc(-50% - 5px));
  color: #fff;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 1em 0;
}

@media (max-width: 52.5em) {
  .header__top-bar-contact {
    right: 6em;
  }
}

@media (max-width: 38.4375em) {
  .header__top-bar-contact {
    left: .5em;
    z-index: 5565;
  }
}

.header__top-bar-item + .header__top-bar-item {
  margin-left: 1.5em;
}

@media (max-width: 52.5em) {
  .header__top-bar-item:last-of-type {
    display: none;
  }
}

.header__top-bar-item:first-of-type {
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
}

.header__top-bar-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.header__top-bar-icon {
  fill: #0188cb;
  margin-right: .3em;
  width: 1.2em;
  height: 1.2em;
}

.header__phone-icon {
  font-size: .9em;
}

@media (max-width: 38.4375em) {
  .header__phone-icon {
    font-size: .8em;
  }
}

.header__top-bar-link {
  color: #fff;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.header__top-bar-link:hover {
  color: #d9d9d9;
}

@media (max-width: 38.4375em) {
  .header__top-bar-link {
    color: #333;
  }
  .header__top-bar-link:hover {
    color: gray;
  }
}

.header__main-sect {
  max-width: 1280px;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 0 2em;
}

@media (max-width: 63.75em) {
  .header__main-sect {
    padding: 0 1em;
  }
}

.header__logo {
  -webkit-transform: translateY(-37px);
          transform: translateY(-37px);
  margin-bottom: -30px;
}

@media (max-width: 38.4375em) {
  .header__logo {
    margin-left: auto;
    margin-right: auto;
  }
}

.header__logo-image {
  width: 15.625em;
  height: auto;
  display: block;
}

.header__nav-list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.header__nav-item {
  padding: .5em 0;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

.header__nav-item + .header__nav-item {
  margin-left: 1em;
}

.header__nav-icon {
  fill: #333333;
  width: 1em;
  height: 1em;
}

.header__nav-item:hover {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
}

.header__nav-item:hover .header__nav-link {
  color: #0188cb;
}

.header__nav-item.clicked-parent {
  -webkit-box-shadow: inset 0 -0.1875em 0 #0188cb;
          box-shadow: inset 0 -0.1875em 0 #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link.clicked {
  color: #0188cb;
  -webkit-transition: none;
  transition: none;
}

.header__nav-link {
  font-size: .95em;
  letter-spacing: .05em;
  color: #333333;
  text-transform: uppercase;
  -webkit-transition: all 300ms ease-in;
  transition: all 300ms ease-in;
}

@media (max-width: 63.75em) {
  .header__nav-link {
    font-size: .85em;
  }
}

.header.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.8);
  -webkit-box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  z-index: 1001;
}

.header.sticky .header__top-sect {
  display: none;
}

.header.sticky .header__logo-image {
  width: 13.5em;
  height: auto;
  -webkit-transition: all 600ms ease-out;
  transition: all 600ms ease-out;
}

.header.sticky .header__logo {
  -webkit-transform: none;
          transform: none;
  margin-bottom: 0;
}

.header.sticky .header__nav-link {
  color: #fff;
}

.header.sticky .header__nav-item.has-submenu::after {
  color: #fff;
}

.header.sticky .navigation__button {
  top: 20px;
}

.header.sticky .navigation__background {
  top: 25px;
}

.navigation__checkbox {
  display: none;
}

@media (max-width: 57.5em) {
  .navigation__button {
    background-color: #444;
    height: 50px;
    width: 50px;
    border-radius: 50%;
    position: fixed;
    top: 40px;
    right: 15px;
    z-index: 2000;
    -webkit-box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
            box-shadow: 0 1.5em 2em rgba(0, 0, 0, 0.1);
    text-align: center;
    cursor: pointer;
  }
}

@media (max-width: 57.5em) and (max-width: 38.4375em) {
  .navigation__button {
    top: 35px;
  }
}

@media (max-width: 57.5em) and (max-width: 23.0625em) {
  .navigation__button {
    right: 5px;
  }
}

@media (max-width: 57.5em) {
  .navigation__background {
    height: 40px;
    width: 40px;
    border-radius: 50%;
    position: fixed;
    top: 45px;
    right: 20px;
    background-image: radial-gradient(rgba(27, 71, 152, 0.9), rgba(1, 136, 203, 0.9));
    z-index: 1000;
    -webkit-transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
    transition: transform 800ms cubic-bezier(0.86, 0, 0.07, 1), -webkit-transform 800ms cubic-bezier(0.86, 0, 0.07, 1);
  }
}

@media (max-width: 57.5em) and (max-width: 38.4375em) {
  .navigation__background {
    top: 40px;
  }
}

@media (max-width: 57.5em) and (max-width: 23.0625em) {
  .navigation__background {
    right: 10px;
  }
}

@media (max-width: 57.5em) {
  .header__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;
    opacity: 0;
    /* use transform instead for a smoother animation and also more performant  */
    -webkit-transform: translateX(-800px);
            transform: translateX(-800px);
    /* put the width 100% here  */
    width: 100%;
  }
  .header__nav-list {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    text-align: center;
    display: block;
  }
  .header__nav-item.clicked-parent {
    -webkit-box-shadow: none;
            box-shadow: none;
    background-color: #333;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item {
    margin-bottom: .5em;
    margin-top: .5em;
    margin-left: 0 !important;
    padding: .75em 1em;
    background-color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-item:hover {
    -webkit-transform: translateX(0.75em);
            transform: translateX(0.75em);
    background-color: #333;
  }
  .header__nav-item:hover {
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  .header__nav-link.clicked {
    color: #fff;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .header__nav-link {
    color: #1b4798;
    -webkit-transition: all 300ms ease-out;
    transition: all 300ms ease-out;
  }
  .navigation__checkbox:checked ~ .navigation__background {
    -webkit-transform: scale(70);
            transform: scale(70);
  }
  .navigation__checkbox:checked ~ .header__nav {
    opacity: 1;
    -webkit-transform: translateX(0);
            transform: translateX(0);
    -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-link {
    color: #1b4798;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .navigation__checkbox:checked ~ .header__nav .header__nav-link.clicked {
    color: #fff;
  }
  .header.sticky .navigation__checkbox:checked ~ .header__nav .header__nav-item:hover .header__nav-link {
    color: #fff;
  }
  .navigation__icon {
    position: relative;
    margin-top: 1.55em;
  }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 1.6em;
    height: 2px;
    background-color: #fff;
    display: inline-block;
  }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    -webkit-transition: all 400ms;
    transition: all 400ms;
    left: 0;
  }
  .navigation__icon::before {
    -webkit-transform: translateY(-0.45em);
            transform: translateY(-0.45em);
  }
  .navigation__icon::after {
    -webkit-transform: translateY(0.45em);
            transform: translateY(0.45em);
  }
  .navigation__button:hover .navigation__icon::before {
    -webkit-transform: translateY(-0.55em);
            transform: translateY(-0.55em);
  }
  .navigation__button:hover .navigation__icon::after {
    -webkit-transform: translateY(0.55em);
            transform: translateY(0.55em);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon {
    background-color: transparent;
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::before {
    -webkit-transform: translateY(0) rotate(135deg);
            transform: translateY(0) rotate(135deg);
  }
  .navigation__checkbox:checked + .navigation__button .navigation__icon::after {
    -webkit-transform: translateY(0) rotate(-135deg);
            transform: translateY(0) rotate(-135deg);
  }
}

@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .header__nav-link {
    font-size: .8em;
  }
  .header__nav-item {
    padding: .5em .75em;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .header__nav-link {
    font-size: .82em;
  }
  .header__nav-item {
    padding: .5em .75em;
  }
}

.hero--overflow {
  overflow: hidden;
}

.hero {
  position: relative;
}

.hero__wrap {
  height: 75vh;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/hero-paid.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/hero-paid.jpg");
  background-size: cover;
  background-attachment: fixed;
  color: rgba(255, 255, 255, 0.8);
  position: relative;
  background-repeat: no-repeat;
  background-position: center center;
}

@media (max-width: 31.25em) {
  .hero__wrap {
    height: 55vh;
    background-attachment: scroll;
    background-position: 20% center;
  }
}

.hero__center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  /*** This was the fix to keep the subheading from text wrapping ***/
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
}

.hero__heading {
  font-weight: 300;
  font-size: 5.9em;
  letter-spacing: 2px;
  line-height: 1;
  visibility: hidden;
}

@media (max-width: 48.75em) {
  .hero__heading {
    font-size: 11.6vw;
  }
}

.hero__subheading {
  font-size: 3.3em;
  visibility: hidden;
}

@media (max-width: 48.75em) {
  .hero__subheading {
    font-size: 6.8vw;
  }
}

.hero__subheading--span {
  color: #019ce9;
}

.hero__span {
  font-weight: 300;
  font-size: .9em;
}

/******* iPhones landscape *******/
@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media only screen and (min-device-width: 414px) and (max-device-width: 736px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 812px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

/******* Galaxy Phones landscape *******/
@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

/******* Pixel Phones landscape *******/
@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    height: 65vh;
    background-attachment: scroll;
  }
}

.brush {
  background-image: url("../img/brush-hero-btm.png");
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  position: absolute;
  height: 63px;
}

.btn:link, .btn:visited {
  font-size: .8em;
  text-transform: uppercase;
  display: inline-block;
  color: #fff;
  background-color: #0188cb;
  padding: 1em 2em;
  border-radius: 99em;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
  -webkit-transition: background-color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, transform 150ms linear;
  transition: background-color 300ms ease-out, transform 150ms linear, -webkit-transform 150ms linear;
}

.btn:link:hover, .btn:visited:hover {
  background-color: #016698;
}

.btn:link:active, .btn:visited:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.cards__btn-2:link, .cards__btn-2:visited {
  background-color: transparent;
  border: 1px solid #fff;
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.cards__btn-2:hover {
  background-color: transparent !important;
  color: #cccccc;
  border-color: #cccccc;
}

.cards__btn-2:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.registration {
  max-width: 1280px;
  margin: 5em auto 2em auto;
  text-align: center;
  font-size: 1.1em;
  border: 1px solid #222;
  padding: 1em;
  width: 60%;
}

.cards {
  /** flexbox fallback for IE11 **/
  /* FIX FOR IE11 - just using scale for all browers */
}

.cards__heading--three {
  margin: 4em auto 0 auto;
  max-width: 1280px;
  width: 80%;
  font-size: 1.45em;
}

@media (max-width: 35em) {
  .cards__heading--three {
    width: 90%;
  }
}

.cards__about.update {
  margin-top: .5em;
  margin-bottom: -1em;
  font-style: italic;
  font-size: 1.2em;
}

.cards__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

@media (max-width: 47.5em) {
  .cards__about {
    font-size: 1em;
    margin: 4em auto 5em auto;
  }
}

@media (max-width: 35em) {
  .cards__about {
    width: 90%;
  }
}

@media (max-width: 28.125em) {
  .cards__about {
    font-size: .95em;
    line-height: 1.4;
    width: 100%;
  }
}

.cards__main-wrap {
  max-width: 1280px;
  margin: 0 auto;
}

.cards__grid {
  /** flexbox fallback for IE11 **/
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@supports (display: grid) {
  .cards__grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    grid-gap: 2em;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

@media (max-width: 61.25em) {
  @supports (display: grid) {
    .cards__grid {
      grid-gap: 1em;
    }
  }
}

@media (max-width: 38.875em) {
  @supports (display: grid) {
    .cards__grid {
      grid-gap: 3em 1em;
    }
  }
}

.cards__grid > * {
  width: 300px;
  margin: 1em;
}

@supports (display: grid) {
  .cards__grid > * {
    width: auto;
    margin: 0;
  }
}

.cards__wrap {
  background-color: #fff;
  border-radius: 10px;
  border: 1px solid #e0e0e0;
}

@media (max-width: 38.875em) {
  .cards__wrap {
    width: 80%;
    margin: 0 auto;
  }
}

@media (max-width: 28.125em) {
  .cards__wrap {
    width: 100%;
    margin: 0 auto;
  }
}

.cards__image-wrap {
  position: relative;
  width: 100%;
  overflow: hidden;
  z-index: 2;
  border-radius: 10px 10px 0 0;
}

.cards__image {
  width: 100%;
  height: auto;
  display: block;
}

.cards__wave {
  position: absolute;
  width: 100%;
  left: 0;
  bottom: 0;
  height: 0;
}

.cards__wave::before {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #fff 16px);
}

.cards__wave::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #fff 12px, transparent 13px);
}

.cards__content {
  padding: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.cards__icon {
  color: #0188cb;
  -ms-flex-item-align: center;
      align-self: center;
}

.cards__icon::before {
  margin: 0 !important;
  font-size: 3em !important;
}

.cards__icon.flaticon-kindergarten {
  -webkit-transform: scale(1.15);
          transform: scale(1.15);
  /*&::before {
           
           font-size: 3.2em !important;
        
        }*/
}

.cards__subheading-brush {
  position: relative;
  padding-bottom: 20px;
}

.cards__subheading-brush::after {
  background-color: #f27d7f;
  position: absolute;
  content: "";
  padding: 0;
  max-width: 274px;
  width: 100%;
  display: inline-block;
  background-image: url("../img/footer_title_bg.png");
  background-position: left bottom;
  background-repeat: no-repeat;
  bottom: 0;
  left: 55%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
  height: 14px;
}

@media (max-width: 61.25em) {
  .cards__subheading-brush::after {
    max-width: 240px;
    left: 50%;
  }
}

.cards__subheading-brush--2::after {
  background-color: #4b7195;
}

.cards__subheading-brush--3::after {
  background-color: #acc157;
}

.cards__subheading-brush-span--1, .cards__subheading-brush-span--2, .cards__subheading-brush-span--3 {
  font-weight: 700;
}

.cards__subheading {
  margin: .5em 0 1em 0;
  font-size: 1.7em;
  font-weight: 300;
  text-align: center;
}

@media (max-width: 61.25em) {
  .cards__subheading {
    font-size: 1.5em;
    margin: .5em 0 .75em 0;
  }
}

.cards__icon-wrap {
  margin-bottom: 1em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.cards__icon:not(:last-of-type) {
  margin-right: .3em;
}

.cards__summary {
  line-height: 1.5;
}

@media (max-width: 28.125em) {
  .cards__summary {
    font-size: .95em;
    line-height: 1.4;
  }
}

.cards__btn {
  margin: 3em 0;
  -ms-flex-item-align: center;
      align-self: center;
}

@media (max-width: 28.125em) {
  .cards__btn {
    margin: 2em 0;
  }
}

.current-cal {
  /* use a low max-width to keep the text size the same until 730px then it scales down as the viewport width decreases */
  max-width: 730px;
  margin: 0 auto 8em auto;
  padding: 0 1em;
  text-align: center;
}

@media (max-width: 28.125em) {
  .current-cal {
    padding: 0 .5em;
  }
}

.current-cal--svg {
  width: 75%;
  height: 100%;
  margin: 0 auto;
}

.current-cal--text {
  font-family: 'Bubblegum Sans', sans-serif;
  font-size: 3em;
  text-anchor: middle;
}

.current-cal--list {
  margin-top: 2em;
  display: inline-block;
  text-align: left;
}

@media (max-width: 31.25em) {
  .current-cal--list {
    font-size: .95em;
  }
}

@media (max-width: 25em) {
  .current-cal--list {
    font-size: .9em;
  }
}

.current-cal--item {
  margin-bottom: .75em;
  font-size: 1.05em;
  line-height: 1.4;
  opacity: 0;
  -webkit-transform: translateY(-200%) scale(1.3);
          transform: translateY(-200%) scale(1.3);
  -webkit-transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
  transition: all 800ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.current-cal--item--flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}

.current-cal--item:nth-of-type(2) {
  -webkit-transition-delay: 400ms;
          transition-delay: 400ms;
}

.current-cal--item:nth-of-type(3) {
  -webkit-transition-delay: 800ms;
          transition-delay: 800ms;
}

.current-cal--item:nth-of-type(4) {
  -webkit-transition-delay: 1200ms;
          transition-delay: 1200ms;
}

.current-cal--item:nth-of-type(5) {
  -webkit-transition-delay: 1600ms;
          transition-delay: 1600ms;
}

.current-cal--item:nth-of-type(6) {
  -webkit-transition-delay: 2000ms;
          transition-delay: 2000ms;
}

.current-cal--item--visible {
  opacity: 1;
  -webkit-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1);
}

.current-cal--span {
  font-style: italic;
}

.current-cal--img {
  width: 16px;
  display: inline-block;
  -webkit-transform: translateY(3px);
          transform: translateY(3px);
  margin-right: 5px;
}

@media (max-width: 31.25em) {
  .current-cal--img {
    width: 14px;
  }
}

.gallery.fullwidth {
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.gallery__image-wrap {
  width: 25%;
  background-color: #000;
  overflow: hidden;
}

@media (max-width: 52.5em) {
  .gallery.fullwidth {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .gallery__image-wrap {
    width: 50%;
  }
  .gallery__image-wrap--order {
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
  }
}

.gallery__image {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  opacity: .85;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.gallery__image:hover {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
  opacity: 1;
}

.footer {
  position: relative;
  padding: 2em;
  background-image: url("../img/footer--bg.png");
  background-repeat: repeat;
  border-bottom: 5px solid #212121;
  /** flexbox fallback for IE11 **/
  /* Fix for iphone safari browser showing blue text */
}

@media (max-width: 28.125em) {
  .footer {
    padding: 2em 1em;
  }
}

.footer__wrap {
  color: #b0b0b0;
  margin-bottom: 3em;
  max-width: 1280px;
  margin: 0 auto;
}

.footer__logo-wrap {
  margin: 1em 0;
}

.footer__logo {
  display: inline-block;
}

.footer__logo img {
  width: 70%;
  height: auto;
}

.footer__main {
  /** flexbox fallback for IE11 **/
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 3em 0;
  line-height: 1.4;
}

@supports (display: grid) {
  .footer__main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 2.5em;
  }
}

@media (max-width: 28.125em) {
  @supports (display: grid) {
    .footer__main {
      grid-gap: 3.5em;
    }
  }
}

.footer__main > * {
  width: 250px;
  margin: 1em;
}

@supports (display: grid) {
  .footer__main > * {
    width: auto;
    margin: 0;
  }
}

.footer__subheading {
  color: #fff;
  font-weight: 300;
  font-size: 1.2em;
  margin-bottom: 1em;
}

.footer__subheading-span {
  font-weight: 700;
}

.footer__mission {
  line-height: 1.5;
}

.footer__hours {
  color: #0188cb;
  margin-bottom: .8em;
}

.footer__closings-link {
  color: #0188cb;
  text-decoration: underline;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.footer__closings-link:hover {
  color: #01aafe;
}

.footer__contact p {
  margin-bottom: 1.2em;
  font-weight: 300;
  overflow: auto;
}

.footer__contact-icon {
  text-align: left;
  float: left;
  margin-right: .25em;
  width: 1.1em;
  height: 1.1em;
  fill: #0188cb;
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

.footer__contact-icon--1 {
  width: 1.2em;
  height: 1.2em;
}

.footer__telephone a {
  color: #b0b0b0 !important;
}

.footer__fax {
  color: #b0b0b0 !important;
}

.footer__shape {
  background-image: url("../img/shape_bottom.png");
  background-repeat: no-repeat;
  width: 300px;
  height: 45px;
  position: absolute;
  bottom: 0;
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

.footer__icon-wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.footer__icon {
  fill: #0188cb;
  width: 1.3em;
  height: 1.3em;
  -webkit-transform: translateY(3px);
          transform: translateY(3px);
}

.footer__bottom {
  background-color: #121212;
  padding: 2em;
  color: #b0b0b0;
}

.footer__copyright {
  text-align: center;
  margin-bottom: .5em;
}

@media (max-width: 28.125em) {
  .footer__copyright {
    font-size: .95em;
  }
}

.footer__design {
  text-align: center;
  font-size: .9em;
}

.footer__me, .footer__me:visited {
  color: #0188cb;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.footer__me:hover, .footer__me:visited:hover {
  color: #01aafe;
}

.footer__taxid {
  margin-top: 2.5em;
}

.js-btt-btn {
  position: fixed;
  bottom: -2.7em;
  right: .5em;
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: none;
  background-color: rgba(79, 79, 79, 0.8);
  text-align: center;
  line-height: 1.7em;
  color: #fff;
  font-size: 2em;
  opacity: 0;
  pointer-events: none;
  -webkit-transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  transition: opacity 500ms ease-out, bottom 400ms cubic-bezier(0.64, 0.57, 0.67, 1.23), background-color 300ms ease-out, color 300ms ease-out;
  cursor: pointer;
  border: 1px dashed #0188cb;
  z-index: 9500;
}

.js-btt-btn-icon {
  fill: #fff;
  width: 1em;
  height: 1em;
  -webkit-transform: translateY(5px);
          transform: translateY(5px);
  -webkit-transition: fill 300ms ease-in;
  transition: fill 300ms ease-in;
}

.js-btt-btn:hover .js-btt-btn-icon {
  fill: #0188cb;
}

.js-btt-btn.active {
  opacity: 1;
  bottom: 1.5em;
  pointer-events: auto;
}

.js-btt-btn:hover {
  background-color: black;
}

.hero__wrap--two {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/wall.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/wall.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--two {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/wall--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/wall--small.jpg");
  }
}

.hero__hdg {
  font-size: 4.5em;
  color: #fff;
  font-family: 'Bubblegum Sans', sans-serif;
  letter-spacing: 2px;
}

@media (max-width: 47.5em) {
  .hero__hdg {
    font-size: 3.75em;
  }
}

@media (max-width: 35em) {
  .hero__hdg {
    font-size: 3.2em;
  }
}

@media (max-width: 23.0625em) {
  .hero__hdg {
    font-size: 2.6em;
  }
}

.aboutus {
  max-width: 1280px;
  margin: 0 auto;
  /*
    
    To make the font-size change a little smoother when the size of the
    SVG embedded object changes/in media queries, you can add in a CSS transition effect:
    
    svg text { transition: font-size 0.5s; }
    
    */
}

.aboutus__wrap {
  width: 70%;
  margin: 6em auto 0 auto;
  overflow-x: hidden;
}

@media (max-width: 57.5em) {
  .aboutus__wrap {
    width: 80%;
  }
}

@media (max-width: 47.5em) {
  .aboutus__wrap {
    width: 90%;
  }
}

@media (max-width: 38.4375em) {
  .aboutus__wrap {
    width: 95%;
  }
}

@media (max-width: 35em) {
  .aboutus__wrap {
    width: 100%;
  }
}

.aboutus__svg {
  width: 100%;
  height: 100%;
}

.aboutus__text-svg {
  font-family: 'Bubblegum Sans', sans-serif;
  font-size: 20px;
}

.aboutus__tspan-svg {
  font-size: 35px;
}

.aboutus__image-svg {
  -webkit-clip-path: url(#svg-path);
          clip-path: url(#svg-path);
}

.aboutus__sect {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto auto;
  grid-gap: 1.5em 1.25em;
  margin-bottom: 3em;
}

.aboutus__imgwrap {
  background: url("../img/aqua-circle-bubble.png") no-repeat top left;
  height: 60px;
  width: 58px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.aboutus__icon {
  fill: #fff;
  width: 1.4em;
  height: 1.4em;
  grid-column: 1 / 2;
  grid-row: 1 / 2;
}

.aboutus__hdg {
  font-weight: 300;
  position: relative;
  font-size: 1.6em;
  justify-self: start;
  -ms-flex-item-align: center;
      align-self: center;
  grid-column: 2 / 3;
  grid-row: 1 / 2;
}

.aboutus__hdg::after {
  content: "";
  position: absolute;
  height: 1px;
  background-color: #e0e0e0;
  width: 1.5em;
  bottom: -.5em;
  left: 0;
}

.aboutus__summary {
  font-size: 1.1em;
  line-height: 1.4;
  grid-column: 1 / 3;
  grid-row: 2 / 3;
}

.aboutus__para {
  margin-bottom: 1em;
}

@media (max-width: 28.125em) {
  .aboutus__para {
    font-size: .95em;
  }
}

.aboutus__span {
  font-weight: 700;
}

.aboutus__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.aboutus__link:hover {
  color: #01557f;
}

.aboutus__quote {
  font-weight: 400;
  font-style: italic;
  font-size: 1.4em;
  width: 100%;
  margin: 3em 0;
  padding-right: 4em;
  padding-left: 2em;
  display: grid;
  grid-column-gap: 1.5em;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  opacity: 0;
  -webkit-transition: all 800ms ease-out;
  transition: all 800ms ease-out;
  -webkit-transform: translateY(-150%) scale(1.4);
          transform: translateY(-150%) scale(1.4);
}

@media (max-width: 52.5em) {
  .aboutus__quote {
    font-size: 1.3em;
    margin: 2.5em 0;
  }
}

@media (max-width: 47.5em) {
  .aboutus__quote {
    font-size: 1.2em;
  }
}

@media (max-width: 35em) {
  .aboutus__quote {
    padding-right: 3em;
    padding-left: 1.5em;
  }
}

@media (max-width: 28.125em) {
  .aboutus__quote {
    padding-right: 2em;
    padding-left: 1em;
  }
}

@media (max-width: 25em) {
  .aboutus__quote {
    font-size: 1.1em;
  }
}

.aboutus__quote.visible {
  opacity: 1;
  -webkit-transform: translateY(0) scale(1);
          transform: translateY(0) scale(1);
}

.aboutus__quote span {
  font-family: sans-serif;
  color: #b0b0b0;
  font-size: 8em;
  line-height: .5;
  grid-column: 1 / 2;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

@media (max-width: 35em) {
  .aboutus__quote span {
    line-height: .45;
  }
}

.hero__wrap--five {
  background-image: url("../img/staff-masks.jpeg");
  background-repeat: no-repeat;
  background-position: 42%;
}

/**** iPhones landscape *****/
@media only screen and (min-device-width: 320px) and (max-device-width: 568px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

@media only screen and (min-device-width: 414px) and (max-device-width: 736px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

@media only screen and (min-device-width: 375px) and (max-device-width: 812px) and (-webkit-min-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap--five {
    background-position: center;
  }
}

/******* Galaxy Phones landscape *******/
@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

@media screen and (device-width: 320px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

/******* Pixel Phones landscape *******/
@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

@media screen and (device-width: 360px) and (device-height: 640px) and (-webkit-device-pixel-ratio: 4) and (orientation: landscape) {
  .hero__wrap {
    background-position: center;
  }
}

.staff {
  max-width: 1280px;
  margin: 0 auto 0 auto;
  /******* TEACHERS ******/
}

@media (max-width: 40.3125em) {
  .staff {
    padding: 6em 0;
  }
}

.staff__about {
  font-size: 1.1em;
  width: 80%;
  margin: 6em auto 8em auto;
  line-height: 1.5;
}

@media (max-width: 47.5em) {
  .staff__about {
    font-size: 1em;
    margin: 4em auto 5em auto;
  }
}

@media (max-width: 35em) {
  .staff__about {
    width: 90%;
  }
}

@media (max-width: 28.125em) {
  .staff__about {
    font-size: .95em;
    line-height: 1.4;
    width: 95%;
  }
}

.staff__office-wrap {
  /***** NOT -ms-display: grid ****/
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr;
  /** if its IE 11 then I have added margin to make up for this **/
  margin-bottom: 15em;
  margin-top: 3em;
  justify-items: center;
}

@supports (display: grid) {
  .staff__office-wrap {
    grid-column-gap: 1.5em;
  }
}

@media (max-width: 40.3125em) {
  .staff__office-wrap {
    margin-bottom: 10em;
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    /** if its IE 11 then I have added margin to make up for this **/
  }
  @supports (display: grid) {
    .staff__office-wrap {
      grid-gap: 7em 0;
    }
  }
}

.staff__individual {
  position: relative;
  width: 300px;
}

@media (max-width: 63.75em) {
  .staff__individual {
    width: 250px;
  }
}

@media (max-width: 54.375em) {
  .staff__individual {
    width: 220px;
  }
}

@media (max-width: 47.5em) {
  .staff__individual {
    width: 180px;
  }
}

@media (max-width: 40.3125em) {
  .staff__individual {
    width: 300px;
    /*** remove the margin declared below the @supports for browsers that support grid ***/
    /*** fallback for grid-gap **/
    margin: 0 auto 7em auto;
  }
  @supports (display: grid) {
    .staff__individual {
      margin: 0;
    }
  }
}

.staff__individual:first-of-type {
  -ms-grid-column: 1;
  -ms-grid-row: 1;
}

.staff__individual:nth-of-type(2) {
  -ms-grid-column: 2;
  -ms-grid-row: 1;
}

@media (max-width: 40.3125em) {
  .staff__individual:nth-of-type(2) {
    -ms-grid-column: 1;
    -ms-grid-row: 2;
  }
}

.staff__individual:nth-of-type(3) {
  -ms-grid-column: 3;
  -ms-grid-row: 1;
}

@media (max-width: 40.3125em) {
  .staff__individual:nth-of-type(3) {
    -ms-grid-column: 1;
    -ms-grid-row: 3;
  }
}

.staff__image {
  max-width: 100%;
  height: auto;
  display: block;
}

.staff__summary {
  position: absolute;
  bottom: -12%;
  background-color: #fff;
  padding: 2em;
  left: 10%;
  right: 10%;
  z-index: 3;
}

@media (max-width: 63.75em) {
  .staff__summary {
    bottom: -15%;
  }
}

@media (max-width: 54.375em) {
  .staff__summary {
    padding: 1.2em 1em;
    bottom: -12%;
  }
}

@media (max-width: 47.5em) {
  .staff__summary {
    left: 5%;
    right: 5%;
    bottom: -14.5%;
  }
}

@media (max-width: 40.3125em) {
  .staff__summary {
    padding: 2em;
    bottom: -12%;
    left: 10%;
    right: 10%;
  }
}

.staff__summary--noabsolute {
  position: relative;
  top: auto;
  left: auto;
  right: auto;
  bottom: auto;
  width: 50%;
  padding: 2em;
  -webkit-box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.2);
          box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.2);
  margin: 3.5em auto;
  text-align: center;
}

@media (max-width: 28.125em) {
  .staff__summary--noabsolute {
    padding: 1.5em 1em;
  }
}

@media (max-width: 23.0625em) {
  .staff__summary--noabsolute {
    font-size: .92em;
  }
}

.staff__summary--noabsolute::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #f27d7f;
  z-index: 1;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.staff__summary--noabsolute:hover::after {
  height: 100%;
}

.staff__summary--noabsolute:hover .staff__title {
  color: #fff;
}

.staff__summary--noabsolute:hover .staff__email {
  color: #fff;
}

.staff__summary--noabsolute:hover .staff__icon {
  fill: #fff;
}

.staff__summary:hover::after {
  height: 100%;
}

.staff__summary:hover .staff__title {
  color: #fff;
}

.staff__summary:hover .staff__email {
  color: #fff;
}

.staff__summary:hover .staff__icon {
  fill: #fff;
}

.staff__summary::after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: #f27d7f;
  z-index: 1;
  -webkit-transition: height 300ms ease-out;
  transition: height 300ms ease-out;
}

.staff__summary--blue::after {
  background: #4b7195;
}

.staff__summary--green::after {
  background: #acc157;
}

.staff__summary--orange::after {
  background: #ea9f61;
}

.staff__name {
  position: relative;
  z-index: 2;
}

.staff__email {
  font-size: 1.25em;
  display: inline-block;
  margin-right: .15em;
  color: #2665d9;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__email:hover {
  color: #1b4798;
}

@media (max-width: 54.375em) {
  .staff__email {
    font-size: 1.1em;
  }
}

@media (max-width: 40.3125em) {
  .staff__email {
    font-size: 1.25em;
  }
}

.staff__icon {
  width: 1em;
  height: 1em;
  fill: #2665d9;
}

.staff__title {
  font-style: italic;
  font-size: 1.1em;
  position: relative;
  z-index: 2;
}

@media (max-width: 54.375em) {
  .staff__title {
    font-size: 1.05em;
  }
}

@media (max-width: 40.3125em) {
  .staff__title {
    font-size: 1.1em;
  }
}

.staff__teachers-grid {
  display: grid;
  display: -ms-grid;
  grid-template-columns: 1fr 3fr;
  -ms-grid-columns: 1fr 3fr;
  border: 1px solid #e0e0e0;
  margin-bottom: 4em;
  margin-top: 3em;
}

@media (max-width: 35em) {
  .staff__teachers-grid {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
  }
}

.staff__teachers-list {
  position: relative;
  background-color: #fff;
  -ms-grid-column: 1;
  -ms-grid-row: 1;
}

@media (max-width: 35em) {
  .staff__teachers-list {
    -ms-grid-column: 1;
    -ms-grid-row: 1;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: distribute;
        justify-content: space-around;
  }
}

.staff__teachers-hdg {
  background: #0188cb;
  height: 93px;
  width: 100%;
  position: relative;
  line-height: 93px;
  text-align: center;
  color: #fff;
  text-transform: uppercase;
  font-size: 1.3em;
}

@media (max-width: 35em) {
  .staff__teachers-hdg {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
  }
}

.staff__teachers-hdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
}

.staff__teachers-hdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
}

.staff__teachers-btmhdg {
  background: #0188cb;
  height: 93px;
  left: 0;
  bottom: 0;
  width: 100%;
  position: absolute;
}

@media (max-width: 35em) {
  .staff__teachers-btmhdg {
    display: none;
  }
}

.staff__teachers-btmhdg::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #f8f8f8 16px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-btmhdg::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #f8f8f8 12px, transparent 13px);
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg);
}

.staff__teachers-item {
  padding: 1em;
  text-align: center;
}

@media (max-width: 35em) {
  .staff__teachers-item {
    padding: 1em .5em;
  }
}

.staff__teachers-item--first {
  margin-top: 1em;
}

@media (max-width: 35em) {
  .staff__teachers-item--first {
    margin-top: 0;
  }
}

.staff__teachers-item--last {
  margin-bottom: calc(93px + 1em);
}

@media (max-width: 35em) {
  .staff__teachers-item--last {
    margin-bottom: 0;
    margin-right: 0;
  }
}

.staff__teachers-link {
  font-family: 'Bubblegum Sans', Arial;
  color: #212121;
  text-transform: uppercase;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.staff__teachers-link:hover {
  color: #0188cb;
}

.staff__teachers-link--current {
  color: #0188cb;
  font-weight: 700;
}

.staff__teachers-listout {
  display: none;
  -webkit-transition: all 500ms ease-out;
  transition: all 500ms ease-out;
}

.staff__teachers-listout--visible {
  display: block;
  height: 100%;
}

.staff__teachers-table-wrap {
  color: #fff;
  -ms-grid-column: 2;
  -ms-grid-row: 1;
}

@media (max-width: 35em) {
  .staff__teachers-table-wrap {
    -ms-grid-column: 1;
    -ms-grid-row: 2;
    grid-column: 1 / 2;
    grid-row: 2 / 3;
  }
}

.staff__teachers-table {
  width: 100%;
  height: 100%;
  border-collapse: collapse;
}

.staff__teachers-table tr:nth-of-type(odd) {
  background-color: #333333;
}

.staff__teachers-table tr:nth-of-type(even) {
  background-color: #4f4f4f;
}

.staff__teachers-table th {
  text-align: left;
  padding: 1em;
  text-transform: uppercase;
  font-weight: 700;
}

.staff__teachers-table td {
  padding: .5em .5em .5em 1em;
}

@media (max-width: 35em) {
  .staff__teachers-table td {
    font-size: .95em;
  }
}

.staff__teachers-icon {
  width: 1.5em;
  height: 1.5em;
  fill: #fff;
  -webkit-transform: translateY(1px);
          transform: translateY(1px);
  -webkit-transition: fill 350ms ease-out;
  transition: fill 350ms ease-out;
}

.staff__teachers-icon:hover {
  fill: #0188cb;
}

/* MAY NEED TO ADD OVERFLOW-X: HIDDEN ON TABLE OR TABLE WRAPPER ELEMENTS SINCE THEY ARE OFFSCREEN HORIZONTALLY AND THE ANIMATED IN */
.hero__wrap--three {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/school-room--large.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/school-room--large.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--three {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/school-room--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/school-room--small.jpg");
  }
}

.program {
  padding-right: 0;
  padding-left: 0;
  /** flexbox fix for IE11 **/
  /** flexbox fix for IE11 **/
  /*** rotation is 90deg not -90 and margin is -22, not -12 ***/
}

.program__split--one {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 2fr;
  grid-template-columns: 1fr 2fr;
  background-color: rgba(0, 0, 0, 0.05);
  margin-top: 2em;
  position: relative;
}

@media (max-width: 47.5em) {
  .program__split--one {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    margin-bottom: 16em;
  }
}

@media (max-width: 28.125em) {
  .program__split--one {
    margin-bottom: 18em;
  }
}

@media (max-width: 28.125em) {
  .program__split--one::before {
    content: "";
    background-color: #e0e0e0;
    width: 50px;
    height: 2px;
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    bottom: -13.5em;
  }
}

.program__split-cell--one {
  -ms-grid-column: 1;
  grid-column: 1 / 2;
  position: relative;
  text-align: right;
}

@media (max-width: 47.5em) {
  .program__split-cell--one {
    -ms-grid-column: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 2;
    grid-row: 2 / 3;
    text-align: left;
  }
}

.program__translate {
  padding: 2em;
  background-color: rgba(255, 255, 255, 0.85);
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  border-top: 5px solid #0188cb;
  max-width: 750px;
}

@media (max-width: 57.5em) {
  .program__translate {
    padding: 1em;
  }
}

@media (max-width: 25em) {
  .program__translate {
    padding: .5em;
  }
}

.program__translate--one {
  width: 150%;
  left: 0;
}

@media (max-width: 47.5em) {
  .program__translate--one {
    width: 80%;
    left: 10%;
  }
}

@media (max-width: 31.25em) {
  .program__translate--one {
    width: 90%;
    left: 5%;
  }
}

@media (max-width: 28.125em) {
  .program__translate--one {
    width: 100%;
    left: 0;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.program__heading {
  font-size: 1.4em;
  font-weight: 300;
  margin-bottom: .5em;
}

@media (max-width: 28.125em) {
  .program__heading {
    margin-top: .5em;
  }
}

.program__paraa {
  line-height: 1.4;
}

@media (max-width: 57.5em) {
  .program__paraa {
    font-size: .95em;
  }
}

.program__split-cell--two {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
}

@media (max-width: 47.5em) {
  .program__split-cell--two {
    -ms-grid-column: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 1;
    grid-row: 1 / 2;
  }
}

.program__split-cell--two img {
  max-width: 100%;
  height: auto;
  display: block;
  border: 1px solid #e0e0e0;
  /* this is needed to get it to expand width to the right */
  margin-left: auto;
}

.program__split--two {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 2fr 1fr;
  grid-template-columns: 2fr 1fr;
  background-color: rgba(0, 0, 0, 0.05);
}

@media (max-width: 47.5em) {
  .program__split--two {
    -ms-grid-columns: 1fr;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    margin-bottom: 16em;
  }
}

@media (max-width: 31.25em) {
  .program__split--two {
    margin-bottom: 22em;
  }
}

@media (max-width: 28.125em) {
  .program__split--two {
    /* extra top margin as there looks like margin collapsing */
    margin-top: 16em;
    margin-bottom: 27em;
  }
}

@media (max-width: 23.0625em) {
  .program__split--two {
    margin-bottom: 29em;
  }
}

.program__split-cell--three {
  -ms-grid-column: 1;
  grid-column: 1 / 2;
}

@media (max-width: 47.5em) {
  .program__split-cell--three {
    -ms-grid-row: 1;
    grid-row: 1 / 2;
  }
}

.program__split-cell--three img {
  max-width: 120%;
  height: auto;
  display: block;
  border: 1px solid #e0e0e0;
}

@media (max-width: 47.5em) {
  .program__split-cell--three img {
    max-width: 100%;
  }
}

.program__split-cell--four {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
  position: relative;
  text-align: left;
}

@media (max-width: 47.5em) {
  .program__split-cell--four {
    -ms-grid-column: 1;
    grid-column: 1 / 2;
    -ms-grid-row: 2;
    grid-row: 2 / 3;
    text-align: left;
  }
}

.program__translate--two {
  /* wider since it has more content */
  width: 150%;
  right: 0;
}

@media (max-width: 47.5em) {
  .program__translate--two {
    width: 80%;
    left: 10%;
  }
}

@media (max-width: 31.25em) {
  .program__translate--two {
    width: 90%;
    left: 5%;
    /*** using top DOES NOT WORK here  ***/
    -webkit-transform: translateY(-30%);
            transform: translateY(-30%);
  }
}

@media (max-width: 28.125em) {
  .program__translate--two {
    width: 100%;
    left: 0;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.program__wrap {
  padding-right: 2em;
  padding-left: 2em;
  max-width: 1280px;
  margin: 8em auto 6em auto;
  overflow-x: hidden;
}

@media (max-width: 57.5em) {
  .program__wrap {
    margin-bottom: 0;
  }
}

@media (max-width: 35em) {
  .program__wrap {
    padding-right: 1em;
    padding-left: 1em;
  }
}

@media (max-width: 28.125em) {
  .program__wrap {
    padding-right: .5em;
    padding-left: .5em;
  }
}

@media (max-width: 25em) {
  .program__wrap {
    padding-right: 0;
    padding-left: 0;
  }
}

.program__sect {
  margin: 0 auto 3em auto;
  width: 80%;
}

@media (max-width: 70em) {
  .program__sect {
    width: 90%;
  }
}

@media (max-width: 57.5em) {
  .program__sect {
    width: 100%;
  }
}

.program__sect-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #e0e0e0;
  border-radius: 3px;
  overflow: hidden;
  margin-bottom: 8em;
}

@media (max-width: 48.75em) {
  .program__sect-flex {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

@media (max-width: 25em) {
  .program__sect-flex {
    border: 0;
    border-radius: 0;
  }
}

@media (max-width: 57.5em) {
  .program__sect-flex:last-of-type {
    margin-bottom: 0;
  }
}

.program__sect-flex--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

@media (max-width: 48.75em) {
  .program__sect-flex--reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.program__para-wrap {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 48.75em) {
  .program {
    /* override IE11 style above */
  }
  .program__para-wrap {
    -webkit-box-flex: 1;
        -ms-flex: auto;
            flex: auto;
  }
  @supports (display: grid) {
    .program__para-wrap {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
    }
  }
}

.program__para {
  line-height: 1.4;
  padding: 1em 1.5em 1em 1em;
}

@media (max-width: 48.75em) {
  .program__para {
    padding: 1em 1em 2em 1em;
  }
}

@media (max-width: 28.125em) {
  .program__para {
    font-size: .95em;
  }
}

.program__para--reverse {
  padding: 1em 1em 1em 1.5em;
}

@media (max-width: 48.75em) {
  .program__para--reverse {
    padding: 1em 1em 2em 1em;
  }
}

.program__link {
  color: #0188cb;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
}

.program__link:hover {
  color: #01557f;
}

.program__small {
  font-size: 1em;
  display: block;
  font-style: italic;
  margin-top: 1em;
}

.program__table-wrap {
  position: relative;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  background-color: #0188cb;
  color: #fff;
  padding: 2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 28.125em) {
  .program__table-wrap {
    padding: 2em 1em;
  }
}

.program__table-wrap::before {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 20px 20px;
  background-image: radial-gradient(circle at 10px -5px, transparent 14px, #0188cb 16px);
}

@media (max-width: 48.75em) {
  .program__table-wrap::before {
    left: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap::after {
  content: "";
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  position: absolute;
  left: -100%;
  margin-left: -12px;
  top: 50%;
  right: 0;
  background-repeat: repeat;
  height: 12px;
  background-size: 40px 20px;
  background-image: radial-gradient(circle at 10px 15px, #0188cb 12px, transparent 13px);
}

@media (max-width: 48.75em) {
  .program__table-wrap::after {
    left: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

@media (max-width: 48.75em) {
  .program {
    /* override IE11 style above */
  }
  .program__table-wrap {
    -webkit-box-flex: 1;
        -ms-flex: auto;
            flex: auto;
  }
  @supports (display: grid) {
    .program__table-wrap {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1;
    }
  }
}

.program__table-wrap--reverse::before {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

@media (max-width: 48.75em) {
  .program__table-wrap--reverse::before {
    right: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table-wrap--reverse::after {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  margin-right: -22px;
  right: -100%;
  left: 0;
}

@media (max-width: 48.75em) {
  .program__table-wrap--reverse::after {
    right: 0;
    top: -12px;
    -webkit-transform: rotate(0);
            transform: rotate(0);
    /* NEED TO UNDO THE NEGATIVE MARGIN?? */
  }
}

.program__table {
  font-size: 1.1em;
  border-collapse: collapse;
  border: 1px solid #fff;
  -webkit-transition: all 800ms cubic-bezier(0.75, -0.5, 0.25, 1.32);
  transition: all 800ms cubic-bezier(0.75, -0.5, 0.25, 1.32);
  -webkit-transform: translateX(200%);
          transform: translateX(200%);
}

@media (max-width: 28.125em) {
  .program__table {
    font-size: 1em;
  }
}

@media (max-width: 23.0625em) {
  .program__table {
    font-size: .95em;
  }
}

.program__table--reverse {
  -webkit-transform: translateX(-200%);
          transform: translateX(-200%);
}

.program__table--visible {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  opacity: 1;
}

.program__table tr:nth-of-type(1n) {
  background-color: transparent;
}

.program__table tr:nth-of-type(2n) {
  background-color: rgba(255, 255, 255, 0.2);
}

.program__table-row--one {
  background-color: #f27d7f !important;
}

.program__table-row--two {
  background-color: #4b7195 !important;
}

.program__table-row--three {
  background-color: #acc157 !important;
}

.program__table th {
  font-family: 'Bubblegum Sans', Arial;
  text-transform: uppercase;
  text-align: center;
  padding: 1em;
}

@media (max-width: 28.125em) {
  .program__table th {
    padding: .75em;
  }
}

.program__table td {
  padding: 1em;
}

@media (max-width: 28.125em) {
  .program__table td {
    padding: .75em;
  }
}

.hero__wrap--four {
  background-image: url("../img/chalkboard--blue-highres.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--four {
    background-image: url("../img/chalkboard--blue-highres--small.jpg");
  }
}

.curriculum {
  padding: 10em 0 6em 0;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  /* flexbox fix for IE11 **/
  /* Using translate since padding makes the bottom sect go higher and thus the entire curriculum__sect is going higher */
}

@media (max-width: 43.75em) {
  .curriculum {
    padding: 8em 0 3em 0;
  }
}

.curriculum__hdg {
  font-family: 'Bubblegum Sans', Arial;
  font-size: 7em;
  color: #000;
}

.curriculum__wrap {
  max-width: 1280px;
  margin: 6em auto 0 auto;
}

.curriculum__sect {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border-top: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  margin-bottom: 8em;
  position: relative;
}

@media (max-width: 57.5em) {
  .curriculum__sect {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
    width: 80%;
    margin: 0 auto 8em auto;
    border: 0;
    -webkit-box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.3);
            box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.3);
  }
}

@media (max-width: 43.75em) {
  .curriculum__sect {
    width: 90%;
  }
}

@media (max-width: 38.4375em) {
  .curriculum__sect {
    width: 100%;
    -webkit-box-shadow: 0px 0px 2px 3px rgba(0, 0, 0, 0.4);
            box-shadow: 0px 0px 2px 3px rgba(0, 0, 0, 0.4);
  }
}

@media (max-width: 57.5em) {
  .curriculum__sect:not(.no--line)::before {
    content: "";
    background-color: #e0e0e0;
    width: 50px;
    height: 2px;
    position: absolute;
    left: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%);
    top: -4em;
  }
}

.curriculum__sect--reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}

@media (max-width: 57.5em) {
  .curriculum__sect--reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
            flex-direction: column-reverse;
  }
}

.curriculum__image {
  max-width: 60%;
  height: auto;
  -o-object-fit: cover;
     object-fit: cover;
}

@media (max-width: 70em) {
  .curriculum__image {
    /* ??????? */
    font-size: 1.55em;
  }
}

@media (max-width: 57.5em) {
  .curriculum__image {
    max-width: 100%;
  }
}

@supports (display: grid) {
  .curriculum__main {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.curriculum__top {
  color: #fff;
  padding: 1em;
  background-color: #f27d7f;
}

@media (max-width: 57.5em) {
  .curriculum__top {
    padding: 1em 2em 2em 2em;
  }
}

@media (max-width: 35em) {
  .curriculum__top {
    padding: 1em;
  }
}

@media (max-width: 25em) {
  .curriculum__top {
    padding: .5em;
  }
}

.curriculum__top--blue {
  background-color: #4b7195;
}

.curriculum__top--green {
  background-color: #acc157;
}

.curriculum__top--orange {
  background-color: #ea9f61;
}

.curriculum__heading {
  font-family: 'Bubblegum Sans', cursive;
  font-size: 1.6em;
  line-height: 1.6em;
  text-transform: uppercase;
  margin-bottom: 10px;
  text-align: center;
}

@media (max-width: 57.5em) {
  .curriculum__heading {
    margin-top: 10px;
    margin-bottom: 14px;
  }
}

@media (max-width: 28.125em) {
  .curriculum__heading {
    font-size: 1.45em;
    line-height: 1.45em;
  }
}

.curriculum__hearts {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin-bottom: 1.5em;
}

.curriculum__hearts div {
  z-index: 99;
}

.curriculum__hearts div + div {
  margin-left: .1em;
}

.curriculum__hearts::before {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  content: "";
  height: 2px;
  width: 100%;
  background-color: #fff;
  position: absolute;
  top: 44%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.curriculum__hearts-icon {
  height: 18px;
  width: 18px;
  fill: #fff;
}

.curriculum__summary {
  line-height: 1.4;
  font-size: 1.1em;
}

@media (max-width: 70em) {
  .curriculum__summary {
    line-height: 1.35;
  }
}

@media (max-width: 57.5em) {
  .curriculum__summary {
    line-height: 1.4;
  }
}

@media (max-width: 28.125em) {
  .curriculum__summary {
    font-size: 1.05em;
  }
}

@media (max-width: 25em) {
  .curriculum__summary {
    font-size: 1em;
    line-height: 1.3;
  }
}

.curriculum__link {
  color: #fff;
  border-bottom: 1px solid currentColor;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

.curriculum__link:hover {
  color: #ddd;
}

.curriculum__price {
  display: block;
  text-transform: uppercase;
  color: #fff;
  border: 1px solid #fff;
  padding: .75em 1.5em;
  background-color: transparent;
  border-radius: 99em;
  margin: 2em auto 1em auto;
  -webkit-box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);
  -webkit-transition: background-color 300ms ease-out, color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, -webkit-transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, transform 150ms linear;
  transition: background-color 300ms ease-out, color 300ms ease-out, transform 150ms linear, -webkit-transform 150ms linear;
  width: 10em;
  text-align: center;
}

@media (max-width: 47.5em) {
  .curriculum__price {
    margin: 2em auto .5em auto;
  }
}

@media (max-width: 35em) {
  .curriculum__price {
    margin: 2em auto 1em auto;
  }
}

@media (max-width: 28.125em) {
  .curriculum__price {
    font-size: .95em;
    width: 8em;
  }
}

.curriculum__price:hover {
  background-color: #fff;
  color: #f27d7f;
}

.curriculum__price:active {
  -webkit-transform: translate(1px, 2px);
          transform: translate(1px, 2px);
}

.curriculum__price--blue:hover {
  color: #4b7195;
}

.curriculum__price--green:hover {
  color: #acc157;
}

.curriculum__price--orange:hover {
  color: #ea9f61;
}

.curriculum__note {
  display: inline-block;
  font-style: italic;
  font-size: 1em;
  margin-top: .5em;
}

.curriculum__bottom {
  color: #4f4f4f;
  padding: 1.75em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  /* This is necessary to make the bottom ratio section fill the entire height of its contents */
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 70em) {
  .curriculum__bottom {
    padding: 1em;
  }
}

.curriculum__subheading {
  margin: 0;
  font-size: 1.75em;
  text-transform: uppercase;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

@media (max-width: 70em) {
  .curriculum__subheading {
    font-size: 1.55em;
  }
}

@media (max-width: 25em) {
  .curriculum__subheading {
    font-size: 1.4em;
  }
}

.curriculum__ratio {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.curriculum__ratio {
  border-left: 1px solid #e0e0e0;
}

.curriculum__title {
  font-weight: 700;
  text-transform: uppercase;
  /*transform: translateY(.25em);*/
}

@media (max-width: 25em) {
  .curriculum__title {
    font-size: .95em;
  }
}

.curriculum__number {
  font-size: 2em;
  color: #0188cb;
  /*transform: translateY(-.35em);*/
}

@media (max-width: 70em) {
  .curriculum__number {
    font-size: 1.7em;
  }
}

@media (max-width: 25em) {
  .curriculum__number {
    font-size: 1.6em;
  }
}

sup {
  vertical-align: top;
  font-size: 0.6em;
}

.hero__wrap-2.calendar {
  height: 0vh;
  margin-bottom: 0;
}

.calendar--wrap {
  background-image: url("../img/cloud-bg.png");
  background-color: #008c99;
  background-attachment: fixed;
  padding-top: 10em;
  padding-bottom: 10em;
}

.footer.cal {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../img/footer--bg.png");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/footer--bg.png");
}

/* fix to make height stay full height of calendar at mobile viewports */
.fc-unthemed th, .fc-unthemed td, .fc-unthemed thead, .fc-unthemed tbody, .fc-unthemed .fc-divider, .fc-unthemed .fc-row, .fc-unthemed .fc-content, .fc-unthemed .fc-popover, .fc-unthemed .fc-list-view, .fc-unthemed .fc-list-heading td {
  border-color: #000 !important;
}

.fc-scroller.fc-day-grid-container {
  height: auto !important;
}

@media (max-width: 41.875em) {
  body .fc {
    font-size: .9em !important;
  }
}

@media (max-width: 35em) {
  body .fc {
    font-size: .85em !important;
  }
}

@media (max-width: 25em) {
  body .fc {
    font-size: .8em !important;
  }
}

@media (max-width: 35em) {
  .fc-toolbar {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .fc-center {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 100%;
            flex: 0 0 100%;
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
    text-align: center;
    margin-bottom: .5em;
  }
  .fc-dayGrid-view .fc-body .fc-row {
    min-height: 6.25em !important;
  }
}

.note {
  font-size: 1.3em;
  color: darkred;
  margin-top: 1em;
  width: 80%;
  margin: 3em auto 2em auto;
  border: 1px solid darkred;
  padding: 1em;
}

.hero__wrap--seven {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/business-girl--large.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/business-girl--large.jpg");
  background-attachment: scroll;
  background-position: top;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--seven {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.3))), url("../img/business-girl--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url("../img/business-girl--small.jpg");
  }
}

.forms__grid {
  margin-top: 6em;
}

.forms__wrap {
  display: -ms-grid;
  display: grid;
  color: #212121;
  /** min-content and max-content are supported by ie11 **/
  -ms-grid-columns: min-content 1fr;
  grid-template-columns: -webkit-min-content 1fr;
  grid-template-columns: min-content 1fr;
  grid-template-rows: auto auto;
  grid-column-gap: 1em;
  margin-bottom: 2.5em;
}

.forms__link {
  /** grid item cannot be an inline element in IE11 **/
  display: block;
  -ms-grid-column: 1;
  grid-column: 1 / 2;
  /** must use the following 2 for a row or col span **/
  -ms-grid-row: 1;
  -ms-grid-row-span: 2;
  grid-row: 1 / 3;
  color: inherit;
  -webkit-transition: color 300ms ease-out;
  transition: color 300ms ease-out;
  /** fallback for grid-gap in IE11 **/
  margin-right: 1em;
  /** reset margin for browsers that support grid **/
}

@supports (display: grid) {
  .forms__link {
    margin: 0;
  }
}

.forms__link:hover {
  color: gray;
}

.forms__item {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
  -ms-grid-row: 1;
  grid-row: 1 / 2;
  font-size: 1.2em;
  /** ie11 syntax for align-self  **/
  -ms-grid-row-align: end;
  -ms-flex-item-align: end;
      align-self: end;
  margin-bottom: .1em;
}

@media (max-width: 28.125em) {
  .forms__item {
    font-size: 1em;
  }
}

.forms__info {
  -ms-grid-column: 2;
  grid-column: 2 / 3;
  -ms-grid-row: 2;
  grid-row: 2 / 3;
  font-style: italic;
  -ms-grid-row-align: start;
  -ms-flex-item-align: start;
      align-self: start;
}

@media (max-width: 28.125em) {
  .forms__info {
    font-size: .95em;
  }
}

/*
temp fix to kwes removing the class name from the form
.subscribe form {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 3em 1.5em;
}

*/
/*
KWES WRAPS EACH INPUT ELEMENT IN A SPAN .kw-field-wrapper so the 100% width needs to be added to this span but I still might need to account for the submit button any time is is a button element and NOT a input type=submit element
*/
/*** ADD THIS POSITION RELATIVE MAYBE!!!! *****/
/***** KWES STYLES START ****/
.kw-field-wrapper {
  width: 100%;
}

.kwes-field-wrapper .help {
  position: absolute;
}

/* TEXTAREA */
.kw-field-wrapper-6 {
  height: 6em !important;
}

/* This matches pencil icon wrap to be the same height at the textarea field --why 8 and not 6?????? */
#applicant-pencil-prefix {
  height: 8em;
}

/***** KWES STYLES END ****/
.hero__wrap--eight {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.2))), url("../img/hero-contact.jpg");
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("../img/hero-contact.jpg");
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

@media (max-width: 31.25em) {
  .hero__wrap--eight {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.2)), to(rgba(0, 0, 0, 0.2))), url("../img/hero-contact--small.jpg");
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), url("../img/hero-contact--small.jpg");
  }
}

.form-wrapper {
  margin: 4em auto 4em auto;
  max-width: 1280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 52.5em) {
  .form-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}

.contact {
  padding: 8em 1em;
}

@media (max-width: 25em) {
  .contact {
    padding: 5em 0;
  }
}

.contacts {
  background-color: #13326c;
  color: #fff;
  padding: 1.25em;
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.contact-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  height: 100%;
}

@media (max-width: 52.5em) {
  .contact-wrap {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
  }
}

@media (max-width: 23.0625em) {
  .contact-wrap {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.wrappy--one {
  margin-bottom: auto;
}

@media (max-width: 52.5em) {
  .wrappy--one {
    margin-right: auto;
    margin-bottom: 0;
  }
}

@media (max-width: 23.0625em) {
  .wrappy--one {
    margin-bottom: 3em;
    margin-right: 0;
  }
}

.contact-hdg {
  margin-bottom: .3em;
  text-transform: uppercase;
  font-weight: 300;
  font-size: 1.2em;
}

.contact-icon {
  fill: #0188cb;
  padding-right: .1em;
  width: 1.2em;
  height: 1.2em;
  -webkit-transform: translateY(0.2em);
          transform: translateY(0.2em);
}

.contact-hdg-span {
  font-weight: 700;
  font-size: .915em;
}

@media (max-width: 55.625em) {
  .contact-item {
    font-size: .95em;
  }
}

@media (max-width: 23.0625em) {
  .contact-item {
    font-size: 1em;
  }
}

.contact-item + .contact-item {
  margin-top: .3em;
}

/* Fix for iphone safari browser showing blue text */
.contact-item--gray {
  color: #fff;
}

.contact-item.hours {
  color: #0188cb;
  margin-top: 0;
  margin-bottom: .3em;
}

.contact-item.hours:not(:last-of-type) {
  margin-bottom: .75em;
}

.form {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.4)), to(rgba(0, 0, 0, 0.4))), url("../img/child-writing.jpg");
  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url("../img/child-writing.jpg");
  background-size: cover;
  padding: 4em 1.5em;
  -webkit-box-flex: 4;
      -ms-flex: 4;
          flex: 4;
}

@media (max-width: 28.125em) {
  .form {
    padding: 2em .75em;
  }
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1em;
  padding-top: 3em;
}

.full-width:last-of-type {
  justify-self: center;
}

.field-text input,
.field-text textarea,
.submit {
  width: 100%;
  border-radius: 0 .25em .25em 0;
  padding: .375em;
  border: 1px solid #ccc;
  font: inherit;
  color: inherit;
}

.field-text input {
  height: 2.125em;
}

.field-text input:focus,
.field-text textarea:focus {
  outline: none;
  -webkit-box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
          box-shadow: inset 0 0 0.5em rgba(93, 162, 248, 0.5);
}

form label {
  display: block;
  color: #fff;
}

.field-prefixed {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
}

.field-prefix {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 2.2em;
          flex: 0 0 2.2em;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  border: 1px solid #ccc;
  border-right: 0;
  border-radius: .25em 0 0 .25em;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  padding: .375em;
  color: #fff;
  background-color: #13326c;
  -webkit-transition: background-color 300ms ease-out 100ms;
  transition: background-color 300ms ease-out 100ms;
}

.field-prefix.background-color {
  background-color: #333;
}

.form-icon {
  width: 1em;
  height: 1em;
  fill: #fff;
  -webkit-transition: color 300ms ease-in;
  transition: color 300ms ease-in;
}

form p {
  margin: 0;
}

textarea {
  height: 8em;
  resize: none;
}

/* changed from 1 / 3 because otherwise there will ALWAYS be two columns*/
.full-width {
  grid-column: 1 / -1;
}

@media (max-width: 35em) {
  .field-text {
    grid-column: 1 / -1;
  }
}

.full-width:last-of-type {
  justify-self: center;
}

.submit {
  margin-top: 2em;
  padding: .6em 1.2em;
  color: #fff;
  border-radius: 6px;
  border: 0;
  background-image: -webkit-gradient(linear, left top, left bottom, from(#1b4798), to(#153675));
  background-image: linear-gradient(#1b4798, #153675);
  -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
          box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
}

.submit:hover {
  cursor: pointer;
}

.submit:focus {
  outline: none;
}

.submit:active {
  -webkit-box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
          box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.4);
  outline: none;
  -webkit-transform: translate(1px, 1px);
          transform: translate(1px, 1px);
}

.submit span {
  margin: 0 .3em .2em 0;
}

.submit .form-icon {
  -webkit-transform: translateY(2px);
          transform: translateY(2px);
}

/* Set the size of the div element that contains the map */
#map {
  height: 400px;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlLnNjc3MiLCJfdmFyTWl4aW5zLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYnJlYWtwb2ludC1zYXNzL3N0eWxlc2hlZXRzL19icmVha3BvaW50LnNjc3MiLCJzdHlsZXMuY3NzIiwibW9kdWxlcy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL19oZXJvLnNjc3MiLCJtb2R1bGVzL19jYXJkcy5zY3NzIiwibW9kdWxlcy9fZ2FsbGVyeS5zY3NzIiwibW9kdWxlcy9fZm9vdGVyLnNjc3MiLCJtb2R1bGVzL19idG4uc2NzcyIsIm1vZHVsZXMvX2Fib3V0dXMuc2NzcyIsIm1vZHVsZXMvX3N0YWZmLnNjc3MiLCJtb2R1bGVzL19wcm9ncmFtLnNjc3MiLCJtb2R1bGVzL19jdXJyaWN1bHVtLnNjc3MiLCJtb2R1bGVzL19jYWxlbmRhci5zY3NzIiwibW9kdWxlcy9fZm9ybXMuc2NzcyIsIm1vZHVsZXMvX2NvbnRhY3Quc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLCtCQUFzQjtVQUF0Qix1QkFBc0I7RUFDbkIsd0JBQXVCO0NBQzFCOztBQUVEO0VBQ0ksNEJBQW1CO1VBQW5CLG9CQUFtQjtFQUNuQixzQkFBcUI7RUFDckIsc0JBQXFCO0VBQ3JCLFVBQVM7RUFDVCxXQUFVO0NBQ2I7O0FBRUQ7RUFDSSxnQkFBZTtFQUNmLGdDQUErQjtFQUMvQixlQ1QwQjtFRFcxQixtQkFBa0I7Q0FLckI7O0FFeUNHO0VGbkRKO0lBUVEsaUJBQWdCO0dBRXZCO0NHQ0E7O0FIQ0Q7RUFDSSxrQkFBaUI7Q0FTcEI7O0FFNkJHO0VGdkNKO0lBSVEsaUJBQWdCO0dBTXZCO0NHREE7O0FEOEJHO0VGdkNKO0lBUVEsa0JBQWlCO0dBRXhCO0NHS0E7O0FIRkQ7RUFDSSwwQkFBeUI7RUFDekIsbUJBQWtCO0VBQ2xCLGVDcEN1QjtFRHFDdkIsb0JBQW1CO0NBVXRCOztBRVlHO0VGMUJKO0lBT1EsaUJBQWdCO0lBQ2hCLHFCQUFvQjtHQU0zQjtDR0VBOztBRFVHO0VG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OEdDLFlBQUE7RWIwOEdDLGFBQWE7Q2F4OEdmOztBYjI4R0EsMEVhejhHdUI7QWIwOEd2QjtFQUNFLG9CQUFvQjtDRDlwSGxCOztBQ2lxSEo7RUFDRTtJQUNFLG9CQUFvQjtHQUNyQjtDYXI4R0g7O0FidzhHQTtFQUNFLHFCQUFxQjtDYXI4R3ZCOztBYnc4R0E7RWFyOEdJLGdCQUFXO0VBQ1gsb0JBQWtCO0VBQ2xCLFlBQVM7RUFDVCxtQkFBa0I7RUFDbEIsVUFBVTtFQUNiLDhGQUFBO0VBQUEsb0RBQUE7RWJ1OEdDLG1EQUEyQztVQUEzQywyQ0FBMkM7Q2FyOEc3Qzs7QWJ3OEdBO0VBQ0UsZ0JBQWdCO0NhcjhHbEI7O0FidzhHQTtFQUNFLGNBQWM7Q2FyOEdoQjs7QWJ3OEdBO0VhcjhHSSxtREFBOEI7VUFBOUIsMkNBQThCO0VBQ2pDLGNBQUE7RWJ1OEdDLHVDQUErQjtVQUEvQiwrQkFBK0I7Q2FyOEdqQzs7QWJ3OEdBO0VBQ0Usc0JBQXNCO0NhcjhHeEI7O0FidzhHQTtFQUNFLG1DQUEyQjtVQUEzQiwyQkFBMkI7Q2FuOEc3Qjs7QWJzOEdBLDJEYXA4R2U7QWJxOEdmO0VhbjhHQyxjQUFBO0VicThHQyxZQUFZO0NBQ2IiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpyb290IHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XHJcbn1cclxuXHJcbiosIDo6YmVmb3JlLCA6OmFmdGVyIHtcclxuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XHJcbiAgICBjb2xvcjogJGdyYXktZGFya2VzdDtcclxuICAgIFxyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAxMTMwcHgpIHtcclxuICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgfVxyXG59XHJcblxyXG5zZWN0aW9uIHtcclxuICAgIHBhZGRpbmc6IDEwZW0gMmVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICBwYWRkaW5nOiA4ZW0gMWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgcGFkZGluZzogNmVtIC41ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4ucHJlLWhlYWRpbmcge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiAkZ3JheS1kYXJrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjJlbTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuMTVlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgIH1cclxufVxyXG5cclxuLnNlY3QtaGVhZGluZyB7XHJcbiAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjJlbTtcclxuICAgIGNvbG9yOiAkZ3JheS1kYXJrZXI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMi4zZW07XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjFlbTtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogbm9ybWFsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS45ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICBmb250LXNpemU6IDEuN2VtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnktMzY5KSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcclxuICAgIH1cclxufVxyXG5cclxuLnNlY3QtaGVhZGluZy1pbWcge1xyXG4gICAgaGVpZ2h0OiAxM3B4O1xyXG4gICAgd2lkdGg6IDE0MnB4O1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvaGVhZGluZy1pbWcuc3ZnJyk7XHJcbiAgICBtYXJnaW46IDAgYXV0byAzZW0gYXV0bztcclxuICAgIG9wYWNpdHk6IC41O1xyXG59XHJcblxyXG4uc2VjdC1oZWFkaW5nLWltZy0tcHJvZ3JhbSwgXHJcbi5zZWN0LWhlYWRpbmctaW1nLS1jdXJyaWN1bHVtLCBcclxuLnNlY3QtaGVhZGluZy1pbWctLWNvbnRhY3R1cyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMGVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1ZW07XHJcbiAgICB9ICBcclxufVxyXG5cclxuLmhhbmRwcmludHMge1xyXG4gICAgaGVpZ2h0OiAxNDBweDtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2hhbmRwcmludHMtaGVhcnQuanBnJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IGJvdHRvbTtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAgIFxyXG4gICAgLy8gdGhlc2UgYWxsb3cgYmcgaW1ncyB0byBiZSByZXBlYXRlZCB3aXRob3V0IGNsaXBwaW5nLlxyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJvdW5kOyAvLyBvciBzcGFjZVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgIGhlaWdodDogMTAwcHg7ICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcblxyXG4vKiogSUUxMSBjYW5ub3QgaGF2ZSBhIHRleHQgbm9kZSBiZSBhIGdyaWQgY2VsbCAqKi9cclxuLmllIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgLW1zLWdyaWQtY29sdW1uOiAyO1xyXG4gICAgXHJcbiAgICAvKiogZmFsbGJhY2sgZm9yIGdyaWQtZ2FwICoqL1xyXG4gICAgbWFyZ2luOiAuNWVtO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC41ZW07XHJcbiAgICBcclxuICAgIC8qKiByZXNldCBtYXJnaW4gZm9yIHN1cHBvcnRlZCBicm93c2VycyAqKi9cclxuICAgIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG4ubGluZV9fc3ViaGRnIHtcclxuICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIC1tcy1ncmlkLWNvbHVtbnM6IDFmciBtYXgtY29udGVudCAxZnI7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBhdXRvIDFmcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBncmlkLWNvbHVtbi1nYXA6IC41ZW07XHJcbiAgICBcclxuICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAkZ3JheS1kYXJrO1xyXG4gICAgZm9udC1zaXplOiAxLjY1ZW07XHJcbiAgICBtYXJnaW46IDAgYXV0byAxZW0gYXV0bztcclxuICAgIGxldHRlci1zcGFjaW5nOiAuMDJlbTtcclxuICAgIHdvcmQtc3BhY2luZzogLjA1ZW07XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIC8qIGdlbmVyYXRlZCBjb250ZW50IHdvcmtzIHdpdGggZ3JpZCBidXQgaXQgbXVzdCBiZSBzZXQgYXMgZGlzcGxheTogYmxvY2sgKGlubGluZS1ibG9jayBtaWdodCBiZSBvayB0b28pKi9cclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBcclxuICAgICAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyoqIHRoaXMgbXVzdCBiZSB1c2VkIGFzIC1tcy1mbGV4LWFsaWduOiBjZW50ZXIgb24gdGhlIGdyaWQgcGFyZW50IGRvZXMgbm90IHdvcmsgKiovXHJcbiAgICAgICAgLW1zLWdyaWQtcm93LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBoZWlnaHQ6IC4zMTI1ZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICRhcXVhLCB0cmFuc3BhcmVudCk7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjYyNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgICAgLyogZ2VuZXJhdGVkIGNvbnRlbnQgd29ya3Mgd2l0aCBncmlkIGJ1dCBpdCBtdXN0IGJlIHNldCBhcyBkaXNwbGF5OiBibG9jayAoaW5saW5lLWJsb2NrIG1pZ2h0IGJlIG9rIHRvbykqL1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC1tcy1ncmlkLWNvbHVtbjogMztcclxuICAgICAgICBcclxuICAgICAgICAvKiogdGhpcyBtdXN0IGJlIHVzZWQgYXMgLW1zLWZsZXgtYWxpZ246IGNlbnRlciBvbiB0aGUgZ3JpZCBwYXJlbnQgZG9lcyBub3Qgd29yayAqKi9cclxuICAgICAgICAtbXMtZ3JpZC1yb3ctYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGhlaWdodDogLjMxMjVlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRhcXVhLCB0cmFuc3BhcmVudCk7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjYyNWVtO1xyXG4gICAgfVxyXG59XHJcbiIsIkBpbmNsdWRlIGJyZWFrcG9pbnQtc2V0KFwidG8gZW1zXCIsIHRydWUpO1xyXG5cclxuJGdyYXktbGlnaHQ6IGhzbCgwLCAwJSwgNjklKTtcclxuJGdyYXktbGlnaHRlcjogaHNsKDAsIDAlLCA4OCUpO1xyXG4kZ3JheTogaHNsKDAsIDAlLCA1MCUpO1xyXG4kZ3JheS1kYXJrOiBoc2woMCwgMCUsIDMxJSk7XHJcbiRncmF5LWRhcmtlcjogaHNsKDAsIDAlLCAyMCUpO1xyXG4kZ3JheS1kYXJrZXN0OiBoc2woMCwgMCUsIDEzJSk7XHJcblxyXG4kYmxhY2stbGlnaHRlcjogaHNsKDAsIDAlLCA3JSk7XHJcblxyXG4kcm95YWxibHVlOiBoc2woMjE5LCA3MCUsIDM1JSk7XHJcbiRhcXVhOiBoc2woMjAwLCA5OSUsIDQwJSk7XHJcbiRjb21wbGVtZW50LWFxdWE6IGhzbCgyMCwgOTklLCA0MCUpO1xyXG4kY29tcGxlbWVudC1yb3lhbGJsdWU6IGhzbCgzOSwgNzAlLCAzNSUpO1xyXG5cclxuJHBpbmstYnJ1c2g6IGhzbCgzNTksIDgyJSwgNzIlKTtcclxuJGJsdWUtYnJ1c2g6IGhzbCgyMDksIDMzJSwgNDQlKTtcclxuJGdyZWVuLWJydXNoOiBoc2woNzIsIDQ2JSwgNTUlKTtcclxuJG9yYW5nZS1icnVzaDogaHNsKDI3LCA3NyUsIDY1JSk7XHJcblxyXG4kcmVkLWhlYXJ0OiByZ2IoMTg2LDAsMCk7XHJcblxyXG4kaHVnZXN0LTEzMDA6IDEzMDBweDtcclxuJGh1Z2UtMTE3MDogMTE3MHB4O1xyXG4kbGFyZ2VyLTExMjA6IDExMjBweDtcclxuJGxhcmdlLTk4MDogOTgwcHg7XHJcbiRtb2JpbGUtaGFtYnVyZ2VyOiA5MjBweDtcclxuJG1lZGl1bS04NDA6IDg0MHB4O1xyXG4kbWVkaXVtOiA3ODBweDtcclxuJG1lZGl1bS03NjA6IDc2MHB4O1xyXG4kbWVkaXVtLXNtYWxsLTcwMDogNzAwcHg7XHJcbiRzbWFsbC02MTU6IDYxNXB4O1xyXG4kc21hbGwtNTYwOiA1NjBweDtcclxuJHNtYWxsZXItNDUwOiA0NTBweDtcclxuJHNtYWxsZXItNDAwOiA0MDBweDtcclxuJHRpbnktMzY5OiAzNjlweDtcclxuXHJcblxyXG4iLCIvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERlZmF1bHQgVmFyaWFibGVzXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiRCcmVha3BvaW50LVNldHRpbmdzOiAoXG4gICdkZWZhdWx0IG1lZGlhJzogYWxsLFxuICAnZGVmYXVsdCBmZWF0dXJlJzogbWluLXdpZHRoLFxuICAnZGVmYXVsdCBwYWlyJzogd2lkdGgsXG5cbiAgJ2ZvcmNlIGFsbCBtZWRpYSB0eXBlJzogZmFsc2UsXG4gICd0byBlbXMnOiBmYWxzZSxcbiAgJ3RyYW5zZm9ybSByZXNvbHV0aW9ucyc6IHRydWUsXG5cbiAgJ25vIHF1ZXJpZXMnOiBmYWxzZSxcbiAgJ25vIHF1ZXJ5IGZhbGxiYWNrcyc6IGZhbHNlLFxuXG4gICdiYXNlIGZvbnQgc2l6ZSc6IDE2cHgsXG5cbiAgJ2xlZ2FjeSBzeW50YXgnOiBmYWxzZVxuKTtcblxuJGJyZWFrcG9pbnQ6ICgpICFkZWZhdWx0O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEltcG9ydHNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGltcG9ydCBcImJyZWFrcG9pbnQvc2V0dGluZ3NcIjtcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvY29udGV4dCc7XG5AaW1wb3J0ICdicmVha3BvaW50L2hlbHBlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9wYXJzZXJzJztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvbm8tcXVlcnknO1xuXG5AaW1wb3J0ICdicmVha3BvaW50L3Jlc3BvbmQtdG8nO1xuXG5AaW1wb3J0IFwiYnJlYWtwb2ludC9sZWdhY3ktc2V0dGluZ3NcIjtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBCcmVha3BvaW50IE1peGluXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuQG1peGluIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XG4gIEBpbmNsdWRlIGxlZ2FjeS1zZXR0aW5ncy13YXJuaW5nO1xuXG4gIC8vIFJlc2V0IGNvbnRleHRzXG4gIEBpbmNsdWRlIHByaXZhdGUtYnJlYWtwb2ludC1yZXNldC1jb250ZXh0cygpO1xuXG4gICRicmVha3BvaW50OiBicmVha3BvaW50KCRxdWVyeSwgZmFsc2UpO1xuXG4gICRxdWVyeS1zdHJpbmc6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeScpO1xuICAkcXVlcnktZmFsbGJhY2s6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdmYWxsYmFjaycpO1xuXG4gICRwcml2YXRlLWJyZWFrcG9pbnQtY29udGV4dC1ob2xkZXI6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdjb250ZXh0IGhvbGRlcicpICFnbG9iYWw7XG4gICRwcml2YXRlLWJyZWFrcG9pbnQtcXVlcnktY291bnQ6IG1hcC1nZXQoJGJyZWFrcG9pbnQsICdxdWVyeSBjb3VudCcpICFnbG9iYWw7XG5cbiAgLy8gQWxsb3cgZm9yIGFuIGFzLW5lZWRlZCBvdmVycmlkZSBvciB1c2FnZSBvZiBubyBxdWVyeSBmYWxsYmFjay5cbiAgQGlmICRuby1xdWVyeSAhPSBmYWxzZSB7XG4gICAgJHF1ZXJ5LWZhbGxiYWNrOiAkbm8tcXVlcnk7XG4gIH1cblxuICBAaWYgJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlIHtcbiAgICAkY29udGV4dC1zZXR0ZXI6IHByaXZhdGUtYnJlYWtwb2ludC1zZXQtY29udGV4dCgnbm8tcXVlcnknLCAkcXVlcnktZmFsbGJhY2spO1xuICB9XG5cbiAgLy8gUHJpbnQgT3V0IFF1ZXJ5IFN0cmluZ1xuICBAaWYgbm90IGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyaWVzJykge1xuICAgIEBtZWRpYSAjeyRxdWVyeS1zdHJpbmd9IHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBpZiBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykgIT0gZmFsc2Ugb3IgYnJlYWtwb2ludC1nZXQoJ25vIHF1ZXJpZXMnKSA9PSB0cnVlIHtcblxuICAgICR0eXBlOiB0eXBlLW9mKGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSk7XG4gICAgJHByaW50OiBmYWxzZTtcblxuICAgIEBpZiAoJHR5cGUgPT0gJ2Jvb2wnKSB7XG4gICAgICAkcHJpbnQ6IHRydWU7XG4gICAgfVxuICAgIEBlbHNlIGlmICgkdHlwZSA9PSAnc3RyaW5nJykge1xuICAgICAgQGlmICRxdWVyeS1mYWxsYmFjayA9PSBicmVha3BvaW50LWdldCgnbm8gcXVlcnkgZmFsbGJhY2tzJykge1xuICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIGlmICgkdHlwZSA9PSAnbGlzdCcpIHtcbiAgICAgIEBlYWNoICR3cmFwcGVyIGluIGJyZWFrcG9pbnQtZ2V0KCdubyBxdWVyeSBmYWxsYmFja3MnKSB7XG4gICAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gJHdyYXBwZXIge1xuICAgICAgICAgICRwcmludDogdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFdyaXRlIEZhbGxiYWNrXG4gICAgQGlmICgkcXVlcnktZmFsbGJhY2sgIT0gZmFsc2UpIGFuZCAoJHByaW50ID09IHRydWUpIHtcbiAgICAgICR0eXBlLWZhbGxiYWNrOiB0eXBlLW9mKCRxdWVyeS1mYWxsYmFjayk7XG5cbiAgICAgIEBpZiAoJHR5cGUtZmFsbGJhY2sgIT0gJ2Jvb2wnKSB7XG4gICAgICAgICN7JHF1ZXJ5LWZhbGxiYWNrfSAmIHtcbiAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgQGVsc2Uge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcbn1cblxuXG5AbWl4aW4gbXEoJHF1ZXJ5LCAkbm8tcXVlcnk6IGZhbHNlKSB7XG4gIEBpbmNsdWRlIGJyZWFrcG9pbnQoJHF1ZXJ5LCAkbm8tcXVlcnkpIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwiOnJvb3Qge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuKiwgOjpiZWZvcmUsIDo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzIxMjEyMTtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzAuNjI1ZW0pIHtcbiAgYm9keSB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG5zZWN0aW9uIHtcbiAgcGFkZGluZzogMTBlbSAyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgc2VjdGlvbiB7XG4gICAgcGFkZGluZzogOGVtIDFlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICBzZWN0aW9uIHtcbiAgICBwYWRkaW5nOiA2ZW0gLjVlbTtcbiAgfVxufVxuXG4ucHJlLWhlYWRpbmcge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBtYXJnaW4tYm90dG9tOiAuMmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5wcmUtaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAuMTVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5wcmUtaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAuOWVtO1xuICB9XG59XG5cbi5zZWN0LWhlYWRpbmcge1xuICBmb250LXNpemU6IDIuNWVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIG1hcmdpbi1ib3R0b206IC4yZW07XG4gIGNvbG9yOiAjMzMzMzMzO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5zZWN0LWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMi4zZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5zZWN0LWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMi4xZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc2VjdC1oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDEuOWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuc2VjdC1oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDEuN2VtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyMy4wNjI1ZW0pIHtcbiAgLnNlY3QtaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgfVxufVxuXG4uc2VjdC1oZWFkaW5nLWltZyB7XG4gIGhlaWdodDogMTNweDtcbiAgd2lkdGg6IDE0MnB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvaGVhZGluZy1pbWcuc3ZnXCIpO1xuICBtYXJnaW46IDAgYXV0byAzZW0gYXV0bztcbiAgb3BhY2l0eTogLjU7XG59XG5cbi5zZWN0LWhlYWRpbmctaW1nLS1wcm9ncmFtLFxuLnNlY3QtaGVhZGluZy1pbWctLWN1cnJpY3VsdW0sXG4uc2VjdC1oZWFkaW5nLWltZy0tY29udGFjdHVzIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuc2VjdC1oZWFkaW5nLWltZy0tcHJvZ3JhbSxcbiAgLnNlY3QtaGVhZGluZy1pbWctLWN1cnJpY3VsdW0sXG4gIC5zZWN0LWhlYWRpbmctaW1nLS1jb250YWN0dXMge1xuICAgIG1hcmdpbi1ib3R0b206IDVlbTtcbiAgfVxufVxuXG4uaGFuZHByaW50cyB7XG4gIGhlaWdodDogMTQwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9oYW5kcHJpbnRzLWhlYXJ0LmpwZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBib3R0b207XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJvdW5kO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuaGFuZHByaW50cyB7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgfVxufVxuXG4vKiogSUUxMSBjYW5ub3QgaGF2ZSBhIHRleHQgbm9kZSBiZSBhIGdyaWQgY2VsbCAqKi9cbi5pZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDI7XG4gIC8qKiBmYWxsYmFjayBmb3IgZ3JpZC1nYXAgKiovXG4gIG1hcmdpbjogLjVlbTtcbiAgbWFyZ2luLWxlZnQ6IC41ZW07XG4gIC8qKiByZXNldCBtYXJnaW4gZm9yIHN1cHBvcnRlZCBicm93c2VycyAqKi9cbn1cblxuQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gIC5pZSB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbi5saW5lX19zdWJoZGcge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogMWZyIG1heC1jb250ZW50IDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgYXV0byAxZnI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdyaWQtY29sdW1uLWdhcDogLjVlbTtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjNGY0ZjRmO1xuICBmb250LXNpemU6IDEuNjVlbTtcbiAgbWFyZ2luOiAwIGF1dG8gMWVtIGF1dG87XG4gIGxldHRlci1zcGFjaW5nOiAuMDJlbTtcbiAgd29yZC1zcGFjaW5nOiAuMDVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5saW5lX19zdWJoZGcge1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG4gIH1cbn1cblxuLmxpbmVfX3N1YmhkZzo6YmVmb3JlIHtcbiAgLyogZ2VuZXJhdGVkIGNvbnRlbnQgd29ya3Mgd2l0aCBncmlkIGJ1dCBpdCBtdXN0IGJlIHNldCBhcyBkaXNwbGF5OiBibG9jayAoaW5saW5lLWJsb2NrIG1pZ2h0IGJlIG9rIHRvbykqL1xuICBkaXNwbGF5OiBibG9jaztcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAvKiogdGhpcyBtdXN0IGJlIHVzZWQgYXMgLW1zLWZsZXgtYWxpZ246IGNlbnRlciBvbiB0aGUgZ3JpZCBwYXJlbnQgZG9lcyBub3Qgd29yayAqKi9cbiAgLW1zLWdyaWQtcm93LWFsaWduOiBjZW50ZXI7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogLjMxMjVlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsICMwMTg4Y2IsIHRyYW5zcGFyZW50KTtcbiAgYm9yZGVyLXJhZGl1czogLjYyNWVtO1xufVxuXG4ubGluZV9fc3ViaGRnOjphZnRlciB7XG4gIC8qIGdlbmVyYXRlZCBjb250ZW50IHdvcmtzIHdpdGggZ3JpZCBidXQgaXQgbXVzdCBiZSBzZXQgYXMgZGlzcGxheTogYmxvY2sgKGlubGluZS1ibG9jayBtaWdodCBiZSBvayB0b28pKi9cbiAgZGlzcGxheTogYmxvY2s7XG4gIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgLyoqIHRoaXMgbXVzdCBiZSB1c2VkIGFzIC1tcy1mbGV4LWFsaWduOiBjZW50ZXIgb24gdGhlIGdyaWQgcGFyZW50IGRvZXMgbm90IHdvcmsgKiovXG4gIC1tcy1ncmlkLXJvdy1hbGlnbjogY2VudGVyO1xuICBjb250ZW50OiBcIlwiO1xuICBoZWlnaHQ6IC4zMTI1ZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzAxODhjYiwgdHJhbnNwYXJlbnQpO1xuICBib3JkZXItcmFkaXVzOiAuNjI1ZW07XG59XG5cbi5oZWFkZXIge1xuICAvKiBwaG9uZSBpY29uIHRleHQgICovXG59XG5cbi5oZWFkZXJfX3RvcC1zZWN0IHtcbiAgYm9yZGVyLXRvcDogNXB4IHNvbGlkICMzMzMzMzM7XG59XG5cbi5oZWFkZXJfX3RvcC1zZWN0LWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmhlYWRlcl9fdG9wLWJhciB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9jbmVyLTUzNi5wbmdcIikgbm8tcmVwZWF0IHRvcCBjZW50ZXI7XG4gIGhlaWdodDogMzlweDtcbiAgd2lkdGg6IDUzNnB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHJpZ2h0OiAtNTV2dztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDgwZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgcmlnaHQ6IC01MHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MC42MjVlbSkge1xuICAuaGVhZGVyX190b3AtYmFyIHtcbiAgICByaWdodDogLTQ1dnc7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYzLjc1ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgcmlnaHQ6IC00MHZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgcmlnaHQ6IC0zNXZ3O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmhlYWRlcl9fdG9wLWJhciB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2NuZXItMzAxLnBuZ1wiKSBuby1yZXBlYXQgdG9wIGNlbnRlcjtcbiAgICByaWdodDogLTU3dnc7XG4gICAgd2lkdGg6IDMwMXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0NWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXIge1xuICAgIHJpZ2h0OiAtNDd2dztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXIge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcmlnaHQ6IDA7XG4gIH1cbn1cblxuLmhlYWRlcl9fdG9wLWJhci1jb250YWN0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogNGVtO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVkoLTVweCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWShjYWxjKC01MCUgLSA1cHgpKTtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXItY29udGFjdCB7XG4gICAgcmlnaHQ6IDZlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXItY29udGFjdCB7XG4gICAgbGVmdDogLjVlbTtcbiAgICB6LWluZGV4OiA1NTY1O1xuICB9XG59XG5cbi5oZWFkZXJfX3RvcC1iYXItaXRlbSArIC5oZWFkZXJfX3RvcC1iYXItaXRlbSB7XG4gIG1hcmdpbi1sZWZ0OiAxLjVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUyLjVlbSkge1xuICAuaGVhZGVyX190b3AtYmFyLWl0ZW06bGFzdC1vZi10eXBlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5oZWFkZXJfX3RvcC1iYXItaXRlbTpmaXJzdC1vZi10eXBlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XG59XG5cbi5oZWFkZXJfX3RvcC1iYXItaXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5oZWFkZXJfX3RvcC1iYXItaWNvbiB7XG4gIGZpbGw6ICMwMTg4Y2I7XG4gIG1hcmdpbi1yaWdodDogLjNlbTtcbiAgd2lkdGg6IDEuMmVtO1xuICBoZWlnaHQ6IDEuMmVtO1xufVxuXG4uaGVhZGVyX19waG9uZS1pY29uIHtcbiAgZm9udC1zaXplOiAuOWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX3Bob25lLWljb24ge1xuICAgIGZvbnQtc2l6ZTogLjhlbTtcbiAgfVxufVxuXG4uaGVhZGVyX190b3AtYmFyLWxpbmsge1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5oZWFkZXJfX3RvcC1iYXItbGluazpob3ZlciB7XG4gIGNvbG9yOiAjZDlkOWQ5O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX3RvcC1iYXItbGluayB7XG4gICAgY29sb3I6ICMzMzM7XG4gIH1cbiAgLmhlYWRlcl9fdG9wLWJhci1saW5rOmhvdmVyIHtcbiAgICBjb2xvcjogZ3JheTtcbiAgfVxufVxuXG4uaGVhZGVyX19tYWluLXNlY3Qge1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAyZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2My43NWVtKSB7XG4gIC5oZWFkZXJfX21haW4tc2VjdCB7XG4gICAgcGFkZGluZzogMCAxZW07XG4gIH1cbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzdweCk7XG4gIG1hcmdpbi1ib3R0b206IC0zMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5oZWFkZXJfX2xvZ28ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxufVxuXG4uaGVhZGVyX19sb2dvLWltYWdlIHtcbiAgd2lkdGg6IDE1LjYyNWVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uaGVhZGVyX19uYXYtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5oZWFkZXJfX25hdi1pdGVtIHtcbiAgcGFkZGluZzogLjVlbSAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1pbjtcbn1cblxuLmhlYWRlcl9fbmF2LWl0ZW0gKyAuaGVhZGVyX19uYXYtaXRlbSB7XG4gIG1hcmdpbi1sZWZ0OiAxZW07XG59XG5cbi5oZWFkZXJfX25hdi1pY29uIHtcbiAgZmlsbDogIzMzMzMzMztcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG59XG5cbi5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAtMC4xODc1ZW0gMCAjMDE4OGNiO1xufVxuXG4uaGVhZGVyX19uYXYtaXRlbTpob3ZlciAuaGVhZGVyX19uYXYtbGluayB7XG4gIGNvbG9yOiAjMDE4OGNiO1xufVxuXG4uaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudCB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgLTAuMTg3NWVtIDAgIzAxODhjYjtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbn1cblxuLmhlYWRlcl9fbmF2LWxpbmsuY2xpY2tlZCB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICB0cmFuc2l0aW9uOiBub25lO1xufVxuXG4uaGVhZGVyX19uYXYtbGluayB7XG4gIGZvbnQtc2l6ZTogLjk1ZW07XG4gIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgY29sb3I6ICMzMzMzMzM7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLWluO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjMuNzVlbSkge1xuICAuaGVhZGVyX19uYXYtbGluayB7XG4gICAgZm9udC1zaXplOiAuODVlbTtcbiAgfVxufVxuXG4uaGVhZGVyLnN0aWNreSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICBib3gtc2hhZG93OiAwIDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB6LWluZGV4OiAxMDAxO1xufVxuXG4uaGVhZGVyLnN0aWNreSAuaGVhZGVyX190b3Atc2VjdCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5oZWFkZXJfX2xvZ28taW1hZ2Uge1xuICB3aWR0aDogMTMuNWVtO1xuICBoZWlnaHQ6IGF1dG87XG4gIHRyYW5zaXRpb246IGFsbCA2MDBtcyBlYXNlLW91dDtcbn1cblxuLmhlYWRlci5zdGlja3kgLmhlYWRlcl9fbG9nbyB7XG4gIHRyYW5zZm9ybTogbm9uZTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmhlYWRlci5zdGlja3kgLmhlYWRlcl9fbmF2LWxpbmsge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmhlYWRlci5zdGlja3kgLmhlYWRlcl9fbmF2LWl0ZW0uaGFzLXN1Ym1lbnU6OmFmdGVyIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19idXR0b24ge1xuICB0b3A6IDIwcHg7XG59XG5cbi5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcbiAgdG9wOiAyNXB4O1xufVxuXG4ubmF2aWdhdGlvbl9fY2hlY2tib3gge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5uYXZpZ2F0aW9uX19idXR0b24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiA0MHB4O1xuICAgIHJpZ2h0OiAxNXB4O1xuICAgIHotaW5kZXg6IDIwMDA7XG4gICAgYm94LXNoYWRvdzogMCAxLjVlbSAyZW0gcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkgYW5kIChtYXgtd2lkdGg6IDM4LjQzNzVlbSkge1xuICAubmF2aWdhdGlvbl9fYnV0dG9uIHtcbiAgICB0b3A6IDM1cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkgYW5kIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAubmF2aWdhdGlvbl9fYnV0dG9uIHtcbiAgICByaWdodDogNXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNDVweDtcbiAgICByaWdodDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQocmdiYSgyNywgNzEsIDE1MiwgMC45KSwgcmdiYSgxLCAxMzYsIDIwMywgMC45KSk7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gODAwbXMgY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIGFuZCAobWF4LXdpZHRoOiAzOC40Mzc1ZW0pIHtcbiAgLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICAgIHRvcDogNDBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSBhbmQgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcbiAgICByaWdodDogMTBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5oZWFkZXJfX25hdiB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgei1pbmRleDogMTUwMDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC8qIHVzZSB0cmFuc2Zvcm0gaW5zdGVhZCBmb3IgYSBzbW9vdGhlciBhbmltYXRpb24gYW5kIGFsc28gbW9yZSBwZXJmb3JtYW50ICAqL1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtODAwcHgpO1xuICAgIC8qIHB1dCB0aGUgd2lkdGggMTAwJSBoZXJlICAqL1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXJfX25hdi1saXN0IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudCB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcbiAgfVxuICAuaGVhZGVyX19uYXYtaXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbiAgICBtYXJnaW4tdG9wOiAuNWVtO1xuICAgIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogLjc1ZW0gMWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xuICB9XG4gIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMC43NWVtKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICB9XG4gIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICB9XG4gIC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIC5oZWFkZXJfX25hdi1saW5rIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAuaGVhZGVyX19uYXYtbGluay5jbGlja2VkIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1vdXQ7XG4gIH1cbiAgLmhlYWRlcl9fbmF2LWxpbmsge1xuICAgIGNvbG9yOiAjMWI0Nzk4O1xuICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcbiAgfVxuICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDcwKTtcbiAgfVxuICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNpdGlvbjogYWxsIDgwMG1zIGN1YmljLWJlemllcigwLjY4LCAtMC41NSwgMC4yNjUsIDEuNTUpO1xuICB9XG4gIC5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1saW5rLmNsaWNrZWQge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIC5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1saW5rIHtcbiAgICBjb2xvcjogIzFiNDc5ODtcbiAgfVxuICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtbGluay5jbGlja2VkIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtbGluay5jbGlja2VkIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAuaGVhZGVyLnN0aWNreSAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtaXRlbTpob3ZlciAuaGVhZGVyX19uYXYtbGluayB7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2ljb24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAxLjU1ZW07XG4gIH1cbiAgLm5hdmlnYXRpb25fX2ljb24sIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUsIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XG4gICAgd2lkdGg6IDEuNmVtO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUsIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDQwMG1zO1xuICAgIGxlZnQ6IDA7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2ljb246OmJlZm9yZSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjQ1ZW0pO1xuICB9XG4gIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAuNDVlbSk7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2J1dHRvbjpob3ZlciAubmF2aWdhdGlvbl9faWNvbjo6YmVmb3JlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuNTVlbSk7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2J1dHRvbjpob3ZlciAubmF2aWdhdGlvbl9faWNvbjo6YWZ0ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwLjU1ZW0pO1xuICB9XG4gIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkICsgLm5hdmlnYXRpb25fX2J1dHRvbiAubmF2aWdhdGlvbl9faWNvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbiAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgKyAubmF2aWdhdGlvbl9fYnV0dG9uIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSByb3RhdGUoMTM1ZGVnKTtcbiAgfVxuICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCArIC5uYXZpZ2F0aW9uX19idXR0b24gLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC0xMzVkZWcpO1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDMyMHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDU2OHB4KSBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gIC5oZWFkZXJfX25hdi1saW5rIHtcbiAgICBmb250LXNpemU6IC44ZW07XG4gIH1cbiAgLmhlYWRlcl9fbmF2LWl0ZW0ge1xuICAgIHBhZGRpbmc6IC41ZW0gLjc1ZW07XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzc1cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNjY3cHgpIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlYWRlcl9fbmF2LWxpbmsge1xuICAgIGZvbnQtc2l6ZTogLjgyZW07XG4gIH1cbiAgLmhlYWRlcl9fbmF2LWl0ZW0ge1xuICAgIHBhZGRpbmc6IC41ZW0gLjc1ZW07XG4gIH1cbn1cblxuLmhlcm8tLW92ZXJmbG93IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5oZXJvX193cmFwIHtcbiAgaGVpZ2h0OiA3NXZoO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMC41KSksIHVybChcIi4uL2ltZy9oZXJvLXBhaWQuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMS4yNWVtKSB7XG4gIC5oZXJvX193cmFwIHtcbiAgICBoZWlnaHQ6IDU1dmg7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjAlIGNlbnRlcjtcbiAgfVxufVxuXG4uaGVyb19fY2VudGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgLyoqKiBUaGlzIHdhcyB0aGUgZml4IHRvIGtlZXAgdGhlIHN1YmhlYWRpbmcgZnJvbSB0ZXh0IHdyYXBwaW5nICoqKi9cbiAgd2lkdGg6IG1heC1jb250ZW50O1xufVxuXG4uaGVyb19faGVhZGluZyB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIGZvbnQtc2l6ZTogNS45ZW07XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5oZXJvX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDExLjZ2dztcbiAgfVxufVxuXG4uaGVyb19fc3ViaGVhZGluZyB7XG4gIGZvbnQtc2l6ZTogMy4zZW07XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLmhlcm9fX3N1YmhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogNi44dnc7XG4gIH1cbn1cblxuLmhlcm9fX3N1YmhlYWRpbmctLXNwYW4ge1xuICBjb2xvcjogIzAxOWNlOTtcbn1cblxuLmhlcm9fX3NwYW4ge1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IC45ZW07XG59XG5cbi8qKioqKioqIGlQaG9uZXMgbGFuZHNjYXBlICoqKioqKiovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA1NjhweCkgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcCB7XG4gICAgaGVpZ2h0OiA2NXZoO1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDM3NXB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDY2N3B4KSBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gIC5oZXJvX193cmFwIHtcbiAgICBoZWlnaHQ6IDY1dmg7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogNDE0cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNzM2cHgpIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlcm9fX3dyYXAge1xuICAgIGhlaWdodDogNjV2aDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzNzVweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA4MTJweCkgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcCB7XG4gICAgaGVpZ2h0OiA2NXZoO1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB9XG59XG5cbi8qKioqKioqIEdhbGF4eSBQaG9uZXMgbGFuZHNjYXBlICoqKioqKiovXG5AbWVkaWEgc2NyZWVuIGFuZCAoZGV2aWNlLXdpZHRoOiAzMjBweCkgYW5kIChkZXZpY2UtaGVpZ2h0OiA2NDBweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMikgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gIC5oZXJvX193cmFwIHtcbiAgICBoZWlnaHQ6IDY1dmg7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKGRldmljZS13aWR0aDogMzIwcHgpIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcCB7XG4gICAgaGVpZ2h0OiA2NXZoO1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChkZXZpY2Utd2lkdGg6IDM2MHB4KSBhbmQgKGRldmljZS1oZWlnaHQ6IDY0MHB4KSBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiA0KSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlcm9fX3dyYXAge1xuICAgIGhlaWdodDogNjV2aDtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcbiAgfVxufVxuXG4vKioqKioqKiBQaXhlbCBQaG9uZXMgbGFuZHNjYXBlICoqKioqKiovXG5AbWVkaWEgc2NyZWVuIGFuZCAoZGV2aWNlLXdpZHRoOiAzNjBweCkgYW5kIChkZXZpY2UtaGVpZ2h0OiA2NDBweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMykgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gIC5oZXJvX193cmFwIHtcbiAgICBoZWlnaHQ6IDY1dmg7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKGRldmljZS13aWR0aDogMzYwcHgpIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDQpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcCB7XG4gICAgaGVpZ2h0OiA2NXZoO1xuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB9XG59XG5cbi5icnVzaCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9icnVzaC1oZXJvLWJ0bS5wbmdcIik7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDYzcHg7XG59XG5cbi5idG46bGluaywgLmJ0bjp2aXNpdGVkIHtcbiAgZm9udC1zaXplOiAuOGVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDE4OGNiO1xuICBwYWRkaW5nOiAxZW0gMmVtO1xuICBib3JkZXItcmFkaXVzOiA5OWVtO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQsIHRyYW5zZm9ybSAxNTBtcyBsaW5lYXI7XG59XG5cbi5idG46bGluazpob3ZlciwgLmJ0bjp2aXNpdGVkOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAxNjY5ODtcbn1cblxuLmJ0bjpsaW5rOmFjdGl2ZSwgLmJ0bjp2aXNpdGVkOmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMnB4KTtcbn1cblxuLmNhcmRzX19idG4tMjpsaW5rLCAuY2FyZHNfX2J0bi0yOnZpc2l0ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgYm94LXNoYWRvdzogMXB4IDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjQpO1xufVxuXG4uY2FyZHNfX2J0bi0yOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgY29sb3I6ICNjY2NjY2M7XG4gIGJvcmRlci1jb2xvcjogI2NjY2NjYztcbn1cblxuLmNhcmRzX19idG4tMjphY3RpdmUge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIDJweCk7XG59XG5cbi5yZWdpc3RyYXRpb24ge1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgbWFyZ2luOiA1ZW0gYXV0byAyZW0gYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDEuMWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjMjIyO1xuICBwYWRkaW5nOiAxZW07XG4gIHdpZHRoOiA2MCU7XG59XG5cbi5jYXJkcyB7XG4gIC8qKiBmbGV4Ym94IGZhbGxiYWNrIGZvciBJRTExICoqL1xuICAvKiBGSVggRk9SIElFMTEgLSBqdXN0IHVzaW5nIHNjYWxlIGZvciBhbGwgYnJvd2VycyAqL1xufVxuXG4uY2FyZHNfX2hlYWRpbmctLXRocmVlIHtcbiAgbWFyZ2luOiA0ZW0gYXV0byAwIGF1dG87XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICB3aWR0aDogODAlO1xuICBmb250LXNpemU6IDEuNDVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmNhcmRzX19oZWFkaW5nLS10aHJlZSB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG4uY2FyZHNfX2Fib3V0LnVwZGF0ZSB7XG4gIG1hcmdpbi10b3A6IC41ZW07XG4gIG1hcmdpbi1ib3R0b206IC0xZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAxLjJlbTtcbn1cblxuLmNhcmRzX19hYm91dCB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIHdpZHRoOiA4MCU7XG4gIG1hcmdpbjogNmVtIGF1dG8gOGVtIGF1dG87XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLmNhcmRzX19hYm91dCB7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgbWFyZ2luOiA0ZW0gYXV0byA1ZW0gYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuY2FyZHNfX2Fib3V0IHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY2FyZHNfX2Fib3V0IHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLmNhcmRzX19tYWluLXdyYXAge1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jYXJkc19fZ3JpZCB7XG4gIC8qKiBmbGV4Ym94IGZhbGxiYWNrIGZvciBJRTExICoqL1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5Ac3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcbiAgLmNhcmRzX19ncmlkIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjgwcHgsIDFmcikpO1xuICAgIGdyaWQtZ2FwOiAyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjEuMjVlbSkge1xuICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcbiAgICAuY2FyZHNfX2dyaWQge1xuICAgICAgZ3JpZC1nYXA6IDFlbTtcbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM4Ljg3NWVtKSB7XG4gIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICAgIC5jYXJkc19fZ3JpZCB7XG4gICAgICBncmlkLWdhcDogM2VtIDFlbTtcbiAgICB9XG4gIH1cbn1cblxuLmNhcmRzX19ncmlkID4gKiB7XG4gIHdpZHRoOiAzMDBweDtcbiAgbWFyZ2luOiAxZW07XG59XG5cbkBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICAuY2FyZHNfX2dyaWQgPiAqIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuLmNhcmRzX193cmFwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM4Ljg3NWVtKSB7XG4gIC5jYXJkc19fd3JhcCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmNhcmRzX193cmFwIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxuXG4uY2FyZHNfX2ltYWdlLXdyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiAyO1xuICBib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMCAwO1xufVxuXG4uY2FyZHNfX2ltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5jYXJkc19fd2F2ZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4uY2FyZHNfX3dhdmU6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgaGVpZ2h0OiAxMnB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IC01cHgsIHRyYW5zcGFyZW50IDE0cHgsICNmZmYgMTZweCk7XG59XG5cbi5jYXJkc19fd2F2ZTo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAxNXB4LCAjZmZmIDEycHgsIHRyYW5zcGFyZW50IDEzcHgpO1xufVxuXG4uY2FyZHNfX2NvbnRlbnQge1xuICBwYWRkaW5nOiAxZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5jYXJkc19faWNvbiB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi5jYXJkc19faWNvbjo6YmVmb3JlIHtcbiAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gIGZvbnQtc2l6ZTogM2VtICFpbXBvcnRhbnQ7XG59XG5cbi5jYXJkc19faWNvbi5mbGF0aWNvbi1raW5kZXJnYXJ0ZW4ge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMTUpO1xuICAvKiY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgICAgZm9udC1zaXplOiAzLjJlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgIFxyXG4gICAgICAgIH0qL1xufVxuXG4uY2FyZHNfX3N1YmhlYWRpbmctYnJ1c2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xufVxuXG4uY2FyZHNfX3N1YmhlYWRpbmctYnJ1c2g6OmFmdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyN2Q3ZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiBcIlwiO1xuICBwYWRkaW5nOiAwO1xuICBtYXgtd2lkdGg6IDI3NHB4O1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvZm9vdGVyX3RpdGxlX2JnLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogbGVmdCBib3R0b207XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogNTUlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGhlaWdodDogMTRweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgLmNhcmRzX19zdWJoZWFkaW5nLWJydXNoOjphZnRlciB7XG4gICAgbWF4LXdpZHRoOiAyNDBweDtcbiAgICBsZWZ0OiA1MCU7XG4gIH1cbn1cblxuLmNhcmRzX19zdWJoZWFkaW5nLWJydXNoLS0yOjphZnRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YjcxOTU7XG59XG5cbi5jYXJkc19fc3ViaGVhZGluZy1icnVzaC0tMzo6YWZ0ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWNjMTU3O1xufVxuXG4uY2FyZHNfX3N1YmhlYWRpbmctYnJ1c2gtc3Bhbi0tMSwgLmNhcmRzX19zdWJoZWFkaW5nLWJydXNoLXNwYW4tLTIsIC5jYXJkc19fc3ViaGVhZGluZy1icnVzaC1zcGFuLS0zIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmNhcmRzX19zdWJoZWFkaW5nIHtcbiAgbWFyZ2luOiAuNWVtIDAgMWVtIDA7XG4gIGZvbnQtc2l6ZTogMS43ZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDYxLjI1ZW0pIHtcbiAgLmNhcmRzX19zdWJoZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIG1hcmdpbjogLjVlbSAwIC43NWVtIDA7XG4gIH1cbn1cblxuLmNhcmRzX19pY29uLXdyYXAge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uY2FyZHNfX2ljb246bm90KDpsYXN0LW9mLXR5cGUpIHtcbiAgbWFyZ2luLXJpZ2h0OiAuM2VtO1xufVxuXG4uY2FyZHNfX3N1bW1hcnkge1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmNhcmRzX19zdW1tYXJ5IHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIH1cbn1cblxuLmNhcmRzX19idG4ge1xuICBtYXJnaW46IDNlbSAwO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY2FyZHNfX2J0biB7XG4gICAgbWFyZ2luOiAyZW0gMDtcbiAgfVxufVxuXG4uY3VycmVudC1jYWwge1xuICAvKiB1c2UgYSBsb3cgbWF4LXdpZHRoIHRvIGtlZXAgdGhlIHRleHQgc2l6ZSB0aGUgc2FtZSB1bnRpbCA3MzBweCB0aGVuIGl0IHNjYWxlcyBkb3duIGFzIHRoZSB2aWV3cG9ydCB3aWR0aCBkZWNyZWFzZXMgKi9cbiAgbWF4LXdpZHRoOiA3MzBweDtcbiAgbWFyZ2luOiAwIGF1dG8gOGVtIGF1dG87XG4gIHBhZGRpbmc6IDAgMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY3VycmVudC1jYWwge1xuICAgIHBhZGRpbmc6IDAgLjVlbTtcbiAgfVxufVxuXG4uY3VycmVudC1jYWwtLXN2ZyB7XG4gIHdpZHRoOiA3NSU7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jdXJyZW50LWNhbC0tdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDNlbTtcbiAgdGV4dC1hbmNob3I6IG1pZGRsZTtcbn1cblxuLmN1cnJlbnQtY2FsLS1saXN0IHtcbiAgbWFyZ2luLXRvcDogMmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMS4yNWVtKSB7XG4gIC5jdXJyZW50LWNhbC0tbGlzdCB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICAuY3VycmVudC1jYWwtLWxpc3Qge1xuICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgfVxufVxuXG4uY3VycmVudC1jYWwtLWl0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAuNzVlbTtcbiAgZm9udC1zaXplOiAxLjA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMjAwJSkgc2NhbGUoMS4zKTtcbiAgdHJhbnNpdGlvbjogYWxsIDgwMG1zIGN1YmljLWJlemllcigwLjY4LCAtMC41NSwgMC4yNjUsIDEuNTUpO1xufVxuXG4uY3VycmVudC1jYWwtLWl0ZW0tLWZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLmN1cnJlbnQtY2FsLS1pdGVtOm50aC1vZi10eXBlKDIpIHtcbiAgdHJhbnNpdGlvbi1kZWxheTogNDAwbXM7XG59XG5cbi5jdXJyZW50LWNhbC0taXRlbTpudGgtb2YtdHlwZSgzKSB7XG4gIHRyYW5zaXRpb24tZGVsYXk6IDgwMG1zO1xufVxuXG4uY3VycmVudC1jYWwtLWl0ZW06bnRoLW9mLXR5cGUoNCkge1xuICB0cmFuc2l0aW9uLWRlbGF5OiAxMjAwbXM7XG59XG5cbi5jdXJyZW50LWNhbC0taXRlbTpudGgtb2YtdHlwZSg1KSB7XG4gIHRyYW5zaXRpb24tZGVsYXk6IDE2MDBtcztcbn1cblxuLmN1cnJlbnQtY2FsLS1pdGVtOm50aC1vZi10eXBlKDYpIHtcbiAgdHJhbnNpdGlvbi1kZWxheTogMjAwMG1zO1xufVxuXG4uY3VycmVudC1jYWwtLWl0ZW0tLXZpc2libGUge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMSk7XG59XG5cbi5jdXJyZW50LWNhbC0tc3BhbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLmN1cnJlbnQtY2FsLS1pbWcge1xuICB3aWR0aDogMTZweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoM3B4KTtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMS4yNWVtKSB7XG4gIC5jdXJyZW50LWNhbC0taW1nIHtcbiAgICB3aWR0aDogMTRweDtcbiAgfVxufVxuXG4uZ2FsbGVyeS5mdWxsd2lkdGgge1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uZ2FsbGVyeV9faW1hZ2Utd3JhcCB7XG4gIHdpZHRoOiAyNSU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmdhbGxlcnkuZnVsbHdpZHRoIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLmdhbGxlcnlfX2ltYWdlLXdyYXAge1xuICAgIHdpZHRoOiA1MCU7XG4gIH1cbiAgLmdhbGxlcnlfX2ltYWdlLXdyYXAtLW9yZGVyIHtcbiAgICBvcmRlcjogLTE7XG4gIH1cbn1cblxuLmdhbGxlcnlfX2ltYWdlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIG9wYWNpdHk6IC44NTtcbiAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uZ2FsbGVyeV9faW1hZ2U6aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDJlbTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nL2Zvb3Rlci0tYmcucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBib3JkZXItYm90dG9tOiA1cHggc29saWQgIzIxMjEyMTtcbiAgLyoqIGZsZXhib3ggZmFsbGJhY2sgZm9yIElFMTEgKiovXG4gIC8qIEZpeCBmb3IgaXBob25lIHNhZmFyaSBicm93c2VyIHNob3dpbmcgYmx1ZSB0ZXh0ICovXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAyZW0gMWVtO1xuICB9XG59XG5cbi5mb290ZXJfX3dyYXAge1xuICBjb2xvcjogI2IwYjBiMDtcbiAgbWFyZ2luLWJvdHRvbTogM2VtO1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5mb290ZXJfX2xvZ28td3JhcCB7XG4gIG1hcmdpbjogMWVtIDA7XG59XG5cbi5mb290ZXJfX2xvZ28ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5mb290ZXJfX2xvZ28gaW1nIHtcbiAgd2lkdGg6IDcwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4uZm9vdGVyX19tYWluIHtcbiAgLyoqIGZsZXhib3ggZmFsbGJhY2sgZm9yIElFMTEgKiovXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogM2VtIDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG5cbkBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICAuZm9vdGVyX19tYWluIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjUwcHgsIDFmcikpO1xuICAgIGdyaWQtZ2FwOiAyLjVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gICAgLmZvb3Rlcl9fbWFpbiB7XG4gICAgICBncmlkLWdhcDogMy41ZW07XG4gICAgfVxuICB9XG59XG5cbi5mb290ZXJfX21haW4gPiAqIHtcbiAgd2lkdGg6IDI1MHB4O1xuICBtYXJnaW46IDFlbTtcbn1cblxuQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gIC5mb290ZXJfX21haW4gPiAqIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cblxuLmZvb3Rlcl9fc3ViaGVhZGluZyB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDEuMmVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi5mb290ZXJfX3N1YmhlYWRpbmctc3BhbiB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbi5mb290ZXJfX21pc3Npb24ge1xuICBsaW5lLWhlaWdodDogMS41O1xufVxuXG4uZm9vdGVyX19ob3VycyB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICBtYXJnaW4tYm90dG9tOiAuOGVtO1xufVxuXG4uZm9vdGVyX19jbG9zaW5ncy1saW5rIHtcbiAgY29sb3I6ICMwMTg4Y2I7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcbn1cblxuLmZvb3Rlcl9fY2xvc2luZ3MtbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMDFhYWZlO1xufVxuXG4uZm9vdGVyX19jb250YWN0IHAge1xuICBtYXJnaW4tYm90dG9tOiAxLjJlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5mb290ZXJfX2NvbnRhY3QtaWNvbiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tcmlnaHQ6IC4yNWVtO1xuICB3aWR0aDogMS4xZW07XG4gIGhlaWdodDogMS4xZW07XG4gIGZpbGw6ICMwMTg4Y2I7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xufVxuXG4uZm9vdGVyX19jb250YWN0LWljb24tLTEge1xuICB3aWR0aDogMS4yZW07XG4gIGhlaWdodDogMS4yZW07XG59XG5cbi5mb290ZXJfX3RlbGVwaG9uZSBhIHtcbiAgY29sb3I6ICNiMGIwYjAgIWltcG9ydGFudDtcbn1cblxuLmZvb3Rlcl9fZmF4IHtcbiAgY29sb3I6ICNiMGIwYjAgIWltcG9ydGFudDtcbn1cblxuLmZvb3Rlcl9fc2hhcGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc2hhcGVfYm90dG9tLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IDQ1cHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuLmZvb3Rlcl9faWNvbi13cmFwIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuLmZvb3Rlcl9faWNvbiB7XG4gIGZpbGw6ICMwMTg4Y2I7XG4gIHdpZHRoOiAxLjNlbTtcbiAgaGVpZ2h0OiAxLjNlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDNweCk7XG59XG5cbi5mb290ZXJfX2JvdHRvbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMjEyMTI7XG4gIHBhZGRpbmc6IDJlbTtcbiAgY29sb3I6ICNiMGIwYjA7XG59XG5cbi5mb290ZXJfX2NvcHlyaWdodCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5mb290ZXJfX2NvcHlyaWdodCB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG4uZm9vdGVyX19kZXNpZ24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogLjllbTtcbn1cblxuLmZvb3Rlcl9fbWUsIC5mb290ZXJfX21lOnZpc2l0ZWQge1xuICBjb2xvcjogIzAxODhjYjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcbn1cblxuLmZvb3Rlcl9fbWU6aG92ZXIsIC5mb290ZXJfX21lOnZpc2l0ZWQ6aG92ZXIge1xuICBjb2xvcjogIzAxYWFmZTtcbn1cblxuLmZvb3Rlcl9fdGF4aWQge1xuICBtYXJnaW4tdG9wOiAyLjVlbTtcbn1cblxuLmpzLWJ0dC1idG4ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogLTIuN2VtO1xuICByaWdodDogLjVlbTtcbiAgd2lkdGg6IDEuN2VtO1xuICBoZWlnaHQ6IDEuN2VtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg3OSwgNzksIDc5LCAwLjgpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxLjdlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBvcGFjaXR5OiAwO1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSA1MDBtcyBlYXNlLW91dCwgYm90dG9tIDQwMG1zIGN1YmljLWJlemllcigwLjY0LCAwLjU3LCAwLjY3LCAxLjIzKSwgYmFja2dyb3VuZC1jb2xvciAzMDBtcyBlYXNlLW91dCwgY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiAxcHggZGFzaGVkICMwMTg4Y2I7XG4gIHotaW5kZXg6IDk1MDA7XG59XG5cbi5qcy1idHQtYnRuLWljb24ge1xuICBmaWxsOiAjZmZmO1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDVweCk7XG4gIHRyYW5zaXRpb246IGZpbGwgMzAwbXMgZWFzZS1pbjtcbn1cblxuLmpzLWJ0dC1idG46aG92ZXIgLmpzLWJ0dC1idG4taWNvbiB7XG4gIGZpbGw6ICMwMTg4Y2I7XG59XG5cbi5qcy1idHQtYnRuLmFjdGl2ZSB7XG4gIG9wYWNpdHk6IDE7XG4gIGJvdHRvbTogMS41ZW07XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xufVxuXG4uanMtYnR0LWJ0bjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xufVxuXG4uaGVyb19fd3JhcC0tdHdvIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLCAwLCAwLCAwLjMpLCByZ2JhKDAsIDAsIDAsIDAuMykpLCB1cmwoXCIuLi9pbWcvd2FsbC5qcGdcIik7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzEuMjVlbSkge1xuICAuaGVyb19fd3JhcC0tdHdvIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuMyksIHJnYmEoMCwgMCwgMCwgMC4zKSksIHVybChcIi4uL2ltZy93YWxsLS1zbWFsbC5qcGdcIik7XG4gIH1cbn1cblxuLmhlcm9fX2hkZyB7XG4gIGZvbnQtc2l6ZTogNC41ZW07XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuaGVyb19faGRnIHtcbiAgICBmb250LXNpemU6IDMuNzVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuaGVyb19faGRnIHtcbiAgICBmb250LXNpemU6IDMuMmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyMy4wNjI1ZW0pIHtcbiAgLmhlcm9fX2hkZyB7XG4gICAgZm9udC1zaXplOiAyLjZlbTtcbiAgfVxufVxuXG4uYWJvdXR1cyB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgLypcclxuICAgIFxyXG4gICAgVG8gbWFrZSB0aGUgZm9udC1zaXplIGNoYW5nZSBhIGxpdHRsZSBzbW9vdGhlciB3aGVuIHRoZSBzaXplIG9mIHRoZVxyXG4gICAgU1ZHIGVtYmVkZGVkIG9iamVjdCBjaGFuZ2VzL2luIG1lZGlhIHF1ZXJpZXMsIHlvdSBjYW4gYWRkIGluIGEgQ1NTIHRyYW5zaXRpb24gZWZmZWN0OlxyXG4gICAgXHJcbiAgICBzdmcgdGV4dCB7IHRyYW5zaXRpb246IGZvbnQtc2l6ZSAwLjVzOyB9XHJcbiAgICBcclxuICAgICovXG59XG5cbi5hYm91dHVzX193cmFwIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiA2ZW0gYXV0byAwIGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuYWJvdXR1c19fd3JhcCB7XG4gICAgd2lkdGg6IDgwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5hYm91dHVzX193cmFwIHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzOC40Mzc1ZW0pIHtcbiAgLmFib3V0dXNfX3dyYXAge1xuICAgIHdpZHRoOiA5NSU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmFib3V0dXNfX3dyYXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5hYm91dHVzX19zdmcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYWJvdXR1c19fdGV4dC1zdmcge1xuICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uYWJvdXR1c19fdHNwYW4tc3ZnIHtcbiAgZm9udC1zaXplOiAzNXB4O1xufVxuXG4uYWJvdXR1c19faW1hZ2Utc3ZnIHtcbiAgY2xpcC1wYXRoOiB1cmwoI3N2Zy1wYXRoKTtcbn1cblxuLmFib3V0dXNfX3NlY3Qge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gMWZyO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgZ3JpZC1nYXA6IDEuNWVtIDEuMjVlbTtcbiAgbWFyZ2luLWJvdHRvbTogM2VtO1xufVxuXG4uYWJvdXR1c19faW1nd3JhcCB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9hcXVhLWNpcmNsZS1idWJibGUucG5nXCIpIG5vLXJlcGVhdCB0b3AgbGVmdDtcbiAgaGVpZ2h0OiA2MHB4O1xuICB3aWR0aDogNThweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5hYm91dHVzX19pY29uIHtcbiAgZmlsbDogI2ZmZjtcbiAgd2lkdGg6IDEuNGVtO1xuICBoZWlnaHQ6IDEuNGVtO1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG4gIGdyaWQtcm93OiAxIC8gMjtcbn1cblxuLmFib3V0dXNfX2hkZyB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiAxLjZlbTtcbiAganVzdGlmeS1zZWxmOiBzdGFydDtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBncmlkLWNvbHVtbjogMiAvIDM7XG4gIGdyaWQtcm93OiAxIC8gMjtcbn1cblxuLmFib3V0dXNfX2hkZzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwO1xuICB3aWR0aDogMS41ZW07XG4gIGJvdHRvbTogLS41ZW07XG4gIGxlZnQ6IDA7XG59XG5cbi5hYm91dHVzX19zdW1tYXJ5IHtcbiAgZm9udC1zaXplOiAxLjFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgZ3JpZC1jb2x1bW46IDEgLyAzO1xuICBncmlkLXJvdzogMiAvIDM7XG59XG5cbi5hYm91dHVzX19wYXJhIHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmFib3V0dXNfX3BhcmEge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLmFib3V0dXNfX3NwYW4ge1xuICBmb250LXdlaWdodDogNzAwO1xufVxuXG4uYWJvdXR1c19fbGluayB7XG4gIGNvbG9yOiAjMDE4OGNiO1xuICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcbn1cblxuLmFib3V0dXNfX2xpbms6aG92ZXIge1xuICBjb2xvcjogIzAxNTU3Zjtcbn1cblxuLmFib3V0dXNfX3F1b3RlIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IDEuNGVtO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAzZW0gMDtcbiAgcGFkZGluZy1yaWdodDogNGVtO1xuICBwYWRkaW5nLWxlZnQ6IDJlbTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW4tY29udGVudCAxZnI7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IGFsbCA4MDBtcyBlYXNlLW91dDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNTAlKSBzY2FsZSgxLjQpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIC5hYm91dHVzX19xdW90ZSB7XG4gICAgZm9udC1zaXplOiAxLjNlbTtcbiAgICBtYXJnaW46IDIuNWVtIDA7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuYWJvdXR1c19fcXVvdGUge1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmFib3V0dXNfX3F1b3RlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAzZW07XG4gICAgcGFkZGluZy1sZWZ0OiAxLjVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLmFib3V0dXNfX3F1b3RlIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyZW07XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLmFib3V0dXNfX3F1b3RlIHtcbiAgICBmb250LXNpemU6IDEuMWVtO1xuICB9XG59XG5cbi5hYm91dHVzX19xdW90ZS52aXNpYmxlIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpO1xufVxuXG4uYWJvdXR1c19fcXVvdGUgc3BhbiB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBjb2xvcjogI2IwYjBiMDtcbiAgZm9udC1zaXplOiA4ZW07XG4gIGxpbmUtaGVpZ2h0OiAuNTtcbiAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC4yZW0pO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuYWJvdXR1c19fcXVvdGUgc3BhbiB7XG4gICAgbGluZS1oZWlnaHQ6IC40NTtcbiAgfVxufVxuXG4uaGVyb19fd3JhcC0tZml2ZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdGFmZi1tYXNrcy5qcGVnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0MiU7XG59XG5cbi8qKioqIGlQaG9uZXMgbGFuZHNjYXBlICoqKioqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzIwcHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogNTY4cHgpIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlcm9fX3dyYXAtLWZpdmUge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzNzVweCkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA2NjdweCkgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcC0tZml2ZSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDQxNHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDczNnB4KSBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMykgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gIC5oZXJvX193cmFwLS1maXZlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogMzc1cHgpIGFuZCAobWF4LWRldmljZS13aWR0aDogODEycHgpIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlcm9fX3dyYXAtLWZpdmUge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgfVxufVxuXG4vKioqKioqKiBHYWxheHkgUGhvbmVzIGxhbmRzY2FwZSAqKioqKioqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKGRldmljZS13aWR0aDogMzIwcHgpIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcCB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChkZXZpY2Utd2lkdGg6IDMyMHB4KSBhbmQgKGRldmljZS1oZWlnaHQ6IDY0MHB4KSBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlcm9fX3dyYXAge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAoZGV2aWNlLXdpZHRoOiAzNjBweCkgYW5kIChkZXZpY2UtaGVpZ2h0OiA2NDBweCkgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogNCkgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gIC5oZXJvX193cmFwIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIH1cbn1cblxuLyoqKioqKiogUGl4ZWwgUGhvbmVzIGxhbmRzY2FwZSAqKioqKioqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKGRldmljZS13aWR0aDogMzYwcHgpIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAuaGVyb19fd3JhcCB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChkZXZpY2Utd2lkdGg6IDM2MHB4KSBhbmQgKGRldmljZS1oZWlnaHQ6IDY0MHB4KSBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiA0KSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcbiAgLmhlcm9fX3dyYXAge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgfVxufVxuXG4uc3RhZmYge1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgbWFyZ2luOiAwIGF1dG8gMCBhdXRvO1xuICAvKioqKioqKiBURUFDSEVSUyAqKioqKiovXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmIHtcbiAgICBwYWRkaW5nOiA2ZW0gMDtcbiAgfVxufVxuXG4uc3RhZmZfX2Fib3V0IHtcbiAgZm9udC1zaXplOiAxLjFlbTtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiA2ZW0gYXV0byA4ZW0gYXV0bztcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuc3RhZmZfX2Fib3V0IHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBtYXJnaW46IDRlbSBhdXRvIDVlbSBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fYWJvdXQge1xuICAgIHdpZHRoOiA5MCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5zdGFmZl9fYWJvdXQge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICB3aWR0aDogOTUlO1xuICB9XG59XG5cbi5zdGFmZl9fb2ZmaWNlLXdyYXAge1xuICAvKioqKiogTk9UIC1tcy1kaXNwbGF5OiBncmlkICoqKiovXG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgLyoqIGlmIGl0cyBJRSAxMSB0aGVuIEkgaGF2ZSBhZGRlZCBtYXJnaW4gdG8gbWFrZSB1cCBmb3IgdGhpcyAqKi9cbiAgbWFyZ2luLWJvdHRvbTogMTVlbTtcbiAgbWFyZ2luLXRvcDogM2VtO1xuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG59XG5cbkBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICAuc3RhZmZfX29mZmljZS13cmFwIHtcbiAgICBncmlkLWNvbHVtbi1nYXA6IDEuNWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX19vZmZpY2Utd3JhcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBlbTtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgLyoqIGlmIGl0cyBJRSAxMSB0aGVuIEkgaGF2ZSBhZGRlZCBtYXJnaW4gdG8gbWFrZSB1cCBmb3IgdGhpcyAqKi9cbiAgfVxuICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcbiAgICAuc3RhZmZfX29mZmljZS13cmFwIHtcbiAgICAgIGdyaWQtZ2FwOiA3ZW0gMDtcbiAgICB9XG4gIH1cbn1cblxuLnN0YWZmX19pbmRpdmlkdWFsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMzAwcHg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2My43NWVtKSB7XG4gIC5zdGFmZl9faW5kaXZpZHVhbCB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NC4zNzVlbSkge1xuICAuc3RhZmZfX2luZGl2aWR1YWwge1xuICAgIHdpZHRoOiAyMjBweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5zdGFmZl9faW5kaXZpZHVhbCB7XG4gICAgd2lkdGg6IDE4MHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX19pbmRpdmlkdWFsIHtcbiAgICB3aWR0aDogMzAwcHg7XG4gICAgLyoqKiByZW1vdmUgdGhlIG1hcmdpbiBkZWNsYXJlZCBiZWxvdyB0aGUgQHN1cHBvcnRzIGZvciBicm93c2VycyB0aGF0IHN1cHBvcnQgZ3JpZCAqKiovXG4gICAgLyoqKiBmYWxsYmFjayBmb3IgZ3JpZC1nYXAgKiovXG4gICAgbWFyZ2luOiAwIGF1dG8gN2VtIGF1dG87XG4gIH1cbiAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gICAgLnN0YWZmX19pbmRpdmlkdWFsIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICB9XG4gIH1cbn1cblxuLnN0YWZmX19pbmRpdmlkdWFsOmZpcnN0LW9mLXR5cGUge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLXJvdzogMTtcbn1cblxuLnN0YWZmX19pbmRpdmlkdWFsOm50aC1vZi10eXBlKDIpIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX19pbmRpdmlkdWFsOm50aC1vZi10eXBlKDIpIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAyO1xuICB9XG59XG5cbi5zdGFmZl9faW5kaXZpZHVhbDpudGgtb2YtdHlwZSgzKSB7XG4gIC1tcy1ncmlkLWNvbHVtbjogMztcbiAgLW1zLWdyaWQtcm93OiAxO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDAuMzEyNWVtKSB7XG4gIC5zdGFmZl9faW5kaXZpZHVhbDpudGgtb2YtdHlwZSgzKSB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogMztcbiAgfVxufVxuXG4uc3RhZmZfX2ltYWdlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uc3RhZmZfX3N1bW1hcnkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogLTEyJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMmVtO1xuICBsZWZ0OiAxMCU7XG4gIHJpZ2h0OiAxMCU7XG4gIHotaW5kZXg6IDM7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA2My43NWVtKSB7XG4gIC5zdGFmZl9fc3VtbWFyeSB7XG4gICAgYm90dG9tOiAtMTUlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NC4zNzVlbSkge1xuICAuc3RhZmZfX3N1bW1hcnkge1xuICAgIHBhZGRpbmc6IDEuMmVtIDFlbTtcbiAgICBib3R0b206IC0xMiU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAuc3RhZmZfX3N1bW1hcnkge1xuICAgIGxlZnQ6IDUlO1xuICAgIHJpZ2h0OiA1JTtcbiAgICBib3R0b206IC0xNC41JTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDAuMzEyNWVtKSB7XG4gIC5zdGFmZl9fc3VtbWFyeSB7XG4gICAgcGFkZGluZzogMmVtO1xuICAgIGJvdHRvbTogLTEyJTtcbiAgICBsZWZ0OiAxMCU7XG4gICAgcmlnaHQ6IDEwJTtcbiAgfVxufVxuXG4uc3RhZmZfX3N1bW1hcnktLW5vYWJzb2x1dGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogYXV0bztcbiAgbGVmdDogYXV0bztcbiAgcmlnaHQ6IGF1dG87XG4gIGJvdHRvbTogYXV0bztcbiAgd2lkdGg6IDUwJTtcbiAgcGFkZGluZzogMmVtO1xuICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBtYXJnaW46IDMuNWVtIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5zdGFmZl9fc3VtbWFyeS0tbm9hYnNvbHV0ZSB7XG4gICAgcGFkZGluZzogMS41ZW0gMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyMy4wNjI1ZW0pIHtcbiAgLnN0YWZmX19zdW1tYXJ5LS1ub2Fic29sdXRlIHtcbiAgICBmb250LXNpemU6IC45MmVtO1xuICB9XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tbm9hYnNvbHV0ZTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGhlaWdodDogM3B4O1xuICBiYWNrZ3JvdW5kOiAjZjI3ZDdmO1xuICB6LWluZGV4OiAxO1xuICB0cmFuc2l0aW9uOiBoZWlnaHQgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tbm9hYnNvbHV0ZTpob3Zlcjo6YWZ0ZXIge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tbm9hYnNvbHV0ZTpob3ZlciAuc3RhZmZfX3RpdGxlIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tbm9hYnNvbHV0ZTpob3ZlciAuc3RhZmZfX2VtYWlsIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tbm9hYnNvbHV0ZTpob3ZlciAuc3RhZmZfX2ljb24ge1xuICBmaWxsOiAjZmZmO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXI6OmFmdGVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXIgLnN0YWZmX190aXRsZSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXIgLnN0YWZmX19lbWFpbCB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uc3RhZmZfX3N1bW1hcnk6aG92ZXIgLnN0YWZmX19pY29uIHtcbiAgZmlsbDogI2ZmZjtcbn1cblxuLnN0YWZmX19zdW1tYXJ5OjphZnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgaGVpZ2h0OiAzcHg7XG4gIGJhY2tncm91bmQ6ICNmMjdkN2Y7XG4gIHotaW5kZXg6IDE7XG4gIHRyYW5zaXRpb246IGhlaWdodCAzMDBtcyBlYXNlLW91dDtcbn1cblxuLnN0YWZmX19zdW1tYXJ5LS1ibHVlOjphZnRlciB7XG4gIGJhY2tncm91bmQ6ICM0YjcxOTU7XG59XG5cbi5zdGFmZl9fc3VtbWFyeS0tZ3JlZW46OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI2FjYzE1Nztcbn1cblxuLnN0YWZmX19zdW1tYXJ5LS1vcmFuZ2U6OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogI2VhOWY2MTtcbn1cblxuLnN0YWZmX19uYW1lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xufVxuXG4uc3RhZmZfX2VtYWlsIHtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAuMTVlbTtcbiAgY29sb3I6ICMyNjY1ZDk7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xufVxuXG4uc3RhZmZfX2VtYWlsOmhvdmVyIHtcbiAgY29sb3I6ICMxYjQ3OTg7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NC4zNzVlbSkge1xuICAuc3RhZmZfX2VtYWlsIHtcbiAgICBmb250LXNpemU6IDEuMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX19lbWFpbCB7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG4gIH1cbn1cblxuLnN0YWZmX19pY29uIHtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGZpbGw6ICMyNjY1ZDk7XG59XG5cbi5zdGFmZl9fdGl0bGUge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU0LjM3NWVtKSB7XG4gIC5zdGFmZl9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4wNWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0MC4zMTI1ZW0pIHtcbiAgLnN0YWZmX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgM2ZyO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnIgM2ZyO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBtYXJnaW4tYm90dG9tOiA0ZW07XG4gIG1hcmdpbi10b3A6IDNlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy1ncmlkIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG4gIH1cbn1cblxuLnN0YWZmX190ZWFjaGVycy1saXN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIC1tcy1ncmlkLXJvdzogMTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy1saXN0IHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgLW1zLWdyaWQtcm93OiAxO1xuICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcbiAgICBncmlkLXJvdzogMSAvIDI7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIH1cbn1cblxuLnN0YWZmX190ZWFjaGVycy1oZGcge1xuICBiYWNrZ3JvdW5kOiAjMDE4OGNiO1xuICBoZWlnaHQ6IDkzcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxpbmUtaGVpZ2h0OiA5M3B4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDEuM2VtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc3RhZmZfX3RlYWNoZXJzLWhkZyB7XG4gICAgZmxleDogMCAwIDEwMCU7XG4gIH1cbn1cblxuLnN0YWZmX190ZWFjaGVycy1oZGc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgaGVpZ2h0OiAxMnB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IC01cHgsIHRyYW5zcGFyZW50IDE0cHgsICNmOGY4ZjggMTZweCk7XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtaGRnOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgaGVpZ2h0OiAxMnB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggMjBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IDE1cHgsICNmOGY4ZjggMTJweCwgdHJhbnNwYXJlbnQgMTNweCk7XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtYnRtaGRnIHtcbiAgYmFja2dyb3VuZDogIzAxODhjYjtcbiAgaGVpZ2h0OiA5M3B4O1xuICBsZWZ0OiAwO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fdGVhY2hlcnMtYnRtaGRnIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtYnRtaGRnOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAtNXB4LCB0cmFuc3BhcmVudCAxNHB4LCAjZjhmOGY4IDE2cHgpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWJ0bWhkZzo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAxNXB4LCAjZjhmOGY4IDEycHgsIHRyYW5zcGFyZW50IDEzcHgpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWl0ZW0ge1xuICBwYWRkaW5nOiAxZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy1pdGVtIHtcbiAgICBwYWRkaW5nOiAxZW0gLjVlbTtcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWl0ZW0tLWZpcnN0IHtcbiAgbWFyZ2luLXRvcDogMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuc3RhZmZfX3RlYWNoZXJzLWl0ZW0tLWZpcnN0IHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtaXRlbS0tbGFzdCB7XG4gIG1hcmdpbi1ib3R0b206IGNhbGMoOTNweCArIDFlbSk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fdGVhY2hlcnMtaXRlbS0tbGFzdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn1cblxuLnN0YWZmX190ZWFjaGVycy1saW5rIHtcbiAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xuICBjb2xvcjogIzIxMjEyMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtbGluazpob3ZlciB7XG4gIGNvbG9yOiAjMDE4OGNiO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWxpbmstLWN1cnJlbnQge1xuICBjb2xvcjogIzAxODhjYjtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnN0YWZmX190ZWFjaGVycy1saXN0b3V0IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIDUwMG1zIGVhc2Utb3V0O1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWxpc3RvdXQtLXZpc2libGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLXRhYmxlLXdyYXAge1xuICBjb2xvcjogI2ZmZjtcbiAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICAtbXMtZ3JpZC1yb3c6IDE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNWVtKSB7XG4gIC5zdGFmZl9fdGVhY2hlcnMtdGFibGUtd3JhcCB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLWNvbHVtbjogMSAvIDI7XG4gICAgZ3JpZC1yb3c6IDIgLyAzO1xuICB9XG59XG5cbi5zdGFmZl9fdGVhY2hlcnMtdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLXRhYmxlIHRyOm50aC1vZi10eXBlKG9kZCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzO1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLXRhYmxlIHRyOm50aC1vZi10eXBlKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRmNGY0Zjtcbn1cblxuLnN0YWZmX190ZWFjaGVycy10YWJsZSB0aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDFlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLnN0YWZmX190ZWFjaGVycy10YWJsZSB0ZCB7XG4gIHBhZGRpbmc6IC41ZW0gLjVlbSAuNWVtIDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLnN0YWZmX190ZWFjaGVycy10YWJsZSB0ZCB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWljb24ge1xuICB3aWR0aDogMS41ZW07XG4gIGhlaWdodDogMS41ZW07XG4gIGZpbGw6ICNmZmY7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xuICB0cmFuc2l0aW9uOiBmaWxsIDM1MG1zIGVhc2Utb3V0O1xufVxuXG4uc3RhZmZfX3RlYWNoZXJzLWljb246aG92ZXIge1xuICBmaWxsOiAjMDE4OGNiO1xufVxuXG4vKiBNQVkgTkVFRCBUTyBBREQgT1ZFUkZMT1ctWDogSElEREVOIE9OIFRBQkxFIE9SIFRBQkxFIFdSQVBQRVIgRUxFTUVOVFMgU0lOQ0UgVEhFWSBBUkUgT0ZGU0NSRUVOIEhPUklaT05UQUxMWSBBTkQgVEhFIEFOSU1BVEVEIElOICovXG4uaGVyb19fd3JhcC0tdGhyZWUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuMyksIHJnYmEoMCwgMCwgMCwgMC4zKSksIHVybChcIi4uL2ltZy9zY2hvb2wtcm9vbS0tbGFyZ2UuanBnXCIpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMxLjI1ZW0pIHtcbiAgLmhlcm9fX3dyYXAtLXRocmVlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuMyksIHJnYmEoMCwgMCwgMCwgMC4zKSksIHVybChcIi4uL2ltZy9zY2hvb2wtcm9vbS0tc21hbGwuanBnXCIpO1xuICB9XG59XG5cbi5wcm9ncmFtIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICAvKiogZmxleGJveCBmaXggZm9yIElFMTEgKiovXG4gIC8qKiBmbGV4Ym94IGZpeCBmb3IgSUUxMSAqKi9cbiAgLyoqKiByb3RhdGlvbiBpcyA5MGRlZyBub3QgLTkwIGFuZCBtYXJnaW4gaXMgLTIyLCBub3QgLTEyICoqKi9cbn1cblxuLnByb2dyYW1fX3NwbGl0LS1vbmUge1xuICBkaXNwbGF5OiAtbXMtZ3JpZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgLW1zLWdyaWQtY29sdW1uczogMWZyIDJmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMmZyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICBtYXJnaW4tdG9wOiAyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtLW9uZSB7XG4gICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xuICAgIG1hcmdpbi1ib3R0b206IDE2ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX19zcGxpdC0tb25lIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxOGVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtLW9uZTo6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgYm90dG9tOiAtMTMuNWVtO1xuICB9XG59XG5cbi5wcm9ncmFtX19zcGxpdC1jZWxsLS1vbmUge1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIGdyaWQtY29sdW1uOiAxIC8gMjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtY2VsbC0tb25lIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICAgIC1tcy1ncmlkLXJvdzogMjtcbiAgICBncmlkLXJvdzogMiAvIDM7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxufVxuXG4ucHJvZ3JhbV9fdHJhbnNsYXRlIHtcbiAgcGFkZGluZzogMmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuODUpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIGJvcmRlci10b3A6IDVweCBzb2xpZCAjMDE4OGNiO1xuICBtYXgtd2lkdGg6IDc1MHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5wcm9ncmFtX190cmFuc2xhdGUge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICAucHJvZ3JhbV9fdHJhbnNsYXRlIHtcbiAgICBwYWRkaW5nOiAuNWVtO1xuICB9XG59XG5cbi5wcm9ncmFtX190cmFuc2xhdGUtLW9uZSB7XG4gIHdpZHRoOiAxNTAlO1xuICBsZWZ0OiAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5wcm9ncmFtX190cmFuc2xhdGUtLW9uZSB7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBsZWZ0OiAxMCU7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMxLjI1ZW0pIHtcbiAgLnByb2dyYW1fX3RyYW5zbGF0ZS0tb25lIHtcbiAgICB3aWR0aDogOTAlO1xuICAgIGxlZnQ6IDUlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAucHJvZ3JhbV9fdHJhbnNsYXRlLS1vbmUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5cbi5wcm9ncmFtX19oZWFkaW5nIHtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX19oZWFkaW5nIHtcbiAgICBtYXJnaW4tdG9wOiAuNWVtO1xuICB9XG59XG5cbi5wcm9ncmFtX19wYXJhYSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3BhcmFhIHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICB9XG59XG5cbi5wcm9ncmFtX19zcGxpdC1jZWxsLS10d28ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDI7XG4gIGdyaWQtY29sdW1uOiAyIC8gMztcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtY2VsbC0tdHdvIHtcbiAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xuICAgIC1tcy1ncmlkLXJvdzogMTtcbiAgICBncmlkLXJvdzogMSAvIDI7XG4gIH1cbn1cblxuLnByb2dyYW1fX3NwbGl0LWNlbGwtLXR3byBpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG4gIC8qIHRoaXMgaXMgbmVlZGVkIHRvIGdldCBpdCB0byBleHBhbmQgd2lkdGggdG8gdGhlIHJpZ2h0ICovXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xufVxuXG4ucHJvZ3JhbV9fc3BsaXQtLXR3byB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICAtbXMtZ3JpZC1jb2x1bW5zOiAyZnIgMWZyO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAxZnI7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LS10d28ge1xuICAgIC1tcy1ncmlkLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiAxNmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzMS4yNWVtKSB7XG4gIC5wcm9ncmFtX19zcGxpdC0tdHdvIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMmVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtLXR3byB7XG4gICAgLyogZXh0cmEgdG9wIG1hcmdpbiBhcyB0aGVyZSBsb29rcyBsaWtlIG1hcmdpbiBjb2xsYXBzaW5nICovXG4gICAgbWFyZ2luLXRvcDogMTZlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAyN2VtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyMy4wNjI1ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LS10d28ge1xuICAgIG1hcmdpbi1ib3R0b206IDI5ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3NwbGl0LWNlbGwtLXRocmVlIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICBncmlkLWNvbHVtbjogMSAvIDI7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LWNlbGwtLXRocmVlIHtcbiAgICAtbXMtZ3JpZC1yb3c6IDE7XG4gICAgZ3JpZC1yb3c6IDEgLyAyO1xuICB9XG59XG5cbi5wcm9ncmFtX19zcGxpdC1jZWxsLS10aHJlZSBpbWcge1xuICBtYXgtd2lkdGg6IDEyMCU7XG4gIGhlaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NwbGl0LWNlbGwtLXRocmVlIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wcm9ncmFtX19zcGxpdC1jZWxsLS1mb3VyIHtcbiAgLW1zLWdyaWQtY29sdW1uOiAyO1xuICBncmlkLWNvbHVtbjogMiAvIDM7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ3LjVlbSkge1xuICAucHJvZ3JhbV9fc3BsaXQtY2VsbC0tZm91ciB7XG4gICAgLW1zLWdyaWQtY29sdW1uOiAxO1xuICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcbiAgICAtbXMtZ3JpZC1yb3c6IDI7XG4gICAgZ3JpZC1yb3c6IDIgLyAzO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbn1cblxuLnByb2dyYW1fX3RyYW5zbGF0ZS0tdHdvIHtcbiAgLyogd2lkZXIgc2luY2UgaXQgaGFzIG1vcmUgY29udGVudCAqL1xuICB3aWR0aDogMTUwJTtcbiAgcmlnaHQ6IDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3RyYW5zbGF0ZS0tdHdvIHtcbiAgICB3aWR0aDogODAlO1xuICAgIGxlZnQ6IDEwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzEuMjVlbSkge1xuICAucHJvZ3JhbV9fdHJhbnNsYXRlLS10d28ge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbGVmdDogNSU7XG4gICAgLyoqKiB1c2luZyB0b3AgRE9FUyBOT1QgV09SSyBoZXJlICAqKiovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zMCUpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAucHJvZ3JhbV9fdHJhbnNsYXRlLS10d28ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG59XG5cbi5wcm9ncmFtX193cmFwIHtcbiAgcGFkZGluZy1yaWdodDogMmVtO1xuICBwYWRkaW5nLWxlZnQ6IDJlbTtcbiAgbWF4LXdpZHRoOiAxMjgwcHg7XG4gIG1hcmdpbjogOGVtIGF1dG8gNmVtIGF1dG87XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAucHJvZ3JhbV9fd3JhcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAucHJvZ3JhbV9fd3JhcCB7XG4gICAgcGFkZGluZy1yaWdodDogMWVtO1xuICAgIHBhZGRpbmctbGVmdDogMWVtO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAucHJvZ3JhbV9fd3JhcCB7XG4gICAgcGFkZGluZy1yaWdodDogLjVlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IC41ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLnByb2dyYW1fX3dyYXAge1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG59XG5cbi5wcm9ncmFtX19zZWN0IHtcbiAgbWFyZ2luOiAwIGF1dG8gM2VtIGF1dG87XG4gIHdpZHRoOiA4MCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSB7XG4gIC5wcm9ncmFtX19zZWN0IHtcbiAgICB3aWR0aDogOTAlO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLnByb2dyYW1fX3NlY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5wcm9ncmFtX19zZWN0LWZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUwO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDhlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLnByb2dyYW1fX3NlY3QtZmxleCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjVlbSkge1xuICAucHJvZ3JhbV9fc2VjdC1mbGV4IHtcbiAgICBib3JkZXI6IDA7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5wcm9ncmFtX19zZWN0LWZsZXg6bGFzdC1vZi10eXBlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG59XG5cbi5wcm9ncmFtX19zZWN0LWZsZXgtLXJldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX19zZWN0LWZsZXgtLXJldmVyc2Uge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cblxuLnByb2dyYW1fX3BhcmEtd3JhcCB7XG4gIGZsZXg6IDE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtIHtcbiAgICAvKiBvdmVycmlkZSBJRTExIHN0eWxlIGFib3ZlICovXG4gIH1cbiAgLnByb2dyYW1fX3BhcmEtd3JhcCB7XG4gICAgZmxleDogYXV0bztcbiAgfVxuICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcbiAgICAucHJvZ3JhbV9fcGFyYS13cmFwIHtcbiAgICAgIGZsZXg6IDE7XG4gICAgfVxuICB9XG59XG5cbi5wcm9ncmFtX19wYXJhIHtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgcGFkZGluZzogMWVtIDEuNWVtIDFlbSAxZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX19wYXJhIHtcbiAgICBwYWRkaW5nOiAxZW0gMWVtIDJlbSAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX19wYXJhIHtcbiAgICBmb250LXNpemU6IC45NWVtO1xuICB9XG59XG5cbi5wcm9ncmFtX19wYXJhLS1yZXZlcnNlIHtcbiAgcGFkZGluZzogMWVtIDFlbSAxZW0gMS41ZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX19wYXJhLS1yZXZlcnNlIHtcbiAgICBwYWRkaW5nOiAxZW0gMWVtIDJlbSAxZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX2xpbmsge1xuICBjb2xvcjogIzAxODhjYjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XG59XG5cbi5wcm9ncmFtX19saW5rOmhvdmVyIHtcbiAgY29sb3I6ICMwMTU1N2Y7XG59XG5cbi5wcm9ncmFtX19zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBtYXJnaW4tdG9wOiAxZW07XG59XG5cbi5wcm9ncmFtX190YWJsZS13cmFwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbGV4OiAxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDE4OGNiO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZS13cmFwIHtcbiAgICBwYWRkaW5nOiAyZW0gMWVtO1xuICB9XG59XG5cbi5wcm9ncmFtX190YWJsZS13cmFwOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMDAlO1xuICBtYXJnaW4tbGVmdDogLTEycHg7XG4gIHRvcDogNTAlO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgaGVpZ2h0OiAxMnB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IC01cHgsIHRyYW5zcGFyZW50IDE0cHgsICMwMTg4Y2IgMTZweCk7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZS13cmFwOjpiZWZvcmUge1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAtMTJweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgICAvKiBORUVEIFRPIFVORE8gVEhFIE5FR0FUSVZFIE1BUkdJTj8/ICovXG4gIH1cbn1cblxuLnByb2dyYW1fX3RhYmxlLXdyYXA6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xMnB4O1xuICB0b3A6IDUwJTtcbiAgcmlnaHQ6IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XG4gIGhlaWdodDogMTJweDtcbiAgYmFja2dyb3VuZC1zaXplOiA0MHB4IDIwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAxNXB4LCAjMDE4OGNiIDEycHgsIHRyYW5zcGFyZW50IDEzcHgpO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDguNzVlbSkge1xuICAucHJvZ3JhbV9fdGFibGUtd3JhcDo6YWZ0ZXIge1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAtMTJweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgICAvKiBORUVEIFRPIFVORE8gVEhFIE5FR0FUSVZFIE1BUkdJTj8/ICovXG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4Ljc1ZW0pIHtcbiAgLnByb2dyYW0ge1xuICAgIC8qIG92ZXJyaWRlIElFMTEgc3R5bGUgYWJvdmUgKi9cbiAgfVxuICAucHJvZ3JhbV9fdGFibGUtd3JhcCB7XG4gICAgZmxleDogYXV0bztcbiAgfVxuICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcbiAgICAucHJvZ3JhbV9fdGFibGUtd3JhcCB7XG4gICAgICBmbGV4OiAxO1xuICAgIH1cbiAgfVxufVxuXG4ucHJvZ3JhbV9fdGFibGUtd3JhcC0tcmV2ZXJzZTo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpO1xuICBtYXJnaW4tcmlnaHQ6IC0yMnB4O1xuICByaWdodDogLTEwMCU7XG4gIGxlZnQ6IDA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0OC43NWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZS13cmFwLS1yZXZlcnNlOjpiZWZvcmUge1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogLTEycHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xuICB9XG59XG5cbi5wcm9ncmFtX190YWJsZS13cmFwLS1yZXZlcnNlOjphZnRlciB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgbWFyZ2luLXJpZ2h0OiAtMjJweDtcbiAgcmlnaHQ6IC0xMDAlO1xuICBsZWZ0OiAwO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDguNzVlbSkge1xuICAucHJvZ3JhbV9fdGFibGUtd3JhcC0tcmV2ZXJzZTo6YWZ0ZXIge1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogLTEycHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xuICB9XG59XG5cbi5wcm9ncmFtX190YWJsZSB7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gIHRyYW5zaXRpb246IGFsbCA4MDBtcyBjdWJpYy1iZXppZXIoMC43NSwgLTAuNSwgMC4yNSwgMS4zMik7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMDAlKTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZSB7XG4gICAgZm9udC1zaXplOiAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAucHJvZ3JhbV9fdGFibGUge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3RhYmxlLS1yZXZlcnNlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0yMDAlKTtcbn1cblxuLnByb2dyYW1fX3RhYmxlLS12aXNpYmxlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICBvcGFjaXR5OiAxO1xufVxuXG4ucHJvZ3JhbV9fdGFibGUgdHI6bnRoLW9mLXR5cGUoMW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5wcm9ncmFtX190YWJsZSB0cjpudGgtb2YtdHlwZSgybikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG59XG5cbi5wcm9ncmFtX190YWJsZS1yb3ctLW9uZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMjdkN2YgIWltcG9ydGFudDtcbn1cblxuLnByb2dyYW1fX3RhYmxlLXJvdy0tdHdvIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRiNzE5NSAhaW1wb3J0YW50O1xufVxuXG4ucHJvZ3JhbV9fdGFibGUtcm93LS10aHJlZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhY2MxNTcgIWltcG9ydGFudDtcbn1cblxuLnByb2dyYW1fX3RhYmxlIHRoIHtcbiAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIEFyaWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5wcm9ncmFtX190YWJsZSB0aCB7XG4gICAgcGFkZGluZzogLjc1ZW07XG4gIH1cbn1cblxuLnByb2dyYW1fX3RhYmxlIHRkIHtcbiAgcGFkZGluZzogMWVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjguMTI1ZW0pIHtcbiAgLnByb2dyYW1fX3RhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiAuNzVlbTtcbiAgfVxufVxuXG4uaGVyb19fd3JhcC0tZm91ciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9jaGFsa2JvYXJkLS1ibHVlLWhpZ2hyZXMuanBnXCIpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMxLjI1ZW0pIHtcbiAgLmhlcm9fX3dyYXAtLWZvdXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9jaGFsa2JvYXJkLS1ibHVlLWhpZ2hyZXMtLXNtYWxsLmpwZ1wiKTtcbiAgfVxufVxuXG4uY3VycmljdWx1bSB7XG4gIHBhZGRpbmc6IDEwZW0gMCA2ZW0gMDtcbiAgLyogVGhpcyBpcyBuZWNlc3NhcnkgdG8gbWFrZSB0aGUgYm90dG9tIHJhdGlvIHNlY3Rpb24gZmlsbCB0aGUgZW50aXJlIGhlaWdodCBvZiBpdHMgY29udGVudHMgKi9cbiAgLyogZmxleGJveCBmaXggZm9yIElFMTEgKiovXG4gIC8qIFVzaW5nIHRyYW5zbGF0ZSBzaW5jZSBwYWRkaW5nIG1ha2VzIHRoZSBib3R0b20gc2VjdCBnbyBoaWdoZXIgYW5kIHRodXMgdGhlIGVudGlyZSBjdXJyaWN1bHVtX19zZWN0IGlzIGdvaW5nIGhpZ2hlciAqL1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDMuNzVlbSkge1xuICAuY3VycmljdWx1bSB7XG4gICAgcGFkZGluZzogOGVtIDAgM2VtIDA7XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX2hkZyB7XG4gIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBBcmlhbDtcbiAgZm9udC1zaXplOiA3ZW07XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uY3VycmljdWx1bV9fd3JhcCB7XG4gIG1heC13aWR0aDogMTI4MHB4O1xuICBtYXJnaW46IDZlbSBhdXRvIDAgYXV0bztcbn1cblxuLmN1cnJpY3VsdW1fX3NlY3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG4gIG1hcmdpbi1ib3R0b206IDhlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zZWN0IHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDAgYXV0byA4ZW0gYXV0bztcbiAgICBib3JkZXI6IDA7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDMuNzVlbSkge1xuICAuY3VycmljdWx1bV9fc2VjdCB7XG4gICAgd2lkdGg6IDkwJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzguNDM3NWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zZWN0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAzcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Ny41ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3NlY3Q6bm90KC5uby0tbGluZSk6OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwO1xuICAgIHdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHRvcDogLTRlbTtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9fc2VjdC0tcmV2ZXJzZSB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuY3VycmljdWx1bV9fc2VjdC0tcmV2ZXJzZSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xuICB9XG59XG5cbi5jdXJyaWN1bHVtX19pbWFnZSB7XG4gIG1heC13aWR0aDogNjAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAuY3VycmljdWx1bV9faW1hZ2Uge1xuICAgIC8qID8/Pz8/Pz8gKi9cbiAgICBmb250LXNpemU6IDEuNTVlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19pbWFnZSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbkBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICAuY3VycmljdWx1bV9fbWFpbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbi5jdXJyaWN1bHVtX190b3Age1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjI3ZDdmO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5jdXJyaWN1bHVtX190b3Age1xuICAgIHBhZGRpbmc6IDFlbSAyZW0gMmVtIDJlbTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuY3VycmljdWx1bV9fdG9wIHtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3RvcCB7XG4gICAgcGFkZGluZzogLjVlbTtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9fdG9wLS1ibHVlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRiNzE5NTtcbn1cblxuLmN1cnJpY3VsdW1fX3RvcC0tZ3JlZW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWNjMTU3O1xufVxuXG4uY3VycmljdWx1bV9fdG9wLS1vcmFuZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE5ZjYxO1xufVxuXG4uY3VycmljdWx1bV9faGVhZGluZyB7XG4gIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBjdXJzaXZlO1xuICBmb250LXNpemU6IDEuNmVtO1xuICBsaW5lLWhlaWdodDogMS42ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3LjVlbSkge1xuICAuY3VycmljdWx1bV9faGVhZGluZyB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY3VycmljdWx1bV9faGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxLjQ1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNDVlbTtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9faGVhcnRzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcbn1cblxuLmN1cnJpY3VsdW1fX2hlYXJ0cyBkaXYge1xuICB6LWluZGV4OiA5OTtcbn1cblxuLmN1cnJpY3VsdW1fX2hlYXJ0cyBkaXYgKyBkaXYge1xuICBtYXJnaW4tbGVmdDogLjFlbTtcbn1cblxuLmN1cnJpY3VsdW1fX2hlYXJ0czo6YmVmb3JlIHtcbiAgZmxleDogMCAwIDEwMCU7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMnB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDQ0JTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4uY3VycmljdWx1bV9faGVhcnRzLWljb24ge1xuICBoZWlnaHQ6IDE4cHg7XG4gIHdpZHRoOiAxOHB4O1xuICBmaWxsOiAjZmZmO1xufVxuXG4uY3VycmljdWx1bV9fc3VtbWFyeSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGZvbnQtc2l6ZTogMS4xZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSB7XG4gIC5jdXJyaWN1bHVtX19zdW1tYXJ5IHtcbiAgICBsaW5lLWhlaWdodDogMS4zNTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTcuNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19zdW1tYXJ5IHtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY3VycmljdWx1bV9fc3VtbWFyeSB7XG4gICAgZm9udC1zaXplOiAxLjA1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3N1bW1hcnkge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX2xpbmsge1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcbn1cblxuLmN1cnJpY3VsdW1fX2xpbms6aG92ZXIge1xuICBjb2xvcjogI2RkZDtcbn1cblxuLmN1cnJpY3VsdW1fX3ByaWNlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmZmO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICBwYWRkaW5nOiAuNzVlbSAxLjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDk5ZW07XG4gIG1hcmdpbjogMmVtIGF1dG8gMWVtIGF1dG87XG4gIGJveC1zaGFkb3c6IDFweCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzMDBtcyBlYXNlLW91dCxcciBjb2xvciAzMDBtcyBlYXNlLW91dCxcciB0cmFuc2Zvcm0gMTUwbXMgbGluZWFyO1xuICB3aWR0aDogMTBlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDcuNWVtKSB7XG4gIC5jdXJyaWN1bHVtX19wcmljZSB7XG4gICAgbWFyZ2luOiAyZW0gYXV0byAuNWVtIGF1dG87XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDM1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3ByaWNlIHtcbiAgICBtYXJnaW46IDJlbSBhdXRvIDFlbSBhdXRvO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuY3VycmljdWx1bV9fcHJpY2Uge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gICAgd2lkdGg6IDhlbTtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9fcHJpY2U6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBjb2xvcjogI2YyN2Q3Zjtcbn1cblxuLmN1cnJpY3VsdW1fX3ByaWNlOmFjdGl2ZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMnB4KTtcbn1cblxuLmN1cnJpY3VsdW1fX3ByaWNlLS1ibHVlOmhvdmVyIHtcbiAgY29sb3I6ICM0YjcxOTU7XG59XG5cbi5jdXJyaWN1bHVtX19wcmljZS0tZ3JlZW46aG92ZXIge1xuICBjb2xvcjogI2FjYzE1Nztcbn1cblxuLmN1cnJpY3VsdW1fX3ByaWNlLS1vcmFuZ2U6aG92ZXIge1xuICBjb2xvcjogI2VhOWY2MTtcbn1cblxuLmN1cnJpY3VsdW1fX25vdGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbi10b3A6IC41ZW07XG59XG5cbi5jdXJyaWN1bHVtX19ib3R0b20ge1xuICBjb2xvcjogIzRmNGY0ZjtcbiAgcGFkZGluZzogMS43NWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIC8qIFRoaXMgaXMgbmVjZXNzYXJ5IHRvIG1ha2UgdGhlIGJvdHRvbSByYXRpbyBzZWN0aW9uIGZpbGwgdGhlIGVudGlyZSBoZWlnaHQgb2YgaXRzIGNvbnRlbnRzICovXG4gIGZsZXg6IDE7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSB7XG4gIC5jdXJyaWN1bHVtX19ib3R0b20ge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9fc3ViaGVhZGluZyB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxLjc1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4OiAxO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzBlbSkge1xuICAuY3VycmljdWx1bV9fc3ViaGVhZGluZyB7XG4gICAgZm9udC1zaXplOiAxLjU1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX3N1YmhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogMS40ZW07XG4gIH1cbn1cblxuLmN1cnJpY3VsdW1fX3JhdGlvIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5jdXJyaWN1bHVtX19yYXRpbyB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2UwZTBlMDtcbn1cblxuLmN1cnJpY3VsdW1fX3RpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgLyp0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLjI1ZW0pOyovXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIC5jdXJyaWN1bHVtX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG4uY3VycmljdWx1bV9fbnVtYmVyIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIGNvbG9yOiAjMDE4OGNiO1xuICAvKnRyYW5zZm9ybTogdHJhbnNsYXRlWSgtLjM1ZW0pOyovXG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3MGVtKSB7XG4gIC5jdXJyaWN1bHVtX19udW1iZXIge1xuICAgIGZvbnQtc2l6ZTogMS43ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLmN1cnJpY3VsdW1fX251bWJlciB7XG4gICAgZm9udC1zaXplOiAxLjZlbTtcbiAgfVxufVxuXG5zdXAge1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBmb250LXNpemU6IDAuNmVtO1xufVxuXG4uaGVyb19fd3JhcC0yLmNhbGVuZGFyIHtcbiAgaGVpZ2h0OiAwdmg7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5jYWxlbmRhci0td3JhcCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9jbG91ZC1iZy5wbmdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDhjOTk7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XG4gIHBhZGRpbmctdG9wOiAxMGVtO1xuICBwYWRkaW5nLWJvdHRvbTogMTBlbTtcbn1cblxuLmZvb3Rlci5jYWwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMC41KSksIHVybChcIi4uL2ltZy9mb290ZXItLWJnLnBuZ1wiKTtcbn1cblxuLyogZml4IHRvIG1ha2UgaGVpZ2h0IHN0YXkgZnVsbCBoZWlnaHQgb2YgY2FsZW5kYXIgYXQgbW9iaWxlIHZpZXdwb3J0cyAqL1xuLmZjLXVudGhlbWVkIHRoLCAuZmMtdW50aGVtZWQgdGQsIC5mYy11bnRoZW1lZCB0aGVhZCwgLmZjLXVudGhlbWVkIHRib2R5LCAuZmMtdW50aGVtZWQgLmZjLWRpdmlkZXIsIC5mYy11bnRoZW1lZCAuZmMtcm93LCAuZmMtdW50aGVtZWQgLmZjLWNvbnRlbnQsIC5mYy11bnRoZW1lZCAuZmMtcG9wb3ZlciwgLmZjLXVudGhlbWVkIC5mYy1saXN0LXZpZXcsIC5mYy11bnRoZW1lZCAuZmMtbGlzdC1oZWFkaW5nIHRkIHtcbiAgYm9yZGVyLWNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG59XG5cbi5mYy1zY3JvbGxlci5mYy1kYXktZ3JpZC1jb250YWluZXIge1xuICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQxLjg3NWVtKSB7XG4gIGJvZHkgLmZjIHtcbiAgICBmb250LXNpemU6IC45ZW0gIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICBib2R5IC5mYyB7XG4gICAgZm9udC1zaXplOiAuODVlbSAhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyNWVtKSB7XG4gIGJvZHkgLmZjIHtcbiAgICBmb250LXNpemU6IC44ZW0gIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuZmMtdG9vbGJhciB7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5mYy1jZW50ZXIge1xuICAgIGZsZXg6IDAgMCAxMDAlO1xuICAgIG9yZGVyOiAtMTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbiAgfVxuICAuZmMtZGF5R3JpZC12aWV3IC5mYy1ib2R5IC5mYy1yb3cge1xuICAgIG1pbi1oZWlnaHQ6IDYuMjVlbSAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5ub3RlIHtcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgY29sb3I6IGRhcmtyZWQ7XG4gIG1hcmdpbi10b3A6IDFlbTtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAzZW0gYXV0byAyZW0gYXV0bztcbiAgYm9yZGVyOiAxcHggc29saWQgZGFya3JlZDtcbiAgcGFkZGluZzogMWVtO1xufVxuXG4uaGVyb19fd3JhcC0tc2V2ZW4ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuMyksIHJnYmEoMCwgMCwgMCwgMC4zKSksIHVybChcIi4uL2ltZy9idXNpbmVzcy1naXJsLS1sYXJnZS5qcGdcIik7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3A7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzEuMjVlbSkge1xuICAuaGVyb19fd3JhcC0tc2V2ZW4ge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC4zKSwgcmdiYSgwLCAwLCAwLCAwLjMpKSwgdXJsKFwiLi4vaW1nL2J1c2luZXNzLWdpcmwtLXNtYWxsLmpwZ1wiKTtcbiAgfVxufVxuXG4uZm9ybXNfX2dyaWQge1xuICBtYXJnaW4tdG9wOiA2ZW07XG59XG5cbi5mb3Jtc19fd3JhcCB7XG4gIGRpc3BsYXk6IC1tcy1ncmlkO1xuICBkaXNwbGF5OiBncmlkO1xuICBjb2xvcjogIzIxMjEyMTtcbiAgLyoqIG1pbi1jb250ZW50IGFuZCBtYXgtY29udGVudCBhcmUgc3VwcG9ydGVkIGJ5IGllMTEgKiovXG4gIC1tcy1ncmlkLWNvbHVtbnM6IG1pbi1jb250ZW50IDFmcjtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW4tY29udGVudCAxZnI7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xuICBncmlkLWNvbHVtbi1nYXA6IDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMi41ZW07XG59XG5cbi5mb3Jtc19fbGluayB7XG4gIC8qKiBncmlkIGl0ZW0gY2Fubm90IGJlIGFuIGlubGluZSBlbGVtZW50IGluIElFMTEgKiovXG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtbXMtZ3JpZC1jb2x1bW46IDE7XG4gIGdyaWQtY29sdW1uOiAxIC8gMjtcbiAgLyoqIG11c3QgdXNlIHRoZSBmb2xsb3dpbmcgMiBmb3IgYSByb3cgb3IgY29sIHNwYW4gKiovXG4gIC1tcy1ncmlkLXJvdzogMTtcbiAgLW1zLWdyaWQtcm93LXNwYW46IDI7XG4gIGdyaWQtcm93OiAxIC8gMztcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xuICAvKiogZmFsbGJhY2sgZm9yIGdyaWQtZ2FwIGluIElFMTEgKiovXG4gIG1hcmdpbi1yaWdodDogMWVtO1xuICAvKiogcmVzZXQgbWFyZ2luIGZvciBicm93c2VycyB0aGF0IHN1cHBvcnQgZ3JpZCAqKi9cbn1cblxuQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gIC5mb3Jtc19fbGluayB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbi5mb3Jtc19fbGluazpob3ZlciB7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uZm9ybXNfX2l0ZW0ge1xuICAtbXMtZ3JpZC1jb2x1bW46IDI7XG4gIGdyaWQtY29sdW1uOiAyIC8gMztcbiAgLW1zLWdyaWQtcm93OiAxO1xuICBncmlkLXJvdzogMSAvIDI7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG4gIC8qKiBpZTExIHN5bnRheCBmb3IgYWxpZ24tc2VsZiAgKiovXG4gIC1tcy1ncmlkLXJvdy1hbGlnbjogZW5kO1xuICBhbGlnbi1zZWxmOiBlbmQ7XG4gIG1hcmdpbi1ib3R0b206IC4xZW07XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAyOC4xMjVlbSkge1xuICAuZm9ybXNfX2l0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICB9XG59XG5cbi5mb3Jtc19faW5mbyB7XG4gIC1tcy1ncmlkLWNvbHVtbjogMjtcbiAgZ3JpZC1jb2x1bW46IDIgLyAzO1xuICAtbXMtZ3JpZC1yb3c6IDI7XG4gIGdyaWQtcm93OiAyIC8gMztcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICAtbXMtZ3JpZC1yb3ctYWxpZ246IHN0YXJ0O1xuICBhbGlnbi1zZWxmOiBzdGFydDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5mb3Jtc19faW5mbyB7XG4gICAgZm9udC1zaXplOiAuOTVlbTtcbiAgfVxufVxuXG4vKlxyXG50ZW1wIGZpeCB0byBrd2VzIHJlbW92aW5nIHRoZSBjbGFzcyBuYW1lIGZyb20gdGhlIGZvcm1cclxuLnN1YnNjcmliZSBmb3JtIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDI1MHB4LCAxZnIpKTtcclxuICAgIGdyaWQtZ2FwOiAzZW0gMS41ZW07XHJcbn1cclxuXHJcbiovXG4vKlxyXG5LV0VTIFdSQVBTIEVBQ0ggSU5QVVQgRUxFTUVOVCBJTiBBIFNQQU4gLmt3LWZpZWxkLXdyYXBwZXIgc28gdGhlIDEwMCUgd2lkdGggbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhpcyBzcGFuIGJ1dCBJIHN0aWxsIG1pZ2h0IG5lZWQgdG8gYWNjb3VudCBmb3IgdGhlIHN1Ym1pdCBidXR0b24gYW55IHRpbWUgaXMgaXMgYSBidXR0b24gZWxlbWVudCBhbmQgTk9UIGEgaW5wdXQgdHlwZT1zdWJtaXQgZWxlbWVudFxyXG4qL1xuLyoqKiBBREQgVEhJUyBQT1NJVElPTiBSRUxBVElWRSBNQVlCRSEhISEgKioqKiovXG4vKioqKiogS1dFUyBTVFlMRVMgU1RBUlQgKioqKi9cbi5rdy1maWVsZC13cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rd2VzLWZpZWxkLXdyYXBwZXIgLmhlbHAge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi8qIFRFWFRBUkVBICovXG4ua3ctZmllbGQtd3JhcHBlci02IHtcbiAgaGVpZ2h0OiA2ZW0gIWltcG9ydGFudDtcbn1cblxuLyogVGhpcyBtYXRjaGVzIHBlbmNpbCBpY29uIHdyYXAgdG8gYmUgdGhlIHNhbWUgaGVpZ2h0IGF0IHRoZSB0ZXh0YXJlYSBmaWVsZCAtLXdoeSA4IGFuZCBub3QgNj8/Pz8/PyAqL1xuI2FwcGxpY2FudC1wZW5jaWwtcHJlZml4IHtcbiAgaGVpZ2h0OiA4ZW07XG59XG5cbi8qKioqKiBLV0VTIFNUWUxFUyBFTkQgKioqKi9cbi5oZXJvX193cmFwLS1laWdodCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC4yKSwgcmdiYSgwLCAwLCAwLCAwLjIpKSwgdXJsKFwiLi4vaW1nL2hlcm8tY29udGFjdC5qcGdcIik7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzEuMjVlbSkge1xuICAuaGVyb19fd3JhcC0tZWlnaHQge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwgMCwgMCwgMC4yKSwgcmdiYSgwLCAwLCAwLCAwLjIpKSwgdXJsKFwiLi4vaW1nL2hlcm8tY29udGFjdC0tc21hbGwuanBnXCIpO1xuICB9XG59XG5cbi5mb3JtLXdyYXBwZXIge1xuICBtYXJnaW46IDRlbSBhdXRvIDRlbSBhdXRvO1xuICBtYXgtd2lkdGg6IDEyODBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDUyLjVlbSkge1xuICAuZm9ybS13cmFwcGVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG59XG5cbi5jb250YWN0IHtcbiAgcGFkZGluZzogOGVtIDFlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI1ZW0pIHtcbiAgLmNvbnRhY3Qge1xuICAgIHBhZGRpbmc6IDVlbSAwO1xuICB9XG59XG5cbi5jb250YWN0cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMzMyNmM7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxLjI1ZW07XG4gIGZsZXg6IDE7XG59XG5cbi5jb250YWN0LXdyYXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1Mi41ZW0pIHtcbiAgLmNvbnRhY3Qtd3JhcCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjMuMDYyNWVtKSB7XG4gIC5jb250YWN0LXdyYXAge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxufVxuXG4ud3JhcHB5LS1vbmUge1xuICBtYXJnaW4tYm90dG9tOiBhdXRvO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTIuNWVtKSB7XG4gIC53cmFwcHktLW9uZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAud3JhcHB5LS1vbmUge1xuICAgIG1hcmdpbi1ib3R0b206IDNlbTtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbn1cblxuLmNvbnRhY3QtaGRnIHtcbiAgbWFyZ2luLWJvdHRvbTogLjNlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zaXplOiAxLjJlbTtcbn1cblxuLmNvbnRhY3QtaWNvbiB7XG4gIGZpbGw6ICMwMTg4Y2I7XG4gIHBhZGRpbmctcmlnaHQ6IC4xZW07XG4gIHdpZHRoOiAxLjJlbTtcbiAgaGVpZ2h0OiAxLjJlbTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDAuMmVtKTtcbn1cblxuLmNvbnRhY3QtaGRnLXNwYW4ge1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IC45MTVlbTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU1LjYyNWVtKSB7XG4gIC5jb250YWN0LWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogLjk1ZW07XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDIzLjA2MjVlbSkge1xuICAuY29udGFjdC1pdGVtIHtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgfVxufVxuXG4uY29udGFjdC1pdGVtICsgLmNvbnRhY3QtaXRlbSB7XG4gIG1hcmdpbi10b3A6IC4zZW07XG59XG5cbi8qIEZpeCBmb3IgaXBob25lIHNhZmFyaSBicm93c2VyIHNob3dpbmcgYmx1ZSB0ZXh0ICovXG4uY29udGFjdC1pdGVtLS1ncmF5IHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5jb250YWN0LWl0ZW0uaG91cnMge1xuICBjb2xvcjogIzAxODhjYjtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogLjNlbTtcbn1cblxuLmNvbnRhY3QtaXRlbS5ob3Vyczpub3QoOmxhc3Qtb2YtdHlwZSkge1xuICBtYXJnaW4tYm90dG9tOiAuNzVlbTtcbn1cblxuLmZvcm0ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLCAwLCAwLCAwLjQpLCByZ2JhKDAsIDAsIDAsIDAuNCkpLCB1cmwoXCIuLi9pbWcvY2hpbGQtd3JpdGluZy5qcGdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHBhZGRpbmc6IDRlbSAxLjVlbTtcbiAgZmxleDogNDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDI4LjEyNWVtKSB7XG4gIC5mb3JtIHtcbiAgICBwYWRkaW5nOiAyZW0gLjc1ZW07XG4gIH1cbn1cblxuZm9ybSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcbiAgZ3JpZC1nYXA6IDFlbTtcbiAgcGFkZGluZy10b3A6IDNlbTtcbn1cblxuLmZ1bGwtd2lkdGg6bGFzdC1vZi10eXBlIHtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG59XG5cbi5maWVsZC10ZXh0IGlucHV0LFxuLmZpZWxkLXRleHQgdGV4dGFyZWEsXG4uc3VibWl0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlci1yYWRpdXM6IDAgLjI1ZW0gLjI1ZW0gMDtcbiAgcGFkZGluZzogLjM3NWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICBmb250OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLmZpZWxkLXRleHQgaW5wdXQge1xuICBoZWlnaHQ6IDIuMTI1ZW07XG59XG5cbi5maWVsZC10ZXh0IGlucHV0OmZvY3VzLFxuLmZpZWxkLXRleHQgdGV4dGFyZWE6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMC41ZW0gcmdiYSg5MywgMTYyLCAyNDgsIDAuNSk7XG59XG5cbmZvcm0gbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5maWVsZC1wcmVmaXhlZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmZpZWxkLXByZWZpeCB7XG4gIGZsZXg6IDAgMCAyLjJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJpZ2h0OiAwO1xuICBib3JkZXItcmFkaXVzOiAuMjVlbSAwIDAgLjI1ZW07XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAuMzc1ZW07XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTMzMjZjO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0IDEwMG1zO1xufVxuXG4uZmllbGQtcHJlZml4LmJhY2tncm91bmQtY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4uZm9ybS1pY29uIHtcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGZpbGw6ICNmZmY7XG4gIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2UtaW47XG59XG5cbmZvcm0gcCB7XG4gIG1hcmdpbjogMDtcbn1cblxudGV4dGFyZWEge1xuICBoZWlnaHQ6IDhlbTtcbiAgcmVzaXplOiBub25lO1xufVxuXG4vKiBjaGFuZ2VkIGZyb20gMSAvIDMgYmVjYXVzZSBvdGhlcndpc2UgdGhlcmUgd2lsbCBBTFdBWVMgYmUgdHdvIGNvbHVtbnMqL1xuLmZ1bGwtd2lkdGgge1xuICBncmlkLWNvbHVtbjogMSAvIC0xO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzVlbSkge1xuICAuZmllbGQtdGV4dCB7XG4gICAgZ3JpZC1jb2x1bW46IDEgLyAtMTtcbiAgfVxufVxuXG4uZnVsbC13aWR0aDpsYXN0LW9mLXR5cGUge1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbn1cblxuLnN1Ym1pdCB7XG4gIG1hcmdpbi10b3A6IDJlbTtcbiAgcGFkZGluZzogLjZlbSAxLjJlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYm9yZGVyOiAwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoIzFiNDc5OCwgIzE1MzY3NSk7XG4gIGJveC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbn1cblxuLnN1Ym1pdDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnN1Ym1pdDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5zdWJtaXQ6YWN0aXZlIHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBvdXRsaW5lOiBub25lO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIDFweCk7XG59XG5cbi5zdWJtaXQgc3BhbiB7XG4gIG1hcmdpbjogMCAuM2VtIC4yZW0gMDtcbn1cblxuLnN1Ym1pdCAuZm9ybS1pY29uIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDJweCk7XG59XG5cbi8qIFNldCB0aGUgc2l6ZSBvZiB0aGUgZGl2IGVsZW1lbnQgdGhhdCBjb250YWlucyB0aGUgbWFwICovXG4jbWFwIHtcbiAgaGVpZ2h0OiA0MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4iLCJcclxuLmhlYWRlciB7XHJcbiAgICBcclxuICAgICZfX3RvcC1zZWN0IHtcclxuICAgICAgICBib3JkZXItdG9wOiA1cHggc29saWQgJGdyYXktZGFya2VyOyBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLXNlY3QtY29udGFpbmVyIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLWJhciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvY25lci01MzYucG5nJykgbm8tcmVwZWF0IHRvcCBjZW50ZXI7XHJcbiAgICAgICAgaGVpZ2h0OiAzOXB4O1xyXG4gICAgICAgIHdpZHRoOiA1MzZweDsgICBcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgcmlnaHQ6IC01NXZ3O1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggMTI4MHB4KSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtNTB2dztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDExMzBweCkge1xyXG4gICAgICAgICAgICByaWdodDogLTQ1dnc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAxMDIwcHgpIHtcclxuICAgICAgICAgICAgcmlnaHQ6IC00MHZ3O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgcmlnaHQ6IC0zNXZ3O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggODQwcHgpIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9pbWcvY25lci0zMDEucG5nJykgbm8tcmVwZWF0IHRvcCBjZW50ZXI7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtNTd2dztcclxuICAgICAgICAgICAgd2lkdGg6IDMwMXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNzIwcHgpIHtcclxuICAgICAgICAgICAgcmlnaHQ6IC00N3Z3O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjE1cHgpIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLWJhci1jb250YWN0IHsgICBcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxyXG4gICAgICAgIHJpZ2h0OiA0ZW07XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gRklYIEZPUiBJRTExXHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKGNhbGMoLTUwJSAtIDVweCkpO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgICAgXHJcbiAgICAgICAgcGFkZGluZzogMWVtIDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDg0MHB4KSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA2ZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjE1cHgpIHtcclxuICAgICAgICAgICAgbGVmdDogLjVlbTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIGFsbG93IHBob25lICMgdG8gZ28gYWJvdmUgbG9nb1xyXG4gICAgICAgICAgICB6LWluZGV4OiA1NTY1O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLWJhci1pdGVtICsgJl9fdG9wLWJhci1pdGVtIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMS41ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fdG9wLWJhci1pdGVtOmxhc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDg0MHB4KSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtYmFyLWl0ZW06Zmlyc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RvcC1iYXItaXRlbSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3AtYmFyLWljb24ge1xyXG4gICAgICAgIGZpbGw6ICRhcXVhO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogLjNlbTtcclxuICAgICAgICB3aWR0aDogMS4yZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjJlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLyogcGhvbmUgaWNvbiB0ZXh0ICAqL1xyXG4gICAgJl9fcGhvbmUtaWNvbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAuOWVtO1xyXG5cclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjE1cHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOGVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190b3AtYmFyLWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogZGFya2VuKCNmZmYsIDE1JSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNjE1KSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogbGlnaHRlbigjMzMzLCAzMCUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19tYWluLXNlY3Qge1xyXG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgcGFkZGluZzogMCAyZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwIDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMzdweCk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLTMwcHg7IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNjE1KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2xvZ28taW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxNS42MjVlbTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX25hdi1saXN0IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX25hdi1pdGVtIHtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fbmF2LWl0ZW0gKyAmX19uYXYtaXRlbSB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWljb24ge1xyXG4gICAgICAgIGZpbGw6ICRncmF5LWRhcmtlcjtcclxuICAgICAgICB3aWR0aDogMWVtO1xyXG4gICAgICAgIGhlaWdodDogMWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19uYXYtaXRlbTpob3ZlciB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAtMC4xODc1ZW0gMCAkYXF1YTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWl0ZW06aG92ZXIgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWl0ZW0uY2xpY2tlZC1wYXJlbnQge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTAuMTg3NWVtIDAgJGFxdWE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogbm9uZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbmF2LWxpbmsuY2xpY2tlZCB7XHJcbiAgICAgICAgY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX25hdi1saW5rIHtcclxuICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcclxuICAgICAgICBjb2xvcjogJGdyYXktZGFya2VyO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2UtaW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC44NWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuLmhlYWRlci5zdGlja3kge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwOyBcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsLjgpO1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggMnB4IHJnYmEoMCwwLDAsLjQpO1xyXG4gICAgei1pbmRleDogMTAwMTtcclxuICAgIFxyXG4gICAgJiAuaGVhZGVyX190b3Atc2VjdCB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJiAuaGVhZGVyX19sb2dvLWltYWdlIHtcclxuICAgICAgICB3aWR0aDogMTMuNWVtO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBcclxuICAgICAgICAvLyBwdXR0aW5nIGluc2lkZSB0aGUgc2l0Y2t5IGNsYXNzIG9ubHkgc28gaXQgd2lsbCBvbmx5IHhpdGlvbiBvbiBzdGlja3kgbWVudSBpbiwgbm90IG91dCBcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNjAwbXMgZWFzZS1vdXQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLmhlYWRlcl9fbG9nbyB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBub25lO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmIC5oZWFkZXJfX25hdi1pdGVtLmhhcy1zdWJtZW51OjphZnRlciB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLm5hdmlnYXRpb25fX2J1dHRvbiB7XHJcbiAgICAgICAgdG9wOiAyMHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmIC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcclxuICAgICAgICB0b3A6IDI1cHg7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcbi5uYXZpZ2F0aW9uX19jaGVja2JveCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5AaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuXHJcbiAgICAubmF2aWdhdGlvbl9fYnV0dG9uIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHRvcDogNDBweDtcclxuICAgICAgICByaWdodDogMTVweDtcclxuICAgICAgICB6LWluZGV4OiAyMDAwO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDAgMS41ZW0gMmVtIHJnYmEoIzAwMCwgLjEpO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC02MTUpIHtcclxuICAgICAgICAgICAgdG9wOiAzNXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnktMzY5KSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICB0b3A6IDQ1cHg7XHJcbiAgICAgICAgcmlnaHQ6IDIwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KHJnYmEoJHJveWFsYmx1ZSwgLjkpLCByZ2JhKCRhcXVhLCAuOSkpO1xyXG4gICAgICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDgwMG1zIGN1YmljLWJlemllciguODYsIDAsIC4wNywgMSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC02MTUpIHtcclxuICAgICAgICAgICAgdG9wOiA0MHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHRpbnktMzY5KSB7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuaGVhZGVyX19uYXYge1xyXG4gICAgICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHotaW5kZXg6IDE1MDA7XHJcblxyXG4gICAgICAgIC8vdHJhbnNpdGlvbjogYWxsIDgwMG1zIGN1YmljLWJlemllciguNjgsIC0uNTUsIC4yNjUsIDEuNTUpO1xyXG4gICAgICAgIG9wYWNpdHk6IDA7XHJcblxyXG4gICAgICAgIC8qIHVzZSB0cmFuc2Zvcm0gaW5zdGVhZCBmb3IgYSBzbW9vdGhlciBhbmltYXRpb24gYW5kIGFsc28gbW9yZSBwZXJmb3JtYW50ICAqL1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtODAwcHgpO1xyXG5cclxuICAgICAgICAvKiBwdXQgdGhlIHdpZHRoIDEwMCUgaGVyZSAgKi9cclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgLmhlYWRlcl9fbmF2LWxpc3Qge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAvLyBjaGFuZ2luZyBmcm9tIGRpc3BsYXk6IGZsZXhcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAuaGVhZGVyX19uYXYtaXRlbS5jbGlja2VkLXBhcmVudCB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcclxuICAgIH0gICAgIFxyXG5cclxuICAgIC5oZWFkZXJfX25hdi1pdGVtIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC41ZW07XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsgICAgIFxyXG4gICAgICAgIHBhZGRpbmc6IC43NWVtIDFlbTsgICAgXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICAuaGVhZGVyX19uYXYtaXRlbTpob3ZlciB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC43NWVtKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuaGVhZGVyX19uYXYtaXRlbTpob3ZlciB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmhlYWRlcl9fbmF2LWl0ZW06aG92ZXIgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG5cclxuICAgIC5oZWFkZXJfX25hdi1saW5rLmNsaWNrZWQge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAzMDBtcyBlYXNlLW91dDtcclxuICAgIH1cclxuXHJcbiAgICAuaGVhZGVyX19uYXYtbGluayB7XHJcbiAgICAgICAgY29sb3I6ICRyb3lhbGJsdWU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoNzApO1xyXG4gICAgfVxyXG5cclxuICAgIC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuXHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDgwMG1zIGN1YmljLWJlemllciguNjgsIC0uNTUsIC4yNjUsIDEuNTUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuaGVhZGVyLnN0aWNreSAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtbGluay5jbGlja2VkIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmhlYWRlci5zdGlja3kgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgIGNvbG9yOiAkcm95YWxibHVlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5oZWFkZXJfX25hdiAuaGVhZGVyX19uYXYtbGluay5jbGlja2VkIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLm5hdmlnYXRpb25fX2NoZWNrYm94OmNoZWNrZWQgfiAuaGVhZGVyX19uYXYgLmhlYWRlcl9fbmF2LWxpbmsuY2xpY2tlZCB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5oZWFkZXIuc3RpY2t5IC5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLmhlYWRlcl9fbmF2IC5oZWFkZXJfX25hdi1pdGVtOmhvdmVyIC5oZWFkZXJfX25hdi1saW5rICB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdmlnYXRpb25fX2ljb24ge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxLjU1ZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgJiwgJjo6YmVmb3JlLCAmOjphZnRlciB7XHJcbiAgICAgICAgICAgICB3aWR0aDogMS42ZW07XHJcbiAgICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUsICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgNDAwbXM7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmJlZm9yZSB7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtLjQ1ZW0pOyB9XHJcbiAgICAgICAgJjo6YWZ0ZXIgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLjQ1ZW0pOyB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5uYXZpZ2F0aW9uX19idXR0b246aG92ZXIgLm5hdmlnYXRpb25fX2ljb246OmJlZm9yZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0uNTVlbSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5uYXZpZ2F0aW9uX19idXR0b246aG92ZXIgLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLjU1ZW0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCArIC5uYXZpZ2F0aW9uX19idXR0b24gLm5hdmlnYXRpb25fX2ljb24ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCArIC5uYXZpZ2F0aW9uX19idXR0b24gLm5hdmlnYXRpb25fX2ljb246OmJlZm9yZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHJvdGF0ZSgxMzVkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCArIC5uYXZpZ2F0aW9uX19idXR0b24gLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgcm90YXRlKC0xMzVkZWcpO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA1NjhweClcclxuICBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgICAgLmhlYWRlcl9fbmF2LWxpbmsge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAuOGVtO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAuaGVhZGVyX19uYXYtaXRlbSB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAuNWVtIC43NWVtO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBcclxuICBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDM3NXB4KSBcclxuICBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDY2N3B4KSBcclxuICBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHsgXHJcbiAgICAuaGVhZGVyX19uYXYtbGluayB7XHJcbiAgICAgICAgICBmb250LXNpemU6IC44MmVtO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAuaGVhZGVyX19uYXYtaXRlbSB7XHJcbiAgICAgICAgICBwYWRkaW5nOiAuNWVtIC43NWVtO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbiIsIlxyXG4uaGVyby0tb3ZlcmZsb3cge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmhlcm8ge1xyXG5cclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIFxyXG4gICAgJl9fd3JhcCB7ICAgIFxyXG4gICAgICAgIGhlaWdodDogNzV2aDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsMCwwLC41KSwgcmdiYSgwLDAsMCwuNSkpLCB1cmwoJy4uL2ltZy9oZXJvLXBhaWQuanBnJyk7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xyXG4gICAgICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC44KTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOyAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNTAwcHgpIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1NXZoO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjAlIGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NlbnRlciB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICBcclxuICAgICAgICAvKioqIFRoaXMgd2FzIHRoZSBmaXggdG8ga2VlcCB0aGUgc3ViaGVhZGluZyBmcm9tIHRleHQgd3JhcHBpbmcgKioqL1xyXG4gICAgICAgIHdpZHRoOiBtYXgtY29udGVudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhZGluZyB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBmb250LXNpemU6IDUuOWVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTEuNnZ3O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjNlbTtcclxuICAgICAgICBcclxuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA2Ljh2dztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJi0tc3BhbiB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRhcXVhLCA2JSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zcGFuIHtcclxuICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG4vKioqKioqKiBpUGhvbmVzIGxhbmRzY2FwZSAqKioqKioqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA1NjhweClcclxuICBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgaGVpZ2h0OiA2NXZoO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcbiAgICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIFxyXG4gIGFuZCAobWluLWRldmljZS13aWR0aDogMzc1cHgpIFxyXG4gIGFuZCAobWF4LWRldmljZS13aWR0aDogNjY3cHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKVxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgeyBcclxuICAgIC5oZXJvX193cmFwIHtcclxuICAgICAgICAgIGhlaWdodDogNjV2aDtcclxuICAgICAgICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBcclxuICBhbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDQxNHB4KSBcclxuICBhbmQgKG1heC1kZXZpY2Utd2lkdGg6IDczNnB4KSBcclxuICBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMylcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHsgXHJcbiAgICAuaGVyb19fd3JhcCB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDY1dmg7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcclxuICAgICAgfVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzNzVweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA4MTJweCkgXHJcbiAgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpXHJcbiAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7IFxyXG4gICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgaGVpZ2h0OiA2NXZoO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcbiAgICAgIH1cclxufVxyXG5cclxuLyoqKioqKiogR2FsYXh5IFBob25lcyBsYW5kc2NhcGUgKioqKioqKi9cclxuQG1lZGlhIHNjcmVlbiBcclxuICBhbmQgKGRldmljZS13aWR0aDogMzIwcHgpIFxyXG4gIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpIFxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgaGVpZ2h0OiA2NXZoO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcbiAgICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBcclxuICBhbmQgKGRldmljZS13aWR0aDogMzIwcHgpIFxyXG4gIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpIFxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgaGVpZ2h0OiA2NXZoO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcbiAgICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBcclxuICBhbmQgKGRldmljZS13aWR0aDogMzYwcHgpIFxyXG4gIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDQpIFxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgaGVpZ2h0OiA2NXZoO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XHJcbiAgICAgIH1cclxufVxyXG5cclxuLyoqKioqKiogUGl4ZWwgUGhvbmVzIGxhbmRzY2FwZSAqKioqKioqL1xyXG5AbWVkaWEgc2NyZWVuIFxyXG4gIGFuZCAoZGV2aWNlLXdpZHRoOiAzNjBweCkgXHJcbiAgYW5kIChkZXZpY2UtaGVpZ2h0OiA2NDBweCkgXHJcbiAgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMykgXHJcbiAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICAuaGVyb19fd3JhcCB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDY1dmg7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcclxuICAgICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIFxyXG4gIGFuZCAoZGV2aWNlLXdpZHRoOiAzNjBweCkgXHJcbiAgYW5kIChkZXZpY2UtaGVpZ2h0OiA2NDBweCkgXHJcbiAgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogNCkgXHJcbiAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICAuaGVyb19fd3JhcCB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDY1dmg7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcclxuICAgICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG4uYnJ1c2gge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvYnJ1c2gtaGVyby1idG0ucG5nJyk7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBoZWlnaHQ6IDYzcHg7XHJcbn1cclxuXHJcbi5idG46bGluaywgLmJ0bjp2aXNpdGVkIHtcclxuICAgIGZvbnQtc2l6ZTogLjhlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRhcXVhO1xyXG4gICAgcGFkZGluZzogMWVtIDJlbTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDk5ZW07XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDJweCByZ2JhKDAsMCwwLC40KTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMgZWFzZS1vdXQsIHRyYW5zZm9ybSAxNTBtcyBsaW5lYXI7XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkYXF1YSwgMTAlKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMnB4KTtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuXHJcbi5jYXJkc19fYnRuLTI6bGluaywgLmNhcmRzX19idG4tMjp2aXNpdGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcclxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggMnB4IHJnYmEoMCwwLDAsLjQpXHJcbn1cclxuXHJcbi5jYXJkc19fYnRuLTI6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIGNvbG9yOiBkYXJrZW4oI2ZmZiwgMjAlKTtcclxuICAgIGJvcmRlci1jb2xvcjogZGFya2VuKCNmZmYsIDIwJSk7XHJcbn1cclxuXHJcbi5jYXJkc19fYnRuLTI6YWN0aXZlIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMnB4KTtcclxufSIsIlxyXG4ucmVnaXN0cmF0aW9uIHtcclxuICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgIG1hcmdpbjogNWVtIGF1dG8gMmVtIGF1dG87XHJcbiAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjIyO1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gICAgd2lkdGg6IDYwJTtcclxufVxyXG5cclxuLmNhcmRzIHtcclxuICAgIFxyXG4gICAgJl9faGVhZGluZy0tdGhyZWUge1xyXG4gICAgICAgIG1hcmdpbjogNGVtIGF1dG8gMCBhdXRvO1xyXG4gICAgICBcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS40NWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19hYm91dC51cGRhdGUge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC41ZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLTFlbTtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYWJvdXQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBtYXJnaW46IDZlbSBhdXRvIDhlbSBhdXRvO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgICAgICBtYXJnaW46IDRlbSBhdXRvIDVlbSBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbWFpbi13cmFwIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEyODBweDtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fZ3JpZCB7XHJcbiAgICAgICAgLyoqIGZsZXhib3ggZmFsbGJhY2sgZm9yIElFMTEgKiovXHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjgwcHgsIDFmcikpO1xyXG4gICAgICAgICAgICBncmlkLWdhcDogMmVtO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOyAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGxhcmdlLTk4MCkge1xyXG4gICAgICAgICAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcclxuICAgICAgICAgICAgICAgIGdyaWQtZ2FwOiAxZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDYyMnB4KSB7XHJcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDNlbSAxZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKiBmbGV4Ym94IGZhbGxiYWNrIGZvciBJRTExICoqL1xyXG4gICAgJl9fZ3JpZCA+ICoge1xyXG4gICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICBtYXJnaW46IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fd3JhcCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDYyMnB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlLXdyYXAge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4IDAgMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAmX193YXZlIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IC01cHgsIHRyYW5zcGFyZW50IDE0cHgsICNmZmYgMTZweCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEycHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogNDBweCAyMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggMTVweCwgI2ZmZiAxMnB4LCB0cmFuc3BhcmVudCAxM3B4KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NvbnRlbnQge1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTsgXHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pY29uIHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7IFxyXG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgIGZvbnQtc2l6ZTogM2VtICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKiBGSVggRk9SIElFMTEgLSBqdXN0IHVzaW5nIHNjYWxlIGZvciBhbGwgYnJvd2VycyAqL1xyXG4gICAgJl9faWNvbi5mbGF0aWNvbi1raW5kZXJnYXJ0ZW4ge1xyXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xNSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyomOjpiZWZvcmUge1xyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgIGZvbnQtc2l6ZTogMy4yZW0gIWltcG9ydGFudDtcclxuICAgICAgICBcclxuICAgICAgICB9Ki9cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZy1icnVzaCB7XHJcbiAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwaW5rLWJydXNoO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyByZW1vdmVkIDFweCB0byBnZXQgcmlkIG9mIHRpbnkgYm9yZGVyIGxpbmVzIG9uIG91dHNpZGUgb2YgcGFpbnRicnVzaFxyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDI3NHB4OyBcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvZm9vdGVyX3RpdGxlX2JnLnBuZycpO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IGJvdHRvbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiA1NSU7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxNHB4O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRsYXJnZS05ODApIHtcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMjQwcHg7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgICAgXHJcbiAgICAmX19zdWJoZWFkaW5nLWJydXNoLS0yIHtcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlLWJydXNoO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZy1icnVzaC0tMyB7XHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW4tYnJ1c2g7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdWJoZWFkaW5nLWJydXNoLXNwYW4tLTEsICZfX3N1YmhlYWRpbmctYnJ1c2gtc3Bhbi0tMiwgJl9fc3ViaGVhZGluZy1icnVzaC1zcGFuLS0zIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdWJoZWFkaW5nIHtcclxuICAgICAgICBtYXJnaW46IC41ZW0gMCAxZW0gMDtcclxuICAgICAgICBmb250LXNpemU6IDEuN2VtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2UtOTgwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgICAgICAgIG1hcmdpbjogLjVlbSAwIC43NWVtIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pY29uLXdyYXAge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pY29uOm5vdCg6bGFzdC1vZi10eXBlKSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuM2VtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2J0biB7XHJcbiAgICAgICAgbWFyZ2luOiAzZW0gMDtcclxuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBtYXJnaW46IDJlbSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG5cclxuICAgIFxyXG59XHJcblxyXG4iLCJcclxuLmN1cnJlbnQtY2FsIHtcclxuICAgIC8qIHVzZSBhIGxvdyBtYXgtd2lkdGggdG8ga2VlcCB0aGUgdGV4dCBzaXplIHRoZSBzYW1lIHVudGlsIDczMHB4IHRoZW4gaXQgc2NhbGVzIGRvd24gYXMgdGhlIHZpZXdwb3J0IHdpZHRoIGRlY3JlYXNlcyAqL1xyXG4gICAgbWF4LXdpZHRoOiA3MzBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvIDhlbSBhdXRvO1xyXG4gICAgcGFkZGluZzogMCAxZW07XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICBwYWRkaW5nOiAwIC41ZW07XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuLmN1cnJlbnQtY2FsLS1zdmcge1xyXG4gICAgd2lkdGg6IDc1JTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG4uY3VycmVudC1jYWwtLXRleHQge1xyXG4gICAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDNlbTtcclxuICAgIHRleHQtYW5jaG9yOiBtaWRkbGU7XHJcbn1cclxuXHJcbi5jdXJyZW50LWNhbC0tbGlzdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAyZW07XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00MDApIHtcclxuICAgICAgICBmb250LXNpemU6IC45ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jdXJyZW50LWNhbC0taXRlbSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAuNzVlbTtcclxuICAgIGZvbnQtc2l6ZTogMS4wNWVtO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwMCUpIHNjYWxlKDEuMyk7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgY3ViaWMtYmV6aWVyKC42OCwgLS41NSwgLjI2NSwgMS41NSk7XHJcbn1cclxuXHJcbi5jdXJyZW50LWNhbC0taXRlbS0tZmxleCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbn1cclxuXHJcbi5jdXJyZW50LWNhbC0taXRlbTpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICB0cmFuc2l0aW9uLWRlbGF5OiA0MDBtcztcclxufVxyXG5cclxuLmN1cnJlbnQtY2FsLS1pdGVtOm50aC1vZi10eXBlKDMpIHtcclxuICAgIHRyYW5zaXRpb24tZGVsYXk6IDgwMG1zO1xyXG59XHJcblxyXG4uY3VycmVudC1jYWwtLWl0ZW06bnRoLW9mLXR5cGUoNCkge1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMTIwMG1zO1xyXG59XHJcblxyXG4uY3VycmVudC1jYWwtLWl0ZW06bnRoLW9mLXR5cGUoNSkge1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMTYwMG1zO1xyXG59XHJcblxyXG4uY3VycmVudC1jYWwtLWl0ZW06bnRoLW9mLXR5cGUoNikge1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMjAwMG1zO1xyXG59XHJcblxyXG5cclxuLmN1cnJlbnQtY2FsLS1pdGVtLS12aXNpYmxlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMSk7XHJcbn1cclxuXHJcbi5jdXJyZW50LWNhbC0tc3BhbiB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbi5jdXJyZW50LWNhbC0taW1nIHtcclxuICAgIHdpZHRoOiAxNnB4O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDNweCk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDUwMHB4KSB7XHJcbiAgICAgICAgd2lkdGg6IDE0cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG4uZ2FsbGVyeSB7XHJcbiAgICBcclxuICAgICYuZnVsbHdpZHRoIHtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlLXdyYXAge1xyXG4gICAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS04NDApIHtcclxuICAgICAgICBcclxuICAgICAgICAmLmZ1bGx3aWR0aCB7XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJl9faW1hZ2Utd3JhcCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICZfX2ltYWdlLXdyYXAtLW9yZGVyIHtcclxuICAgICAgICAgICAgb3JkZXI6IC0xO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICBvcGFjaXR5OiAuODU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbn0iLCJcclxuLmZvb3RlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiAyZW07XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9mb290ZXItLWJnLnBuZycpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgIGJvcmRlci1ib3R0b206IDVweCBzb2xpZCAkZ3JheS1kYXJrZXN0O1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgcGFkZGluZzogMmVtIDFlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fd3JhcCB7XHJcbiAgICAgICAgY29sb3I6ICRncmF5LWxpZ2h0O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNlbTsgXHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xvZ28td3JhcCB7XHJcbiAgICAgICAgbWFyZ2luOiAxZW0gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbG9nbyB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19sb2dvIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX21haW4ge1xyXG4gICAgICAgIC8qKiBmbGV4Ym94IGZhbGxiYWNrIGZvciBJRTExICoqL1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDI1MHB4LCAxZnIpKTtcclxuICAgICAgICAgICAgZ3JpZC1nYXA6IDIuNWVtOyAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgbWFyZ2luOiAzZW0gMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDMuNWVtOyAgICBcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKiBmbGV4Ym94IGZhbGxiYWNrIGZvciBJRTExICoqL1xyXG4gICAgJl9fbWFpbiA+ICoge1xyXG4gICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgICAgICBtYXJnaW46IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmcge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1YmhlYWRpbmctc3BhbiB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbWlzc2lvbiB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faG91cnMge1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuOGVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jbG9zaW5ncy1saW5rIHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodGVuKCRhcXVhLCAxMCUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19jb250YWN0IHAge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEuMmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2NvbnRhY3QtaWNvbiB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC4yNWVtO1xyXG4gICAgICAgIHdpZHRoOiAxLjFlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuMWVtO1xyXG4gICAgICAgIGZpbGw6ICRhcXVhO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19jb250YWN0LWljb24tLTEge1xyXG4gICAgICAgIHdpZHRoOiAxLjJlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuMmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKiBGaXggZm9yIGlwaG9uZSBzYWZhcmkgYnJvd3NlciBzaG93aW5nIGJsdWUgdGV4dCAqL1xyXG4gICAgJl9fdGVsZXBob25lIGEge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JheS1saWdodCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19mYXgge1xyXG4gICAgICAgIGNvbG9yOiAkZ3JheS1saWdodCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zaGFwZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvc2hhcGVfYm90dG9tLnBuZycpO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7ICAgICAgIFxyXG4gICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICBoZWlnaHQ6IDQ1cHg7ICAgICAgXHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pY29uLXdyYXAge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgZmlsbDogJGFxdWE7XHJcbiAgICAgICAgd2lkdGg6IDEuM2VtO1xyXG4gICAgICAgIGhlaWdodDogMS4zZW07XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDNweCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2JvdHRvbSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsYWNrLWxpZ2h0ZXI7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIGNvbG9yOiAkZ3JheS1saWdodDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fY29weXJpZ2h0IHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19kZXNpZ24ge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IC45ZW07XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbWUsICZfX21lOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLWluO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogbGlnaHRlbigkYXF1YSwgMTAlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RheGlkIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyLjVlbTtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG4iLCJcclxuLmpzLWJ0dC1idG4ge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYm90dG9tOiAtMi43ZW07XHJcbiAgICByaWdodDogLjVlbTtcclxuICAgIHdpZHRoOiAxLjdlbTtcclxuICAgIGhlaWdodDogMS43ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRncmF5LWRhcmssIC44KTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjdlbTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgZm9udC1zaXplOiAyZW07XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDUwMG1zIGVhc2Utb3V0LCBib3R0b20gNDAwbXMgY3ViaWMtYmV6aWVyKDAuNjQsIDAuNTcsIDAuNjcsIDEuMjMpLCBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0LCBjb2xvciAzMDBtcyBlYXNlLW91dDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIFxyXG4gICAgYm9yZGVyOiAxcHggZGFzaGVkICRhcXVhO1xyXG4gICAgXHJcbiAgICAvLyB0cnlpbmcgdG8gZml4IGJ0biBub3Qgc2hvd2luZyBvbiBtb2JpbGVcclxuICAgIHotaW5kZXg6IDk1MDA7XHJcblxyXG4gICAgJi1pY29uIHtcclxuICAgICAgICBmaWxsOiAjZmZmO1xyXG4gICAgICAgIHdpZHRoOiAxZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxZW07XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDVweCk7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogZmlsbCAzMDBtcyBlYXNlLWluO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmhvdmVyICYtaWNvbiB7XHJcbiAgICAgICAgZmlsbDogJGFxdWE7XHJcbiAgICB9XHJcblxyXG4gICAgJi5hY3RpdmUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgYm90dG9tOiAxLjVlbTtcclxuICAgICAgICBwb2ludGVyLWV2ZW50czogYXV0bztcclxuICAgIH1cclxuICAgIFxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwxKTtcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG4iLCJcclxuLmhlcm9fX3dyYXAtLXR3byB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsMCwwLC4zKSwgcmdiYSgwLDAsMCwuMykpLCB1cmwoJy4uL2ltZy93YWxsLmpwZycpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwwLDAsLjMpLCByZ2JhKDAsMCwwLC4zKSksIHVybCgnLi4vaW1nL3dhbGwtLXNtYWxsLmpwZycpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmhlcm9fX2hkZyB7XHJcbiAgICBmb250LXNpemU6IDQuNWVtO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgc2Fucy1zZXJpZjtcclxuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMy43NWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMy4yZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICBmb250LXNpemU6IDIuNmVtO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi5hYm91dHVzIHtcclxuICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBcclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgbWFyZ2luOiA2ZW0gYXV0byAwIGF1dG87XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC02MTUpIHtcclxuICAgICAgICAgICAgd2lkdGg6IDk1JTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgIFxyXG4gICAgLypcclxuICAgIFxyXG4gICAgVG8gbWFrZSB0aGUgZm9udC1zaXplIGNoYW5nZSBhIGxpdHRsZSBzbW9vdGhlciB3aGVuIHRoZSBzaXplIG9mIHRoZVxyXG4gICAgU1ZHIGVtYmVkZGVkIG9iamVjdCBjaGFuZ2VzL2luIG1lZGlhIHF1ZXJpZXMsIHlvdSBjYW4gYWRkIGluIGEgQ1NTIHRyYW5zaXRpb24gZWZmZWN0OlxyXG4gICAgXHJcbiAgICBzdmcgdGV4dCB7IHRyYW5zaXRpb246IGZvbnQtc2l6ZSAwLjVzOyB9XHJcbiAgICBcclxuICAgICovXHJcbiAgICBcclxuICAgICZfX3N2ZyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZXh0LXN2ZyB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdCdWJibGVndW0gU2FucycsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190c3Bhbi1zdmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzVweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW1hZ2Utc3ZnIHtcclxuXHJcbiAgICAgICBjbGlwLXBhdGg6IHVybCgjc3ZnLXBhdGgpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0IHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byAxZnI7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XHJcbiAgICAgICAgZ3JpZC1nYXA6IDEuNWVtIDEuMjVlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltZ3dyYXAge1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1nL2FxdWEtY2lyY2xlLWJ1YmJsZS5wbmcnKSBuby1yZXBlYXQgdG9wIGxlZnQ7XHJcbiAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICAgIHdpZHRoOiA1OHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgICAgICB3aWR0aDogMS40ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjRlbTtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZGcge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICAgICAganVzdGlmeS1zZWxmOiBzdGFydDtcclxuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xyXG4gICAgICAgIGdyaWQtcm93OiAxIC8gMjtcclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxLjVlbTtcclxuICAgICAgICAgICAgYm90dG9tOiAtLjVlbTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDM7XHJcbiAgICAgICAgZ3JpZC1yb3c6IDIgLyAzOyAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3BhcmEge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zcGFuIHtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiBkYXJrZW4oJGFxdWEsIDE1JSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19xdW90ZSB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjRlbTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDNlbSAwO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDRlbTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJlbTtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogMS41ZW07XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBtaW4tY29udGVudCAxZnI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgODAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xNTAlKSBzY2FsZSgxLjQpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTg0MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgICAgICBtYXJnaW46IDIuNWVtIDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICAvL2dyaWQtY29sdW1uLWdhcDogMWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAzZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMS41ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3F1b3RlLnZpc2libGUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19xdW90ZSBzcGFuIHtcclxuICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgICAgICBjb2xvcjogJGdyYXktbGlnaHQ7XHJcbiAgICAgICAgZm9udC1zaXplOiA4ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IC41O1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLjJlbSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IC40NTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuXHJcblxyXG5cclxuIiwiXHJcbi5oZXJvX193cmFwLS1maXZlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL3N0YWZmLW1hc2tzLmpwZWcnKTtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0MiU7XHJcbn1cclxuXHJcbi8qKioqIGlQaG9uZXMgbGFuZHNjYXBlICoqKioqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzMjBweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA1NjhweClcclxuICBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMilcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgICAuaGVyb19fd3JhcC0tZml2ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgfSBcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIFxyXG4gIGFuZCAobWluLWRldmljZS13aWR0aDogMzc1cHgpIFxyXG4gIGFuZCAobWF4LWRldmljZS13aWR0aDogNjY3cHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKVxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgeyBcclxuICAgIC5oZXJvX193cmFwLS1maXZlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICB9IFxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiA0MTRweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA3MzZweCkgXHJcbiAgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpXHJcbiAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7IFxyXG4gICAgIC5oZXJvX193cmFwLS1maXZlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICB9IFxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gXHJcbiAgYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAzNzVweCkgXHJcbiAgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiA4MTJweCkgXHJcbiAgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpXHJcbiAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7IFxyXG4gICAgLmhlcm9fX3dyYXAtLWZpdmUge1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIH0gXHJcbn1cclxuXHJcbi8qKioqKioqIEdhbGF4eSBQaG9uZXMgbGFuZHNjYXBlICoqKioqKiovXHJcbkBtZWRpYSBzY3JlZW4gXHJcbiAgYW5kIChkZXZpY2Utd2lkdGg6IDMyMHB4KSBcclxuICBhbmQgKGRldmljZS1oZWlnaHQ6IDY0MHB4KSBcclxuICBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSBcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIC5oZXJvX193cmFwIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgfVxyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIFxyXG4gIGFuZCAoZGV2aWNlLXdpZHRoOiAzMjBweCkgXHJcbiAgYW5kIChkZXZpY2UtaGVpZ2h0OiA2NDBweCkgXHJcbiAgYW5kICgtd2Via2l0LWRldmljZS1waXhlbC1yYXRpbzogMykgXHJcbiAgYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XHJcbiAgICAuaGVyb19fd3JhcCB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBcclxuICBhbmQgKGRldmljZS13aWR0aDogMzYwcHgpIFxyXG4gIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDQpIFxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbi8qKioqKioqIFBpeGVsIFBob25lcyBsYW5kc2NhcGUgKioqKioqKi9cclxuQG1lZGlhIHNjcmVlbiBcclxuICBhbmQgKGRldmljZS13aWR0aDogMzYwcHgpIFxyXG4gIGFuZCAoZGV2aWNlLWhlaWdodDogNjQwcHgpIFxyXG4gIGFuZCAoLXdlYmtpdC1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpIFxyXG4gIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgLmhlcm9fX3dyYXAge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gXHJcbiAgYW5kIChkZXZpY2Utd2lkdGg6IDM2MHB4KSBcclxuICBhbmQgKGRldmljZS1oZWlnaHQ6IDY0MHB4KSBcclxuICBhbmQgKC13ZWJraXQtZGV2aWNlLXBpeGVsLXJhdGlvOiA0KSBcclxuICBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcclxuICAgIC5oZXJvX193cmFwIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgfVxyXG59XHJcblxyXG5cclxuLnN0YWZmIHtcclxuICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG8gMCBhdXRvO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjQ1cHgpIHtcclxuICAgICAgICBwYWRkaW5nOiA2ZW0gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYWJvdXQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBtYXJnaW46IDZlbSBhdXRvIDhlbSBhdXRvO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgICAgICBtYXJnaW46IDRlbSBhdXRvIDVlbSBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5NSU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcblxyXG4gICAgJl9fb2ZmaWNlLXdyYXAge1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qKioqKiBOT1QgLW1zLWRpc3BsYXk6IGdyaWQgKioqKi9cclxuICAgICAgICBkaXNwbGF5OiAtbXMtZ3JpZDtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIC1tcy1ncmlkLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmciAxZnI7ICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgLyoqIGlmIGl0cyBJRSAxMSB0aGVuIEkgaGF2ZSBhZGRlZCBtYXJnaW4gdG8gbWFrZSB1cCBmb3IgdGhpcyAqKi9cclxuICAgICAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW4tZ2FwOiAxLjVlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVlbTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAzZW07XHJcbiAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NDVweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMGVtO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8qKiBpZiBpdHMgSUUgMTEgdGhlbiBJIGhhdmUgYWRkZWQgbWFyZ2luIHRvIG1ha2UgdXAgZm9yIHRoaXMgKiovXHJcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDdlbSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2luZGl2aWR1YWwge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4NzBweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMjIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTgwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NDVweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMzAwcHg7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvKioqIHJlbW92ZSB0aGUgbWFyZ2luIGRlY2xhcmVkIGJlbG93IHRoZSBAc3VwcG9ydHMgZm9yIGJyb3dzZXJzIHRoYXQgc3VwcG9ydCBncmlkICoqKi9cclxuICAgICAgICAgICAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8qKiogZmFsbGJhY2sgZm9yIGdyaWQtZ2FwICoqL1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0byA3ZW0gYXV0bztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2luZGl2aWR1YWw6Zmlyc3Qtb2YtdHlwZSB7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgIC1tcy1ncmlkLXJvdzogMTtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW5kaXZpZHVhbDpudGgtb2YtdHlwZSgyKSB7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAyO1xyXG4gICAgICAgIC1tcy1ncmlkLXJvdzogMTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjQ1cHgpIHtcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgICAgICAtbXMtZ3JpZC1yb3c6IDI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbmRpdmlkdWFsOm50aC1vZi10eXBlKDMpIHtcclxuICAgICAgICAtbXMtZ3JpZC1jb2x1bW46IDM7XHJcbiAgICAgICAgLW1zLWdyaWQtcm93OiAxO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NDVweCkge1xyXG4gICAgICAgICAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XHJcbiAgICAgICAgICAgIC1tcy1ncmlkLXJvdzogMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2ltYWdlIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAtMTIlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIGxlZnQ6IDEwJTtcclxuICAgICAgICByaWdodDogMTAlO1xyXG4gICAgICAgIHotaW5kZXg6IDM7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDEwMjBweCkge1xyXG4gICAgICAgICAgICBib3R0b206IC0xNSU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4NzBweCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxLjJlbSAxZW07XHJcbiAgICAgICAgICAgIGJvdHRvbTogLTEyJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDUlO1xyXG4gICAgICAgICAgICByaWdodDogNSU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogLTE0LjUlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNjQ1cHgpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgICAgICBib3R0b206IC0xMiU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDEwJTtcclxuICAgICAgICAgICAgcmlnaHQ6IDEwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5LS1ub2Fic29sdXRlIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiBhdXRvO1xyXG4gICAgICAgIGxlZnQ6IGF1dG87XHJcbiAgICAgICAgcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgYm90dG9tOiBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgcGFkZGluZzogMmVtO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMnB4IDJweCByZ2JhKDAsMCwwLC4yKTtcclxuICAgICAgICBtYXJnaW46IDMuNWVtIGF1dG87XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMS41ZW0gMWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45MmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRwaW5rLWJydXNoO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIC5zdGFmZl9fdGl0bGUge1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciAuc3RhZmZfX2VtYWlsIHtcclxuICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIgLnN0YWZmX19pY29uIHtcclxuICAgICAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnk6aG92ZXI6OmFmdGVyIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnk6aG92ZXIgJl9fdGl0bGUge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG4gICAgJl9fc3VtbWFyeTpob3ZlciAmX19lbWFpbCB7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnk6aG92ZXIgJl9faWNvbiB7XHJcbiAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3VtbWFyeTo6YWZ0ZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGhlaWdodDogM3B4O1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRwaW5rLWJydXNoO1xyXG4gICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogaGVpZ2h0IDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5LS1ibHVlOjphZnRlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGJsdWUtYnJ1c2g7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnktLWdyZWVuOjphZnRlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGdyZWVuLWJydXNoO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zdW1tYXJ5LS1vcmFuZ2U6OmFmdGVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkb3JhbmdlLWJydXNoO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19uYW1lIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fZW1haWwge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC4xNWVtO1xyXG4gICAgICAgIGNvbG9yOiBsaWdodGVuKCRyb3lhbGJsdWUsIDE1JSk7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkcm95YWxibHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggODcwcHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDY0NXB4KSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgd2lkdGg6IDFlbTtcclxuICAgICAgICBoZWlnaHQ6IDFlbTtcclxuICAgICAgICBmaWxsOiBsaWdodGVuKCRyb3lhbGJsdWUsIDE1JSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICBcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggODcwcHgpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjA1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NDVweCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgIC8qKioqKioqIFRFQUNIRVJTICoqKioqKi9cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtZ3JpZCB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBkaXNwbGF5OiAtbXMtZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnI7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uczogMWZyIDNmcjtcclxuICAgICAgICBcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDRlbTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAzZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtbGlzdCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgIC1tcy1ncmlkLXJvdzogMTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgICAgICAtbXMtZ3JpZC1yb3c6IDE7XHJcbiAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWhkZyB7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGFxdWE7XHJcbiAgICAgICAgaGVpZ2h0OiA5M3B4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBsaW5lLWhlaWdodDogOTNweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIGZsZXg6IDAgMCAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtaGRnOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQ7XHJcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUgYXQgMTBweCAtNXB4LCB0cmFuc3BhcmVudCAxNHB4LCAjZjhmOGY4IDE2cHgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1oZGc6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgIGhlaWdodDogMTJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggMjBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggMTVweCwgI2Y4ZjhmOCAxMnB4LCB0cmFuc3BhcmVudCAxM3B4KVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1idG1oZGcge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRhcXVhO1xyXG4gICAgICAgIGhlaWdodDogOTNweDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWJ0bWhkZzo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgIGhlaWdodDogMTJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggLTVweCwgdHJhbnNwYXJlbnQgMTRweCwgI2Y4ZjhmOCAxNnB4KTtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1idG1oZGc6OmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xyXG4gICAgICAgIGhlaWdodDogMTJweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggMjBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlIGF0IDEwcHggMTVweCwgI2Y4ZjhmOCAxMnB4LCB0cmFuc3BhcmVudCAxM3B4KTtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1pdGVtIHtcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAuNWVtOyAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWl0ZW0tLWZpcnN0IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMDsgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1pdGVtLS1sYXN0IHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiBjYWxjKDkzcHggKyAxZW0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLWxpbmsge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBBcmlhbDtcclxuICAgICAgICBcclxuICAgICAgICBjb2xvcjogJGdyYXktZGFya2VzdDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1saW5rLS1jdXJyZW50IHtcclxuICAgICAgICBjb2xvcjogJGFxdWE7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZWFjaGVycy1saXN0b3V0IHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCA1MDBtcyBlYXNlLW91dDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtbGlzdG91dC0tdmlzaWJsZSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy10YWJsZS13cmFwIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBcclxuICAgICAgICAtbXMtZ3JpZC1jb2x1bW46IDI7XHJcbiAgICAgICAgLW1zLWdyaWQtcm93OiAxO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcclxuICAgICAgICAgICAgLW1zLWdyaWQtcm93OiAyO1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgICAgIGdyaWQtcm93OiAyIC8gMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fdGVhY2hlcnMtdGFibGUge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy10YWJsZSB0cjpudGgtb2YtdHlwZShvZGQpIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1kYXJrZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RlYWNoZXJzLXRhYmxlIHRyOm50aC1vZi10eXBlKGV2ZW4pIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1kYXJrO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy10YWJsZSB0aCB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy10YWJsZSB0ZCB7XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAuNWVtIC41ZW0gMWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190ZWFjaGVycy1pY29uIHtcclxuICAgICAgICB3aWR0aDogMS41ZW07XHJcbiAgICAgICAgaGVpZ2h0OiAxLjVlbTtcclxuICAgICAgICBmaWxsOiAjZmZmO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGZpbGwgMzUwbXMgZWFzZS1vdXQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGZpbGw6ICRhcXVhO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiIsIi8qIE1BWSBORUVEIFRPIEFERCBPVkVSRkxPVy1YOiBISURERU4gT04gVEFCTEUgT1IgVEFCTEUgV1JBUFBFUiBFTEVNRU5UUyBTSU5DRSBUSEVZIEFSRSBPRkZTQ1JFRU4gSE9SSVpPTlRBTExZIEFORCBUSEUgQU5JTUFURUQgSU4gKi9cclxuXHJcblxyXG4uaGVyb19fd3JhcC0tdGhyZWUge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLDAsMCwuMyksIHJnYmEoMCwwLDAsLjMpKSwgdXJsKCcuLi9pbWcvc2Nob29sLXJvb20tLWxhcmdlLmpwZycpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwwLDAsLjMpLCByZ2JhKDAsMCwwLC4zKSksIHVybCgnLi4vaW1nL3NjaG9vbC1yb29tLS1zbWFsbC5qcGcnKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi5wcm9ncmFtIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICBcclxuICAgICZfX3NwbGl0LS1vbmUge1xyXG4gICAgICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uczogMWZyIDJmcjtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAyZnI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuMDUpO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDJlbTtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIC1tcy1ncmlkLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxOGVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAtMTMuNWVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3BsaXQtY2VsbC0tb25lIHtcclxuICAgICAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgICAgIC1tcy1ncmlkLXJvdzogMjtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDIgLyAzO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB9ICAgICAgIFxyXG5cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdHJhbnNsYXRlIHtcclxuICAgICAgICBwYWRkaW5nOiAyZW07XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuODUpO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogNXB4IHNvbGlkICRhcXVhO1xyXG5cdFx0bWF4LXdpZHRoOiA3NTBweDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW07XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdHJhbnNsYXRlLS1vbmUge1xyXG4gICAgICAgIHdpZHRoOiAxNTAlO1xyXG4gICAgICAgIGxlZnQ6IDA7IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICBsZWZ0OiAxMCU7XHJcbiAgICAgICAgfSAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoIDUwMHB4KSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA5MCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDUlO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogLjVlbTtcclxuICAgICAgICB9IFxyXG5cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcGFyYWEge1xyXG4gICAgICAgbGluZS1oZWlnaHQ6IDEuNDsgXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX3NwbGl0LWNlbGwtLXR3byB7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAyO1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAyIC8gMztcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgICAgIC1tcy1ncmlkLXJvdzogMTtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDEgLyAyO1xyXG4gICAgICAgIH0gIFxyXG4gICAgICAgIFxyXG4gICAgICAgICYgaW1nIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAvKiB0aGlzIGlzIG5lZWRlZCB0byBnZXQgaXQgdG8gZXhwYW5kIHdpZHRoIHRvIHRoZSByaWdodCAqL1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bzsgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBcclxuICAgICZfX3NwbGl0LS10d28ge1xyXG4gICAgICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uczogMmZyIDFmcjtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAxZnI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuMDUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICAtbXMtZ3JpZC1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIC8qIGV4dHJhIHRvcCBtYXJnaW4gYXMgdGhlcmUgbG9va3MgbGlrZSBtYXJnaW4gY29sbGFwc2luZyAqL1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxNmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyN2VtO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyOWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NwbGl0LWNlbGwtLXRocmVlIHtcclxuICAgICAgICAtbXMtZ3JpZC1jb2x1bW46IDE7XHJcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICAtbXMtZ3JpZC1yb3c6IDE7XHJcbiAgICAgICAgICAgIGdyaWQtcm93OiAxIC8gMjtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgICYgaW1nIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JheS1saWdodGVyO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3BsaXQtY2VsbC0tZm91ciB7XHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAyO1xyXG4gICAgICAgIGdyaWQtY29sdW1uOiAyIC8gMztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS03NjApIHtcclxuICAgICAgICAgICAgLW1zLWdyaWQtY29sdW1uOiAxO1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgICAgIC1tcy1ncmlkLXJvdzogMjtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDIgLyAzO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIH0gICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RyYW5zbGF0ZS0tdHdvIHtcclxuICAgICAgICAvKiB3aWRlciBzaW5jZSBpdCBoYXMgbW9yZSBjb250ZW50ICovXHJcbiAgICAgICAgd2lkdGg6IDE1MCU7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0tNzYwKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDEwJTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICBsZWZ0OiA1JTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8qKiogdXNpbmcgdG9wIERPRVMgTk9UIFdPUksgaGVyZSAgKioqL1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTMwJSk7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICBcclxuICAgICZfX3dyYXAgeyAgICAgXHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMmVtO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMmVtO1xyXG4gICAgICAgIG1heC13aWR0aDogMTI4MHB4O1xyXG4gICAgICAgIG1hcmdpbjogOGVtIGF1dG8gNmVtIGF1dG87XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMWVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogLjVlbTtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAuNWVtO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0IHtcclxuICAgICAgICBtYXJnaW46IDAgYXV0byAzZW0gYXV0bztcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2VyLTExMjApIHtcclxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19zZWN0LWZsZXgge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktbGlnaHRlcjtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA4ZW07XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfSBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3QtZmxleDpsYXN0LW9mLXR5cGUge1xyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3QtZmxleC0tcmV2ZXJzZSB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbiAgICAmX19wYXJhLXdyYXAge1xyXG4gICAgICAgIGZsZXg6IDE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKiBmbGV4Ym94IGZpeCBmb3IgSUUxMSAqKi9cclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJl9fcGFyYS13cmFwIHtcclxuICAgICAgICAgICAgZmxleDogYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyogb3ZlcnJpZGUgSUUxMSBzdHlsZSBhYm92ZSAqL1xyXG4gICAgICAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcclxuICAgICAgICAgICAgJl9fcGFyYS13cmFwIHtcclxuICAgICAgICAgICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ICAgXHJcbiAgICB9IFxyXG5cclxuICAgIFxyXG4gICAgJl9fcGFyYSB7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMS41ZW0gMWVtIDFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW0gMWVtIDJlbSAxZW07XHJcbiAgICAgICAgfSBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19wYXJhLS1yZXZlcnNlIHtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMWVtIDFlbSAxLjVlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bSkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW0gMWVtIDJlbSAxZW07XHJcbiAgICAgICAgfSBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fbGluayB7XHJcbiAgICAgICAgY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDMwMG1zIGVhc2Utb3V0O1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogZGFya2VuKCRhcXVhLCAxNSUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc21hbGwge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlLXdyYXAge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhcXVhO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHBhZGRpbmc6IDJlbTtcclxuICAgICAgICBcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAyZW0gMWVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IC0xMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogLTEycHg7XHJcbiAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IC01cHgsIHRyYW5zcGFyZW50IDE0cHgsICRhcXVhIDE2cHgpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0xMnB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8qIE5FRUQgVE8gVU5ETyBUSEUgTkVHQVRJVkUgTUFSR0lOPz8gKi9cclxuICAgICAgICAgICAgfSBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IC0xMDAlO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogLTEycHg7XHJcbiAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMnB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwcHggMjBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSBhdCAxMHB4IDE1cHgsICRhcXVhIDEycHgsIHRyYW5zcGFyZW50IDEzcHgpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0xMnB4O1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8qIE5FRUQgVE8gVU5ETyBUSEUgTkVHQVRJVkUgTUFSR0lOPz8gKi9cclxuICAgICAgICAgICAgfSBcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qKiBmbGV4Ym94IGZpeCBmb3IgSUUxMSAqKi9cclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJl9fdGFibGUtd3JhcCB7XHJcbiAgICAgICAgICAgIGZsZXg6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8qIG92ZXJyaWRlIElFMTEgc3R5bGUgYWJvdmUgKi9cclxuICAgICAgICAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XHJcbiAgICAgICAgICAgICZfX3RhYmxlLXdyYXAge1xyXG4gICAgICAgICAgICAgICAgZmxleDogMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gICBcclxuICAgIH0gXHJcbiAgICBcclxuICAgIC8qKiogcm90YXRpb24gaXMgOTBkZWcgbm90IC05MCBhbmQgbWFyZ2luIGlzIC0yMiwgbm90IC0xMiAqKiovXHJcbiAgICAmX190YWJsZS13cmFwLS1yZXZlcnNlIHtcclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLTIycHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtMTAwJTtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtKSB7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgICAgIHRvcDogLTEycHg7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLyogTkVFRCBUTyBVTkRPIFRIRSBORUdBVElWRSBNQVJHSU4/PyAqL1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMjJweDtcclxuICAgICAgICAgICAgcmlnaHQ6IC0xMDAlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtZWRpdW0pIHtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMTJweDtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvKiBORUVEIFRPIFVORE8gVEhFIE5FR0FUSVZFIE1BUkdJTj8/ICovXHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190YWJsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDgwMG1zIGN1YmljLWJlemllciguNzUsIC0wLjUsIC4yNSwgMS4zMik7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwMCUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAuOTVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlLS1yZXZlcnNlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwMCUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190YWJsZS0tdmlzaWJsZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlIHRyOm50aC1vZi10eXBlKDFuKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlIHRyOm50aC1vZi10eXBlKDJuKSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwuMilcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUtcm93LS1vbmUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwaW5rLWJydXNoICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlLXJvdy0tdHdvIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZS1icnVzaCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190YWJsZS1yb3ctLXRocmVlIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JlZW4tYnJ1c2ggIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdGFibGUgdGgge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBBcmlhbDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNzVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RhYmxlIHRkIHtcclxuICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNzVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbn1cclxuXHJcbiIsIlxyXG5cclxuLmhlcm9fX3dyYXAtLWZvdXIge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvY2hhbGtib2FyZC0tYmx1ZS1oaWdocmVzLmpwZycpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1nL2NoYWxrYm9hcmQtLWJsdWUtaGlnaHJlcy0tc21hbGwuanBnJyk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuLmN1cnJpY3VsdW0ge1xyXG4gICAgcGFkZGluZzogMTBlbSAwIDZlbSAwO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS1zbWFsbC03MDApIHtcclxuICAgICAgICBwYWRkaW5nOiA4ZW0gMCAzZW0gMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGRnIHtcclxuICAgICAgICBmb250LWZhbWlseTogJ0J1YmJsZWd1bSBTYW5zJywgQXJpYWw7XHJcbiAgICAgICAgZm9udC1zaXplOiA3ZW07XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fd3JhcCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICAgICAgbWFyZ2luOiA2ZW0gYXV0byAwIGF1dG87XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3Qtd3JhcCB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3NlY3Qge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmF5LWxpZ2h0ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogOGVtO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xyXG4gICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0byA4ZW0gYXV0bztcclxuICAgICAgICAgICAgYm9yZGVyOiAwO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDJweCAycHggcmdiYSgwLDAsMCwuMyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLXNtYWxsLTcwMCkge1xyXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTYxNSkge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAycHggM3B4IHJnYmEoMCwwLDAsLjQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6bm90KC5uby0tbGluZSk6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXktbGlnaHRlcjtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC00ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIFxyXG4gICAgJl9fc2VjdC0tcmV2ZXJzZSB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19pbWFnZSB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA2MCU7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2VyLTExMjApIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8qID8/Pz8/Pz8gKi9cclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjU1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbW9iaWxlLWhhbWJ1cmdlcikge1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKiBUaGlzIGlzIG5lY2Vzc2FyeSB0byBtYWtlIHRoZSBib3R0b20gcmF0aW8gc2VjdGlvbiBmaWxsIHRoZSBlbnRpcmUgaGVpZ2h0IG9mIGl0cyBjb250ZW50cyAqL1xyXG4gICAgLyogZmxleGJveCBmaXggZm9yIElFMTEgKiovXHJcbiAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGdyaWQpIHtcclxuICAgICAgICAmX19tYWluIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB9ICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX190b3Age1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcGluay1icnVzaDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIDJlbSAyZW0gMmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00MDApIHtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RvcC0tYmx1ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWUtYnJ1c2g7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RvcC0tZ3JlZW4ge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmVlbi1icnVzaDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fdG9wLS1vcmFuZ2Uge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRvcmFuZ2UtYnJ1c2g7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnQnViYmxlZ3VtIFNhbnMnLCBjdXJzaXZlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNmVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRtb2JpbGUtaGFtYnVyZ2VyKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjQ1ZW07XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFydHMge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjVlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faGVhcnRzIGRpdiB7XHJcbiAgICAgICAgei1pbmRleDogOTk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYXJ0cyBkaXYgKyBkaXYge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAuMWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19oZWFydHM6OmJlZm9yZSB7XHJcbiAgICAgICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDQ0JTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2hlYXJ0cy1pY29uIHtcclxuICAgICAgICBoZWlnaHQ6IDE4cHg7XHJcbiAgICAgICAgd2lkdGg6IDE4cHg7XHJcbiAgICAgICAgZmlsbDogI2ZmZjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3N1bW1hcnkge1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJGxhcmdlci0xMTIwKSB7XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1O1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1vYmlsZS1oYW1idXJnZXIpIHtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMDVlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2xpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICNkZGQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19wcmljZSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgICAgIHBhZGRpbmc6IC43NWVtIDEuNWVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDk5ZW07XHJcbiAgICAgICAgbWFyZ2luOiAyZW0gYXV0byAxZW0gYXV0bztcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCByZ2JhKDAsMCwwLC40KTtcclxuICAgICAgICB0cmFuc2l0aW9uOiBcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvciAzMDBtcyBlYXNlLW91dCxcclxuICAgICAgICAgICAgY29sb3IgMzAwbXMgZWFzZS1vdXQsXHJcbiAgICAgICAgICAgIHRyYW5zZm9ybSAxNTBtcyBsaW5lYXI7XHJcbiAgICAgICAgd2lkdGg6IDEwZW07XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTc2MCkge1xyXG4gICAgICAgICAgICBtYXJnaW46IDJlbSBhdXRvIC41ZW0gYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbC01NjApIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAyZW0gYXV0byAxZW0gYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45NWVtO1xyXG4gICAgICAgICAgICB3aWR0aDogOGVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgY29sb3I6ICRwaW5rLWJydXNoO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmFjdGl2ZSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDFweCwgMnB4KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3ByaWNlLS1ibHVlIHtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRibHVlLWJydXNoO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcHJpY2UtLWdyZWVuIHtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRncmVlbi1icnVzaDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3ByaWNlLS1vcmFuZ2Uge1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBjb2xvcjogJG9yYW5nZS1icnVzaDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX25vdGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLjVlbTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fYm90dG9tIHtcclxuICAgICAgICBjb2xvcjogJGdyYXktZGFyaztcclxuICAgICAgICBwYWRkaW5nOiAxLjc1ZW07XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyogVGhpcyBpcyBuZWNlc3NhcnkgdG8gbWFrZSB0aGUgYm90dG9tIHJhdGlvIHNlY3Rpb24gZmlsbCB0aGUgZW50aXJlIGhlaWdodCBvZiBpdHMgY29udGVudHMgKi9cclxuICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgIFxyXG4gICAgICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbGFyZ2VyLTExMjApIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3ViaGVhZGluZyB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS43NWVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRsYXJnZXItMTEyMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNTVlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNGVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcmF0aW8ge1xyXG4gICAgICAgIGZsZXg6IDE7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3JhdGlvIHtcclxuICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGdyYXktbGlnaHRlcjsgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8qIFVzaW5nIHRyYW5zbGF0ZSBzaW5jZSBwYWRkaW5nIG1ha2VzIHRoZSBib3R0b20gc2VjdCBnbyBoaWdoZXIgYW5kIHRodXMgdGhlIGVudGlyZSBjdXJyaWN1bHVtX19zZWN0IGlzIGdvaW5nIGhpZ2hlciAqL1xyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAvKnRyYW5zZm9ybTogdHJhbnNsYXRlWSguMjVlbSk7Ki9cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmX19udW1iZXIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xyXG4gICAgICAgIGNvbG9yOiAkYXF1YTtcclxuICAgICAgICAvKnRyYW5zZm9ybTogdHJhbnNsYXRlWSgtLjM1ZW0pOyovXHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRsYXJnZXItMTEyMCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuN2VtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbiIsIlxyXG5zdXAgeyB2ZXJ0aWNhbC1hbGlnbjogdG9wOyBmb250LXNpemU6IDAuNmVtOyB9XHJcblxyXG4uaGVyb19fd3JhcC0yLmNhbGVuZGFyIHtcclxuICAgIC8vYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvaGVybzIuanBnJyk7XHJcbiAgICBoZWlnaHQ6IDB2aDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5jYWxlbmRhci0td3JhcCB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uL2ltZy9jbG91ZC1iZy5wbmcnKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGhzbCgxODUsIDEwMCUsIDMwJSk7XHJcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xyXG4gICAgcGFkZGluZy10b3A6IDEwZW07XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBlbTtcclxufVxyXG5cclxuXHJcbi5mb290ZXIuY2FsIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwwLDAsLjUpLCByZ2JhKDAsMCwwLC41KSksIHVybCgnLi4vaW1nL2Zvb3Rlci0tYmcucG5nJyk7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbi8qIGZpeCB0byBtYWtlIGhlaWdodCBzdGF5IGZ1bGwgaGVpZ2h0IG9mIGNhbGVuZGFyIGF0IG1vYmlsZSB2aWV3cG9ydHMgKi9cclxuXHJcbi5mYy11bnRoZW1lZCB0aCwgLmZjLXVudGhlbWVkIHRkLCAuZmMtdW50aGVtZWQgdGhlYWQsIC5mYy11bnRoZW1lZCB0Ym9keSwgLmZjLXVudGhlbWVkIC5mYy1kaXZpZGVyLCAuZmMtdW50aGVtZWQgLmZjLXJvdywgLmZjLXVudGhlbWVkIC5mYy1jb250ZW50LCAuZmMtdW50aGVtZWQgLmZjLXBvcG92ZXIsIC5mYy11bnRoZW1lZCAuZmMtbGlzdC12aWV3LCAuZmMtdW50aGVtZWQgLmZjLWxpc3QtaGVhZGluZyB0ZCAge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5mYy1zY3JvbGxlci5mYy1kYXktZ3JpZC1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG5ib2R5IC5mYyB7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA2NzBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjllbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjg1ZW0gIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQwMCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjhlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcblxyXG5AaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsLTU2MCkge1xyXG4gICAgLmZjLXRvb2xiYXIge1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmZjLWNlbnRlciB7XHJcbiAgICAgICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICAgICAgb3JkZXI6IC0xO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuZmMtZGF5R3JpZC12aWV3IC5mYy1ib2R5IC5mYy1yb3cge1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDYuMjVlbSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG59IFxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iLCJcclxuLm5vdGUge1xyXG4gICAgZm9udC1zaXplOiAxLjNlbTtcclxuICAgIGNvbG9yOiBkYXJrcmVkO1xyXG4gICAgbWFyZ2luLXRvcDogMWVtO1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjogM2VtIGF1dG8gMmVtIGF1dG87XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBkYXJrcmVkO1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG59XHJcblxyXG4uaGVyb19fd3JhcC0tc2V2ZW4ge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLDAsMCwuMyksIHJnYmEoMCwwLDAsLjMpKSwgdXJsKCcuLi9pbWcvYnVzaW5lc3MtZ2lybC0tbGFyZ2UuanBnJyk7XHJcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IHNjcm9sbDtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggNTAwcHgpIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsMCwwLC4zKSwgcmdiYSgwLDAsMCwuMykpLCB1cmwoJy4uL2ltZy9idXNpbmVzcy1naXJsLS1zbWFsbC5qcGcnKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcblxyXG4uZm9ybXMge1xyXG4gICAgXHJcbiAgICAmX19ncmlkIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA2ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3dyYXAge1xyXG4gICAgICAgIGRpc3BsYXk6IC1tcy1ncmlkO1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgY29sb3I6ICRncmF5LWRhcmtlc3Q7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLyoqIG1pbi1jb250ZW50IGFuZCBtYXgtY29udGVudCBhcmUgc3VwcG9ydGVkIGJ5IGllMTEgKiovXHJcbiAgICAgICAgLW1zLWdyaWQtY29sdW1uczogbWluLWNvbnRlbnQgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogbWluLWNvbnRlbnQgMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgIGdyaWQtY29sdW1uLWdhcDogMWVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIuNWVtOyBcclxuICAgIH0gIFxyXG4gICAgXHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBcclxuICAgICAgICAvKiogZ3JpZCBpdGVtIGNhbm5vdCBiZSBhbiBpbmxpbmUgZWxlbWVudCBpbiBJRTExICoqL1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC1tcy1ncmlkLWNvbHVtbjogMTtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIDI7XHJcbiAgICAgICAgLyoqIG11c3QgdXNlIHRoZSBmb2xsb3dpbmcgMiBmb3IgYSByb3cgb3IgY29sIHNwYW4gKiovXHJcbiAgICAgICAgLW1zLWdyaWQtcm93OiAxO1xyXG4gICAgICAgIC1tcy1ncmlkLXJvdy1zcGFuOiAyO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGdyaWQtcm93OiAxIC8gMztcclxuICAgICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAzMDBtcyBlYXNlLW91dDtcclxuICAgICAgICBcclxuICAgICAgICAvKiogZmFsbGJhY2sgZm9yIGdyaWQtZ2FwIGluIElFMTEgKiovXHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XHJcbiAgICAgICAgLyoqIHJlc2V0IG1hcmdpbiBmb3IgYnJvd3NlcnMgdGhhdCBzdXBwb3J0IGdyaWQgKiovXHJcbiAgICAgICAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkZ3JheTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIC1tcy1ncmlkLWNvbHVtbjogMjtcclxuICAgICAgICBncmlkLWNvbHVtbjogMiAvIDM7XHJcbiAgICAgICAgLW1zLWdyaWQtcm93OiAxO1xyXG4gICAgICAgIGdyaWQtcm93OiAxIC8gMjtcclxuICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qKiBpZTExIHN5bnRheCBmb3IgYWxpZ24tc2VsZiAgKiovXHJcbiAgICAgICAgLW1zLWdyaWQtcm93LWFsaWduOiBlbmQ7XHJcbiAgICAgICAgYWxpZ24tc2VsZjogZW5kO1xyXG4gICAgICAgIFxyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IC4xZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICRzbWFsbGVyLTQ1MCkge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX2luZm8ge1xyXG4gICAgICAgIC1tcy1ncmlkLWNvbHVtbjogMjtcclxuICAgICAgICBncmlkLWNvbHVtbjogMiAvIDM7XHJcbiAgICAgICAgLW1zLWdyaWQtcm93OiAyO1xyXG4gICAgICAgIGdyaWQtcm93OiAyIC8gMztcclxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLW1zLWdyaWQtcm93LWFsaWduOiBzdGFydDtcclxuICAgICAgICBhbGlnbi1zZWxmOiBzdGFydDtcclxuICAgICAgICBcclxuICAgICAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDUwKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbiIsIi8qXHJcbnRlbXAgZml4IHRvIGt3ZXMgcmVtb3ZpbmcgdGhlIGNsYXNzIG5hbWUgZnJvbSB0aGUgZm9ybVxyXG4uc3Vic2NyaWJlIGZvcm0ge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjUwcHgsIDFmcikpO1xyXG4gICAgZ3JpZC1nYXA6IDNlbSAxLjVlbTtcclxufVxyXG5cclxuKi9cclxuXHJcbi8qXHJcbktXRVMgV1JBUFMgRUFDSCBJTlBVVCBFTEVNRU5UIElOIEEgU1BBTiAua3ctZmllbGQtd3JhcHBlciBzbyB0aGUgMTAwJSB3aWR0aCBuZWVkcyB0byBiZSBhZGRlZCB0byB0aGlzIHNwYW4gYnV0IEkgc3RpbGwgbWlnaHQgbmVlZCB0byBhY2NvdW50IGZvciB0aGUgc3VibWl0IGJ1dHRvbiBhbnkgdGltZSBpcyBpcyBhIGJ1dHRvbiBlbGVtZW50IGFuZCBOT1QgYSBpbnB1dCB0eXBlPXN1Ym1pdCBlbGVtZW50XHJcbiovXHJcblxyXG4vLy5rdy1maWVsZC13cmFwcGVyIHtcclxuLy8gICAgd2lkdGg6IDEwMCU7XHJcbi8vfVxyXG5cclxuLy8ga2VlcHMgdGhlIGVycm9yIG1zZ3MgZnJvbSBtZXNzaW5nIHVwIHRoZSBsYXlvdXRcclxuLy8ua3dlcy1maWVsZC13cmFwcGVyIC5oZWxwIHtcclxuLy8gICAgcG9zaXRpb246IGFic29sdXRlXHJcbi8vfVxyXG5cclxuIC8vJl9fZmllbGQtcHJlZml4ZWQge1xyXG4gICAgICAgIC8vZGlzcGxheTogZmxleDtcclxuICAgICAgICBcclxuLy8gbWlnaHQganVzdCBiZSBmaWVsZC1wcmVmaXhlZFxyXG5cclxuXHJcbi8qKiogQUREIFRISVMgUE9TSVRJT04gUkVMQVRJVkUgTUFZQkUhISEhICoqKioqL1xyXG4gICAgICAgIC8vIHRoaXMgaXMgbmVlZCB0byBrZWVwIHRoZSBlcnJvciBtc2dzIGZyb20gbWVzc2luZyB1cCB0aGUgbGF5b3V0XHJcbiAgICAgICAgLy9wb3NpdGlvbjogcmVsYXRpdmU7IFxyXG4gICAvLyB9XHJcblxyXG5cclxuLy8gaGVpZ2h0IGZvciB0ZXh0YXJlYSBuZWVkcyB0byBiZSBvbiBpdHMgd3JhcHBlclxyXG4gLy8gICAmX19maWVsZC1wcmVmaXhlZCAua3ctZmllbGQtd3JhcHBlci02IHtcclxuIC8vICAgICAgIGhlaWdodDogNmVtO1xyXG4vLyAgfVxyXG5cclxuXHJcblxyXG4vKioqKiogS1dFUyBTVFlMRVMgU1RBUlQgKioqKi9cclxuLmt3LWZpZWxkLXdyYXBwZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5rd2VzLWZpZWxkLXdyYXBwZXIgLmhlbHAge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlXHJcbn1cclxuXHJcblxyXG4vKiBURVhUQVJFQSAqL1xyXG4ua3ctZmllbGQtd3JhcHBlci02IHtcclxuICAgIGhlaWdodDogNmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuLyogVGhpcyBtYXRjaGVzIHBlbmNpbCBpY29uIHdyYXAgdG8gYmUgdGhlIHNhbWUgaGVpZ2h0IGF0IHRoZSB0ZXh0YXJlYSBmaWVsZCAtLXdoeSA4IGFuZCBub3QgNj8/Pz8/PyAqL1xyXG4jYXBwbGljYW50LXBlbmNpbC1wcmVmaXgge1xyXG4gICAgaGVpZ2h0OiA4ZW07XHJcbn1cclxuLyoqKioqIEtXRVMgU1RZTEVTIEVORCAqKioqL1xyXG5cclxuXHJcblxyXG4uaGVyb19fd3JhcC0tZWlnaHQge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLDAsMCwuMiksIHJnYmEoMCwwLDAsLjIpKSwgdXJsKCcuLi9pbWcvaGVyby1jb250YWN0LmpwZycpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA1MDBweCkge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMCwwLDAsLjIpLCByZ2JhKDAsMCwwLC4yKSksIHVybCgnLi4vaW1nL2hlcm8tY29udGFjdC0tc21hbGwuanBnJyk7XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuLmZvcm0td3JhcHBlciB7XHJcbiAgICBtYXJnaW46IDRlbSBhdXRvIDRlbSBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiAxMjgwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS04NDApIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcbi8vQ09OVEFDVCBTRUNUXHJcblxyXG4uY29udGFjdCB7XHJcbiAgICBwYWRkaW5nOiA4ZW0gMWVtO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJHNtYWxsZXItNDAwKSB7XHJcbiAgICAgICAgcGFkZGluZzogNWVtIDA7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5jb250YWN0cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHJveWFsYmx1ZSwgMTAlKTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMS4yNWVtO1xyXG4gICAgZmxleDogMTtcclxufVxyXG5cclxuLmNvbnRhY3Qtd3JhcCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGhlaWdodDogMTAwJTsgLy93aHkgaXMgdGhpcyBuZWVkZWQ/XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkbWVkaXVtLTg0MCkge1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi53cmFwcHktLW9uZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gICAgXHJcbiAgICBAaW5jbHVkZSBicmVha3BvaW50IChtYXgtd2lkdGggJG1lZGl1bS04NDApIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgYnJlYWtwb2ludCAobWF4LXdpZHRoICR0aW55LTM2OSkge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG5cclxuLmNvbnRhY3QtaGRnIHtcclxuICAgIG1hcmdpbi1ib3R0b206IC4zZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbn1cclxuXHJcbi5jb250YWN0LWljb24ge1xyXG4gICAgZmlsbDogJGFxdWE7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAuMWVtO1xyXG4gICAgd2lkdGg6IDEuMmVtO1xyXG4gICAgaGVpZ2h0OiAxLjJlbTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSguMmVtKTtcclxufVxyXG5cclxuLmNvbnRhY3QtaGRnLXNwYW4ge1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIGZvbnQtc2l6ZTogLjkxNWVtO1xyXG59XHJcblxyXG4uY29udGFjdC1pdGVtIHtcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCA4OTBweCkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjk1ZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkdGlueS0zNjkpIHtcclxuICAgICAgICBmb250LXNpemU6IDFlbTtcclxuICAgIH1cclxufVxyXG5cclxuLmNvbnRhY3QtaXRlbSArIC5jb250YWN0LWl0ZW0ge1xyXG4gICAgbWFyZ2luLXRvcDogLjNlbTtcclxufVxyXG5cclxuLyogRml4IGZvciBpcGhvbmUgc2FmYXJpIGJyb3dzZXIgc2hvd2luZyBibHVlIHRleHQgKi9cclxuLmNvbnRhY3QtaXRlbS0tZ3JheSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmNvbnRhY3QtaXRlbS5ob3VycyB7XHJcbiAgICBjb2xvcjogJGFxdWE7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjNlbTtcclxufVxyXG5cclxuLmNvbnRhY3QtaXRlbS5ob3Vyczpub3QoOmxhc3Qtb2YtdHlwZSkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjc1ZW07XHJcbn1cclxuXHJcbi8vTUFJTiBGT1JNXHJcbi5mb3JtIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDAsMCwwLC40KSwgcmdiYSgwLDAsMCwuNCkpLCB1cmwoJy4uL2ltZy9jaGlsZC13cml0aW5nLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIHBhZGRpbmc6IDRlbSAxLjVlbTtcclxuICAgIGZsZXg6IDQ7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGxlci00NTApIHtcclxuICAgICAgICBwYWRkaW5nOiAyZW0gLjc1ZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbmZvcm0ge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgIGdyaWQtZ2FwOiAxZW07XHJcbiAgICBwYWRkaW5nLXRvcDogM2VtO1xyXG59XHJcblxyXG4uZnVsbC13aWR0aDpsYXN0LW9mLXR5cGUge1xyXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5maWVsZC10ZXh0IGlucHV0LFxyXG4uZmllbGQtdGV4dCB0ZXh0YXJlYSxcclxuLnN1Ym1pdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAgLjI1ZW0gLjI1ZW0gMDtcclxuICAgIHBhZGRpbmc6IC4zNzVlbTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICAgIGNvbG9yOiBpbmhlcml0OyAgXHJcbn1cclxuXHJcbi5maWVsZC10ZXh0IGlucHV0IHtcclxuICAgIGhlaWdodDogMi4xMjVlbTsgIFxyXG59XHJcblxyXG4uZmllbGQtdGV4dCBpbnB1dDpmb2N1cyxcclxuLmZpZWxkLXRleHQgdGV4dGFyZWE6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTsgICAgXHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgLjVlbSByZ2JhKDkzLCAxNjIsIDI0OCwgMC41KTsgIFxyXG59XHJcblxyXG5mb3JtIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbn1cclxuXHJcbi5maWVsZC1wcmVmaXhlZCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlIC8qIEtXRVMgLSBNQVkgTk9UIE5FRUQgVEVTVCBJVCAqKi9cclxufVxyXG5cclxuLmZpZWxkLXByZWZpeCB7XHJcbiAgICBmbGV4OiAwIDAgMi4yZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yaWdodDogMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IC4yNWVtIDAgMCAuMjVlbTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IC4zNzVlbTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRyb3lhbGJsdWUsIDEwJSk7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zIGVhc2Utb3V0IDEwMG1zO1xyXG59XHJcblxyXG4uZmllbGQtcHJlZml4LmJhY2tncm91bmQtY29sb3Ige1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcclxufVxyXG5cclxuLmZvcm0taWNvbiB7XHJcbiAgICB3aWR0aDogMWVtO1xyXG4gICAgaGVpZ2h0OiAxZW07XHJcbiAgICBmaWxsOiAjZmZmO1xyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMzAwbXMgZWFzZS1pbjtcclxufVxyXG5cclxuZm9ybSBwIHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgaGVpZ2h0OiA4ZW07XHJcbiAgICByZXNpemU6IG5vbmU7XHJcbn1cclxuXHJcbi8qIGNoYW5nZWQgZnJvbSAxIC8gMyBiZWNhdXNlIG90aGVyd2lzZSB0aGVyZSB3aWxsIEFMV0FZUyBiZSB0d28gY29sdW1ucyovXHJcbi5mdWxsLXdpZHRoIHtcclxuICAgIGdyaWQtY29sdW1uOiAxIC8gLTE7XHJcbn1cclxuXHJcbkBpbmNsdWRlIGJyZWFrcG9pbnQgKG1heC13aWR0aCAkc21hbGwtNTYwKSB7XHJcbiAgICBcclxuICAgIC5maWVsZC10ZXh0IHtcclxuICAgICAgICBncmlkLWNvbHVtbjogMSAvIC0xO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG59XHJcblxyXG5cclxuLmZ1bGwtd2lkdGg6bGFzdC1vZi10eXBlIHtcclxuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG59XHJcblxyXG4uc3VibWl0IHtcclxuICAgIG1hcmdpbi10b3A6IDJlbTtcclxuICAgIHBhZGRpbmc6IC42ZW0gMS4yZW07XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgkcm95YWxibHVlLCBkYXJrZW4oJHJveWFsYmx1ZSwgOCUpLCk7XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDJweCByZ2JhKDAsMCwwLC40KTtcclxufVxyXG5cclxuLnN1Ym1pdDpob3ZlciB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5zdWJtaXQ6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLnN1Ym1pdDphY3RpdmUge1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgwLDAsMCwuNCk7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCAxcHgpO1xyXG59XHJcblxyXG4uc3VibWl0IHNwYW4ge1xyXG4gICAgbWFyZ2luOiAwIC4zZW0gLjJlbSAwO1xyXG59XHJcblxyXG4uc3VibWl0IC5mb3JtLWljb24ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDJweCk7XHJcbn1cclxuXHJcblxyXG5cclxuLyogU2V0IHRoZSBzaXplIG9mIHRoZSBkaXYgZWxlbWVudCB0aGF0IGNvbnRhaW5zIHRoZSBtYXAgKi9cclxuI21hcCB7XHJcbiAgaGVpZ2h0OiA0MDBweDsgIFxyXG4gIHdpZHRoOiAxMDAlOyAgXHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl19 */
